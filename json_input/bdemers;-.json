{"contentItems": [{"content": "Nexus Cookies do not specify port, resulting in cookies from are sent to. I tracked this down to cookies do not typically set the port. So per RFC can be sent to a different server as long as the host name is the same. Setting the port in the cookie may cause other issues with browsers (and how does this play with firewalls and proxies) One simple solution is to make the cookie name configurable. If we ever switch to shiro-guice (which will remove a bunch of other code) we could easily the cookie name. Or if we are going to keep our boiler plate code, we could configure the cookie name in to call Original Setup: I started two nexus pro instances locally. Nexus A - - publisher Nexus B - - subscriber Established a Smart Proxy trust between A and B. Created repo on Nexus B proxied to Nexus A Besides logging into the UI only a few times I noticed the following after a short while in the Nexus B logs: jvm 1 INFO - - Validating all active jvm 1 INFO - - Finished session validation. sessions were stopped. Nexus A seemed to have 169 sessions cleaned up. How is it that 274 sessions were created? Are these being created by smart proxy?. There is unsynchronized write access to the private member variable in Threads are likely backing up within the call in this method that is made to false ) - assuming that is synchronized deeper in the call stack - which would cause repetitive reassignment of the targets and potentially behavior with multiple threads calling concurrently. I don't know that this explains the NPE but that certainly seems plausible. Also, it is also possible for a thread calling to possibly skip the entire \"if\" block associated with the null condition for and creating the collection to be returned from a partially configured set of Target instances. This latter situation does not seem as though it would generate the NPE though. This does not appear to be a regression and is probably the result of the addition of the new repos for Scala Tools. This also seems like it may require a potentially precarious fix with the addition of the necessary locking. The urgency of this for OSSRH is probably somewhat high as the configuration is changed quite often and the number of repositories is high. (This needs to be validated) If staging actions by users cause the configuration to be reloaded, this is very likely to be a hot spot. However, it does seem that this particular failure was coincident with the action Juven was taking at the time (certainly no fault of his). In summary, it seems that unsafe thread operations corrupted the contents of With a null value in that list, Nexus will fail.. Example log lines: jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2 jvm 2. Make Jetty use slf4j as all the sonatype apps does.. Make Jetty use slf4j as all the sonatype apps does. Make usernames case insensitive for the XML realm. Currently the following two usernames and are independant users within the user database. Some users add uppercase characters to their username even when given in all lowercase which can cause some problems in logging into the system. By making the username case insensitive this will ensure this confusion cannot occur. NOTE: we need to make sure this solution will work for cases where the realm implementation expects case sensitive IDs (not sure on that use case though) (my guess is this is just a simple toLower() fix before we lookup the userID in hashmap in memory). should be DEBUG in my opinion And. we should not validate read only roles. This will hide the error, and it will appear as everything is working fine (which in this case it is). Current text: Maybe something like:. Currently has these files: This is IMO way overkill to configure logging, which is essentially a very simple configuration. I understand we want to retain the properties to cope with the simlpe 4 parameter Log Configuration panel, so that would be: Why is this configuration so complicated? Solution from kick off: Add DO NOT TOUCH messages to top of files (except the which should tell users what to Add good documentation to to tell a user what to do to change the logging levels rename to (this is the one the users can edit). Work was done as part of: NXCM-3492 to figure out how to make the proxy attributes faster. We came to the conclusion that this is NOT the best place to optimize. However there are a few things we could do to improve performance. One of the standouts is change the to only be updated every 12 hours (this time may change, but will be somewhere between 12 and 24) This should NOT be configurable via the UI, but we should consider keeping it as a system property. See the work that was done on the branch (The performance tests should be merged to master, the extra cruft for Jackson json xml should be thrown out) NOTE: we may need to strip the time portion off the last access date on the UI info panel. When CSS files hosted below a 'maven-site' repo (any sub folder) are requested with \"Accept text css\" a 406 response for the CSS file is returned - this means the CSS file in question will not be loaded by the browser. (This happens when IE9 is configured to use browser modus \"IE9\" and document modus When the same CSS file is requested with \"Accept \" via a direct URL) the CSS file is delivered correctly with \"Content-Type text css\" in the response header. shell log: curl -u -H -D - 200 OK Date: Fri, GMT Server: Content-Type: text css Last-Modified: Thu, GMT ETag: Vary: 222 Set-Cookie: Path nexus; HttpOnly Set-Cookie: Path nexus; Max-Age 0; Expires Thu, GMT Connection: close banner, footer, leftcol, breadcrumbs, .docs toc, .docs leftColumn, navColumn bodyColumn, curl -u -H -D - 406 The resource identified by the request is only capable of generating response entities which have content not acceptable according to the accept headers sent in the request Date: Fri, GMT Server: Content-Type: text html; Cache-Control: 1782 Set-Cookie: Path nexus; HttpOnly Set-Cookie: Path nexus; Max-Age 0; Expires Thu, GMT Connection: close. Can't start Nexus with Java 7. If a remote index fails to download due to problems we should end the \"download index\" task with a \"broken\" state. Note that 403 is very common when going through a proxy that blocks downloads.. nexus is silent when it does not have permissions to update. The role-request XML payload is not documented correctly. This should be:. Upgrade Shiro version to ( removes log spam ). create a maven 2 repository group \"child\" crate a maven 2 repository group \"parent\", add \"child\" as it's only member attempt to add \"parent\" to the \"child\" group. This fails with an error, as it should. Now create a Maven 2 hosted repository. After this, the \"parent\" is a member of \"child\". Attempting to access either group results in a stack overflow.. Running \"Expire cache\" by right clicking on the \"local storage\" tab's tree fails with 403 error even when user has \"Clear Repository Caches\" privilege It appears that the reason for this is the DELETE request is sent without a trailing \" \"? DELETE. It should be: User-agent: This needs to be in the release notes, and needs to say something about how this will only take effect if the webapp context is ' '. Many of our users mistakenly think that the lucene indexes need to be completely rebuilt periodically. We need to make it clear that this isn't necessary. Here's a proposal to start the discussion. Existing \"re-index\" task goes away, and the new set of tasks looks like this: Proxy Repositories: This will check for updates on the remote, and download and process them as appropriate Hosted Repositories: No-Op Existing \"re-index\" jobs would be converted to \"update index\" jobs. Proxy Repositories: Download and process full index from remote. Hosted Repositories: Rebuild index from information on disk We might want to consider prohibiting users from scheduling this task to ute periodically. If we did this it would impact a few customers who deploy directly to local storage, these would need to run the repair index task via REST. Same as today, publishes indexes for downstream consumption. In the log after hitting \"Test SMTP Settings\". So we know that the problem is an authentication error. However the user sees \"400 bad request\" (see screenshot). We should give a reasonable error message in this case.. ", "contenttype": "application/json", "created": 737358, "id": 72, "language": "en", "user_name": "bdemers", "email": "-"}]}