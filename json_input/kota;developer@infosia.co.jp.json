{"contentItems": [{"content": "Currently if you need to create module project for VS 2013, you need to run . Unfortunately doesn't work in this case. But basically Titanium CLI should be able to select appropriate VS version accordingly without demanding user input. So on or , CLI should select VS version accordingly: - When user installs VS 2013 only, cmake VS 2013 generator should be selected - When user installs VS 2015 only, cmake VS 2015 generator should be selected - When user installs both VS 2015 and VS 2013, cmake VS 2015 generator should be selected because it's newer. Windows: logging from native module doesn't work. Windows: is not working. I have a ListView with Data Binding set up. I have a transform function attached to the binding of a ListSection. But if my transform function doesn't return data the ListItem expects, it crashes the view window or throws an error which is unusable (unknown error). So for example But transform doesn't give the variable labelText, or (not 100% confirmed yet) it returns null empty result. In this case it goes wrong. Happens with Alloy coupled with and and. Relates to TIMOB-18952 After lots of investigation & trial, I almost came up with a conclusion that it is not possible to enable JavaScript Ti context in background service. It's obviously too much to have two JavaScript Ti instances at once (foreground & background), and the platform does not allow it. It's too much enough to screw up things (app freeze device forced to restart, etc). We have one more choice so far then: which is . This should enable native module to react when background trigger is fired. Because it's a native module, you should be able to do anything you need. This means you need to code with C++ instead of JS (too bad) but at least we have last resort to implement custom logic.. Found out command line is just wrong. There is a shell script to do the build. Updated description.. Windows: Building native module using \"appc ti\" fails. Building native module using fails with uncaught exception. Building with went through.. Windows: Native module How-To documentation. Windows: Lock orientation mode. Windows: doesn't handle Windows-style path. Enabling background task requires \"badge icon\" when building for Windows Store. It is required to package the app even when badge is not actually used. FYI: Enabling background task. Support localization for application name. See also:. Implement missing properties. - - - -. Windows: Implement missing properties. Windows: ScrollView does not respect `top` property on views. on Windows doesn't support Titanium API in the HTML as known as \"local script\" as described in the . Especially , and logging functions are not available. See also:. writes wrong UTF-8 data. For instance following code doesn't show the string correctly.. Windows: Investigate crash dump analysis library. Windows: Enable SAFESEH for Windows 10 x86 build. As of Windows 10, Windows Store App began to handle its independent Window and does not run under full-screen mode. Because Titanium API basically runs under mobile environment, we don't usually think about size of main Window. We want to handle Window size under Store App.. does not return valid OS version on Windows 10. It seems it's returning driver version or something now (on Surface Pro 3), so in the I've implemented it as returning fixed number for a workaround.. On Windows 10, hangs.. Windows: selected event doesn't work. event doesn't work.. Windows: for Label. Implement support for .. Windows: Implement properties. Implement -related properties for Windows such as , , , and etc.. and for Windows should be able to support background color image such as and .. Windows: background color image for and TabGroup. Windows: Missing events in ScrollableVIew. Windows: Label only supports \"click\" event. Currently only supports event. should introduce some touch events on Label and it should work, and we want to make sure it works on Label.. Implement missing properties in . - toBlob - autorotate - decodeRetries - defaultImage - - hires -. Currently only supports event. It should support , etc when possible. Note that should introduce some touch events on Button and it should work, and we want to make sure it works on Button.. Currently doesn't support property.. As of , font cache is introduced to improve font lookup, but and are not using it. Make sure to use for the font lookup.. Windows: animation events. Implement missing animation events in . (start, stop etc). Implement missing properties and functions for Windows. Also, I think the supported API matrix in is not quite right. (For example, the not-supported API is marked \"supported\" for Windows). Implement Locale properties as much as possible.. Windows: TextField's passwordMask attribute does not work on Windows Phone. Windows: Missing TitaniumKit View properties. Windows: Support Windows 10 Mobile. Windows: noexcept mismatch when targeting Visual Studio 2015. We have been seeing our NMocha test is failing more frequently than before. We might want to see what's going on there.. Windows: Compile JavaScriptCore targeting Windows 10. Windows: ignores existing assets. Windows: Missing icon in package manifest. Windows: CLI Support targeting Windows 10 platform. If any of the app icons are missing, then search for and us it to generate missing app icons. You simply need to the base Builder object's method: Here's a good article on MSDN about the assets for Windows apps:. \"click\" callback fires wrong callback function. For example following code should print \"Callback from Push 1\" when you push Push1 button, and should print \"Callback from Push 2\" when you push Push2.. Windows: fireEvent fires only one listener. Windows: Changing Tab in TabGroup should reload ListView. Windows: Implement TabGroup for Windows Store as Pivot Control is Windows Phone only. Windows: throws Catastrophic Failure exception. On Windows Phone, background color of components tend to be transparent, and the text color tend to be set causes confusion when Window color is white, because some components like and looks disappear. The issue is that some sample apps from Appcelerator tend to have white background color by default, which might be looking good with iOS. But on Windows Phone we need to make it black or something other than white. So make sure sample app does not have white background:. Windows: Update and properties on CI build. Windows: hardware back button should close. HAL: Variables using unicode characters cause Application Error. Implement ScrollView is used by which is used for Titanium default two tab app template. To test this, run all tests under and and also make sure Titanium default app (the NG app) works as expected.. ", "contenttype": "application/json", "created": 737603, "id": 73, "language": "en", "user_name": "kota", "email": "developer@infosia.co.jp"}]}