{"contentItems": [{"content": "User provides a jar file exposing a custom bean of type under the base package and installs it in xd lib. The XD runtime uses this bean during initialization to replace any property value containing the prefix from any properties source with the decrypted value.. Update SI, Spring, and AMQP dependencies. As a XD developer, I'd like to upgrade to SI Spring and AMQP dependencies, so I can take advantage of the latest improvements.. Ultimately module classes should themselves be a module so that testing a Source for example would use a TestSink and the message verified on the sink input(). This is currently a placeholder which includes: Corresponding Changes to the to eliminate and provide support for easily using the test's if necessary, test-specific annotations Refactor existing module test code. Replace with generic SI Components. Make requirement for MD5 hash files configurable for the custom module registry. Post upgrade, the custom modules no longer show up by just copying the jars to the directory. Instead I have to use the 'module upload' command to install the modules. This is because an MD5 file is required. More details in .. Move serialization codec from XD to Spring Integration. Rename binder properties. replace with prefix with. XD will not have direct dependency on the Binder (as MB has been renamed). The message bus code is in XD but some is required to support current integration tests. We can look at pruning it some more but complete removal likely depends on integrating the enabled Admin SPI. MB will remain in XD. Actually only the projects renamed. Class and package rename is TBD.. Copy to SCS as. This addresses The plugin issue to disable. Fail fast on Kryo registration conflicts. TupleCode should retain custom formatting settings. Refactor MessageBus to avoid unnecessary use of MessageBuilder. As a developer, I'd like to refactor the programmatic means by which the MessageBus transforms the Message so throughput performance can be optimized.. SCS - Verify Fix implementation. Accept any file name for top level module resources. Expecting in module configuration is brittle, especially in conjunction with module upload command which permits the module to be registered under a different name. The convention should be dropped in favor of any file name. This requires at most one and or in the top level config folder. It is an exception if multiples are found. Accepting any file name provides the most flexibility without sacrificing backward compatibility (except in rare cases in which a module developer may have violated the multiple xml or properties files condition). An alternate approach requiring a well known file name such as were rejected over concerns that it would break any existing custom module. Upgrade to Boot RELEASE and the dependencies. Add support for common dependent jars for modules. ModuleFactory is responsible for determining how the Module application context is created from available sources at the resource location exposed via the The factory creates the application context and creates a SimpleModule or as For example, if an XML file is present, it is assumed to be the bean definition file used to create a CXMLAC. If no XML file is present, inspect the properties file for the existence of well-known properties such as for component scanning for an or a for an Annotated POJO based module (see XD-2100). The MF is also responsible for creating composite modules. Also includes Module refactoring, add and probably Also refactor code to use boot. Create processor and sink modules that can ute a shell command using stdin and stdout to stream data.. Error message about memory leak when ctrl-c xd-container and xd-admin. How does not catch this?. Steps to verify: 1. Start XD (I verified both single node and distributed) 2. stream create test \"http log\" Use jolokia endpoint for container,. should also support end-user of the underlying MessageBus we have a customer requirement to enable configuration of the various RabbitMQ properties (for acks, txs, etc).. Currently the message bus is only obtained via Stream testing scenarios that depend on sending and receiving payloads via named channels do not require a deployed module instance per se, but any stream flow control uses the MessageBus directly. Getting a deployed module instance in general is expensive, you have to wait for the module to deploy whereas the MessageBus implementation could be known a priori when the application starts. An improvement would be to ask the container for its MessageBus.. Change default container port from 9000 to 8080. Change the default port since it conflicts with the default port for the http source. Investigate Swagger to generate REST API Documents. Enhance the stream parser to take message conversion into account in order to validate or automatically configure converters. For example: source sink is likely invalid since XD doesn't know how to convert Foo- Bar.. The ability to configure message conversion via parameters. Consider programatic configuration of data type channels. Values can be media type, or a java class name.. Twitter search source should produce JSON or Pojo. The Pojo requires a custom wrapper class that is JSON friendly zero arg constructor). The twittersearch module should have a parameter true false (default true) to control the output type.. provide a property on twittersearch to enable the transformer. MBeanServer should not be declared in module common configuration. Should be simple to test in isolation but also across transports (stream testing). String - byte byte - byte (no serialization) Pojo - configured serialization. The documented gemfire-cq example ( fails: create cqtest \"gemfire-cq ^. Add Server Runtime Info to Banner. Since most of the will do more then one thing (deploy a stream, start it, add a tap, add a job, stop, etc) we decided to decouple writing testcases with running it. Test cases will be written in spring-shell scriptlets. Scriptlets are json files with command and expectedResult as tokens. Here's an example: A parser will parse scriptlets, utes it and asserts on expected results.. Add conversion support to and. User wants to configure MessageBus. Used to track necessary refactoring or design review tasks. Technical Debt. - Container context should be separate from Admin Context in local mode (consistency across transports). Provide a to bridge deploy and undeploy channels to the ModuleDeployer - Verify Plugins are not in common module context. They are only needed by the ModuleDeployer not the Modules. - Add global-beans Config for beans to be shared among admin and container (and available to modules). This would be set as the parent context where needed. (Currently and JobRepository shared by Admin and modules) - Fix ModuleDeployer sets parentContext twice - Rename to NOTE: Analytics parent only required in local mode - Write unit tests to verify configurations are as expected. Correct bean and no stray beans or redundant instances where not needed - Decouple Command options from System properties (in general XD property names), this gives us some flexibility in mapping to properties or profiles where appropriate. Clean up Spring Configuration. Add create() and deploy() to TapsController. Examples: 1. Be able to start the rabbitmq source just by pointing to pass in some property file for parameters to be replaced, and outgoing message is placed in a in-memory queue backed channel for use with assertions to verify functionality. 2. Test for as many source types as is 'reasonable', MQTT TCP testing might be harder than say rabbitmq. 3. Test that sending json, results in media-type header is set to json 4. Test that sending POJO, \" POJO 5. Test that sending Tuple, \" Tuple 6. Test that sending raw bytes, \" raw bytes. Be able to point to the processor xml file, and have access to a source channel that drives messages into the processor and a output channel where output messages are send. The outbound channel is queue backed. Test sending JSON to a processor module that uses Tuples.. So that we can validate the message content in the stream. To send a pre-set message to processor(s). To send a pre-set message to process(es). The command line for xd-admin and xd-container to support an additional option, pipeProtocol, that is used to determine the middleware for sending admin requests and data between processing steps. A Flow or a processor component may require routing semantics. Currently the stream assumes a single input and output for each module. A Flow may support multiple outputs - Switch routing that is - Recipient list is not currently supported (another subtask?). We need to support semantics like: a. ", "contenttype": "application/json", "created": 737603, "id": 3, "language": "en", "user_name": "dturanski", "email": "dturanski@gopivotal.com"}]}