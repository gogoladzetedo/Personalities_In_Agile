{"contentItems": [{"content": "A comment with security level 'Developers' was removed.. When hovering over a HTML tag, we should display an action at the bottom of the hover (when focused) that will open the internal browser with the appropriate documentation and samples.. As a user, I'd like to get HTML help-page link when hovering over a HTML tag. At the moment, we only have DOM reference docs for HTML in the Studio's internal help pages. We need proper HTML help docs that provides better explanations and samples.. This task is for adding the suggestion when declaring a function. PHP now supports treating objects as functions. For example:. Content assist for types that use other traits should include the functionality that was defined in the traits. For example:. Add support for content assisting on a 'trait' use calls. For example: The traits suggestions should appear automatically after typing \"use\" and space. Or, can be forced up as usual with Ctrl+Space. We also need to make sure that \"namespace\" suggestions do not appear in that scope.. A comment with security level 'Developers' was removed.. Parentheses in a PHP comment may cause failure. The PHP documentation hover is not displaying docs that were defined in other files. Add portal controller to switch perspective. Add PHP trait declarations in the outline. Make modifications to the outline add nodes) to display the PHP trait declarations.. Code review the PHP Debugger. Code review the PHP debugger (See sub-tasks). We need to have the PHP indexing process triggered and controlled via the Also, we need to allow caching of the PHPParseState to improve performance (at the moment, caching is disabled to allow re-parsing and error flushing). This will require some modification in the indexer itself, and changes in the way we deliver the PHP errors to the markers (hold the errors in the parse-state, modify remove the. Formatting PHP nested in JS CSS code may cause code corruption. CSS Formatter does not place an 'At-Rule' in a new line (like. Our current unit test coverage hovers around 30% (class, method, block, and line) We need to get this higher. Here are the classes we need to test: Please create a sub-task for the class you want to test, and edit the document to indicate you've claimed that test. If there already is a task created for a particular class, it means someone else has claimed that one, so choose another. If there are a bunch of related classes, you can group that into one task. Coverage goals for all classes below is a minimum of 100% class, 70% method, 80% block, 80% line (default Emma values in Jenkins) HTML (Michael) Scanners (Chris) Ruby (Allen) Deployment Protocols SFTP Second Batch ClassUtil (Michael) EclipseUtil ExpiringMap FirefoxUtil (Done) (Done) IOUtil (Allen) ObjectPool PlatformUtil (Done) ProcessUtil (Chris) ResourceUtil SourcePrinter (Allen) StringUtil (Allen) URIUtil (Done) VersionUtil (Done) ZipUtil(Allen) Builder Pool SamplesManager (Michael). If multiple devices all present themselves with the same launched app and same security key, we need to allow the user to select between them Add a small 16px icon next to the device to identify it (iOS Android, but could eventually be something like iPhone iPad) * Okay Cancel to select a device. on the device also performs an \"OK\". Display a set of instructions when launching iOS \"Debug on Device\". Debugging on Device is a multi-step process, and we should guide the user through the steps. Once the user presses the \"debug on device\" command, pop up a dialog that shows the four steps: Sync to device (iTunes) Connected Suggest having a wizard page that appears when launching. The page will describe the four steps (1-4), and can help to resolve any setup issues.. Once we have a XSD for we need to validate the UI elements in the TiApp editor against it. Doing so requires: replacing whatever possible for the current validation scheme in the TiApp editor with the XSD validation.. We should support that for MobileWeb. h3. Run MobileWeb V1: V1: V2:. h3. Debug iOS V1: V2: h3. Notes For iOS, we may still need to call the 'killall' before the command.. We should support that for iOS. h3. Run iOS V1: V2:. Add CLI command support for packaging a MobileWeb Titanium Module. Add CLI command support an Android debug launch. h3. Debug Android V1: V2: h3. Notes We need to make sure that FastDev is supported by the new CLI. Add CLI command support to run an Android project. We should support that for all platforms. h3. Run Android V1: V2:. Add CLI command support for building a mobileweb project. This one is only for V2 The Python implementation in V1 does not support a building command. We should try call \"build\" again when we've cleaned all our projects and build automatically is checked. The platform does not support incremental builds, so that call should probably only happen when a 'clean-build' is performed.. Add extensions for the CLI commands that create a Titanium project (mobile module). h2. Project Creation V1 (Python): V2. Add CLI command support for creating a project. Tested on Titanium Studio, build: Still can't see newly created projects in the Analytics Apps. The strange thing is that the first app I created appeared, while any other app did not. Tested on release and on development and it acts the same.. Create a mobile-web project (with Titanium SDK Right click to run the 'Titanium Mobile Web Previewer'. An internal browser is opened, but the page is blank. Right-clicking and viewing the source shows lot of code there, so we have the content, yet it's not rendering. Selecting the launch (via the Run and editing it to run on external browser works fine.. Once we have a XSD for we need to validate against it. Doing so requires: build participant to wrap calling the XSD. Create XSD for and files. In order to create a better validation experience for and files suggestion is to create a XSD for them. Note that spans both mobile and desktop applications. I don't know if it's feasible to create a XSD that spans both cases, or if it should be split into two.. Add support for listing and importing sample projects through the Dashboard. when a project is closed. Create a project (for example, a project) Close the project (right click - Close) These error were found in the log:. Create two projects. Set a breakpoint at line 3 on the of project . Set a breakpoint at line 2 on the of project . Launch a debug session on project . Expected result: No breakpoint should hit. Actual: The application stops on the We need to make sure we only send out the relevant project breakpoints and not everything. If that's not possible, we can hook to the same area we hacked for TISTUD-4669 and skip breaks that we cannot associate with the actively debugged project.. (Note: This happens on only) Create a new Mobile Module project. Select the iOS option, hit 'Next' and 'Finish'. The wizard dialog hangs, and an error appears in the log.. Remove the 'Clear SD Card' option from the BlackBerry's Simulator launch configuration dialog. Right-click on a resource should display \"Debug - Local Server\" (like the run as), and should create a debug launch configuration on and launch. Existing launch configurations for the same projects should be re-used.. Adapt Google's ChromeDevTools \"Standalone V8 VM\" launch configuration to our needs. Rename it to debug as 'Local Server'. Make sure that the launch configuration delegate creates a local server with a debugger flag and runs it. Inject the server's port into the newly created launch configuration. Continue with the Google code launch as usual to connect to our local server.. Create a new source map extension point. Create a new source map extension point that will allow a contribution of IJSSourceMap contributors. Also allow prioritizing source-map contributions, so we could potentially contribute several mappers in the future. Each contributor should use the source-map mechanism to map back and forth source paths and line numbers. See TISTUD-3753.. Hookup standard output (stdout) to Console for BB10 apps (see description). Similar to TISTUD-2944, where we updated the alloy update style sheet, we need to do the same for the modules update style sheet. Right now the text in the module details is large and not consistent. The module JSON file should be updated to direct a release-notes page. This page should later be read by the release notes system and be applied with the same stylesheet we use for the rest.. TiApp Editor: Titanium SDK List Not Updated Until TiApp editor Restart. If the Titanium SDK path is switched to another valid SDK path, the SDK list in the TiApp Editor is not updated in realtime. Studio must be restarted. This does not occur in Studio This is a regression. Steps to Reproduce: 1. Copy full Titanium (sdk) folder to another location. 2. In the Titanium copy, delete a few SDKs (to provide contrast). 3. Open a Titanium Project. Open note the drop-down list of SDKs. 4. Change Preferences Titanium SDK Path to another SDK installation the copy). 5. Open the drop-down list in the again. Actual Result: The SDK list is the same because it wasn't refreshed on Preference change. The TiApp editor must be restarted. Expected Result: SDK list immediately updated as it is in Studio. Make the server Run configuration private. The discussion stemmed from parity on having Run Run menu for project. We decided to implement the following two things: 1. Make the launch configuration for running local server private; 2. Add \"Edit Server under Run menu to allow user to edit the server settings such as port number. NOTE: For now, this ticket only deals with making the launch configuration private. Doesn't look like there is a point in controlling the ACS server port number when the project launch is ignoring it anyway ;) New tickets will be created to deal with the other issues.. Set the \"platform\" property as 'optional' at the plugin element in tiapp XSD. When performing the debug on Android device using the wizard, the status will be displayed as the app is built and installed. When the 'Start app' step is the current step, we need to remove the step control and replace it with an animated gif of an app starting on a device.. Allow iOS and Android debug on device wizard to launch in background. A comment with security level 'Developers' was removed.. ", "contenttype": "application/json", "created": 737603, "id": 41, "language": "en", "user_name": "sgibly", "email": "sgibly@appcelerator.com"}]}