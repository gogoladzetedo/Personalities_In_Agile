{"contentItems": [{"content": "Add a test module for support. With the addition of to allow frameworks to request for their tasks, we should add a simple module that mimics the behavior of a real module for testing purposes. We can then add this module in and write some tests against it. This module can also serve as a template module for third-party network isolation provides for building their own network isolator modules.. Refactor Status Update method on Agent to handle HTTP based Executors. h2. This is one of several ROOT failing tests: we want to track them and for each of them decide whether to: remove; OR * redesign. (full verbose logs attached) h2. Steps to Reproduce Completely cleaned the build, removed directory, clean pull from (SHA: ) - same results, 9 failed tests:. h2. This is one of several ROOT failing tests: we want to track them and for each of them decide whether to: remove; OR * redesign. (full verbose logs attached) h2. Steps to Reproduce Completely cleaned the build, removed directory, clean pull from (SHA: ) - same results, 9 failed tests:. h2. This is one of several ROOT failing tests: we want to track them and for each of them decide whether to: remove; OR * redesign. (full verbose logs attached) h2. Steps to Reproduce Completely cleaned the build, removed directory, clean pull from (SHA: ) - same results, 9 failed tests:. Failing ROOT tests on CentOS -. h2. This is one of several ROOT failing tests: we want to track them and for each of them decide whether to: remove; OR * redesign. (full verbose logs attached) h2. Steps to Reproduce Completely cleaned the build, removed directory, clean pull from (SHA: ) - same results, 9 failed tests:. h2. This is one of several ROOT failing tests: we want to track them and for each of them decide whether to: remove; OR * redesign. (full verbose logs attached) h2. Steps to Reproduce Completely cleaned the build, removed directory, clean pull from (SHA: ) - same results, 9 failed tests:. With the new JSON published to ZK, we want to provide a simple library class for Java Framework developers to retrieve info about the masters and the leader.. Update Homebrew formula for Mesos (Mac OSX). We have pushed a to Homebrew for the new formula. Once accepted, we must verify that this works on a Mac OSX device. This would also be a great time to ensure our documentation is Currently, the Homebrew check fails, as they have deprecated SHA-1 checksums: Don't know enough about Homebrew to really figure out what is going on here; nor how to fix this. The Mesos SHA-256 has been correctly entered and computed via the . I guess, we should go download the packages and compute their SHA-256 and or research from the respective download sites whether they publish the SHA.. Uploaded a new PR:. Copied the text from this one to the original issue that triggered this.. `sudo make distcheck` fails on Ubuntu (and possibly other OSes too). yes, I thought it would be related to these, but I found not later. So, I commened to expain that before, OK, thanks all you guys.. Failing ROOT tests on CentOS. When reviewing the code in noticed that there is a better abstraction that is possible to introduce for that will simplify the caller's life. Instead of having to handle all possible outcomes, we propose to refactor as follows: where the returned string is and, should the program be signaled, or exit with a non-zero exit code, we will simply return a with an error message that will encapsulate both the state, and, possibly . And some test driven development: Alternatively, the caller can ask to have conflated with : However, will be ignored by default: An analysis of existing usage shows that in almost all cases, the caller only cares ; in fact, the actual exit code is read only once, and even then, in a test case. We believe this will simplify the API to the caller, and will significantly reduce the length and complexity at the calling sites (<6 LOC against the current 20+).. Testing the new workflow. This is a simple test story to try out the new workflow. Unfortunately, testing and getting it to work seems to be something that actually does take up time, so I'm tracking this here.. We will probably move this functionality to a separate module - thanks everyone for your feedback!. See attached screenshot - the story is in the state, so it should now have a button, but it has a one instead. Also, when in the it has an button (I think) or something similar; also other states appear inconsistent. This Story is about first looking at the workflow; ensuring the stories and their status(es) are consistent; that button in the UI are consistently applied and then correct any issues that may have been identified. The assumption here is that the workflow is: and, at each stage, it can be moved \"back by one\" (, , ) and that, at any stage, it can be moved to (for whatever reason).. Add validation behavior to FlagsBase. In every \"launcher\" file (ie, those containing some variation on ) there is a minor variation on: As this is default behavior, and we've added support for the flag in the class, we should add this too there and remove it from everywhere else. Additionally, a recurring behavior is checking for the presence of a flag: or some variation thereof: we should add automatic validation for required flags during parsing. This follows the DRY principle.. Following from some email conversation, I'm reporting here a proposal to add to the PB: Regarding version - we have (apparently a generated file : which we could easily use in to assemble the version. The problem with string-based version is that it's virtually impossible to come up with anything that will allow to terminally decide if version-x < version-y is the very problem that was meant to deal with. Something like: and we build a full version by concatenating the fields, with the optional build: you get the idea :) This way, we use canonically the to decide \"precedence\" (and, ideally, \"distance\" too) but folks can add whichever decoration they choose to enrich the Mesos version number.. Incorrect URI scheme causes Slave to SegFault. Add ability to decode JSON serialized MasterInfo from ZK. Currently to discover the master a client needs the ZK node location and access to the MasterInfo protobuf so it can deserialize the binary blob in the node. I think it would be nice to publish JSON (like Twitter's ServerSets) so clients are not tied to protobuf to do service discovery. This ticket is an intermediate step: we add in the ability for the to \"understand\" JSON Protobuf serialized format; this makes it compatible with both earlier versions, as well a future one (most likely, ) that will write the information in JSON format.. When doing a , the file is not getting installed in . This makes it impossible to do the following import when is set to the directory. The directories do have their corresponding files. Reproducing the bug:. The test framework is flaky, possibly related to a race condition between mutexes. Full logs attached.. ", "contenttype": "application/json", "created": 737358, "id": 55, "language": "en", "user_name": "marco-mesos", "email": "m.massenzio+mesos@gmail.com"}]}