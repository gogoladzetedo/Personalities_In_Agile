{"contentItems": [{"content": "The IPCount mechanism to prevent DoS attack write files under AppData. In regression we have found some locking issues and this locking can be more aggressive in web farm scenario (see related issue DNN-8086). The goal of this improvement is change the mechanism to use memory cache) or database to provide a more roboust solution. Caching should be the first option as we want have a very high performance mechanism. Database would imply a considerable number of read writes that could hit performance. In that case we should ensure that the solution does not impact the site overall performance. If we use a system based on cache we should consider web farm scenario.. With the new in place we decided to remove from the platform the code of the old user profile picture handler:. Noticed with build 599 local install. It happens to both install and uninstall. The module needs to be manually installed with build 599, it is located Host Extensions Available Extensions Provider. CKEditor should not be set as default Html Provider on Upgrades. CKEditor is set as default Html Provider on Upgrade and new Installation Scenario (for both Platform and Evoq Install: CKEditor is set as default html provider (OK) Upgrade: CKEditor shoud be installed but not set as default html provider (Error) Install: CKEditor is set as default html provider Upgrade: CKEditor shoud be installed but not set as default html provider. Reviewing the InstallWizard file I have found a couple of changes missing comparing the same file in version. For some reason these changes have been never included in the development branch.. h2. Card We need to completely remove the \"Getting Started\" from the template as well as anything special we do to inject this into the platform. h2. Conversation h2. Confirmation Note for DEV: please ensure that we remove anything related to that feature and we do not leave any dead code in the source.. Remove Advanced Settings. h2. Card One DNN 7 \"feature\" that I think needs to be added to items for DNN 8 cleanup is the removal of the Advanced Settings screen. This page was created to \"simplify\" settings by aggregating many common settings into one location. What this ultimately did was complicate things by giving people multiple locations for accomplishing the same task. It didn't remove options, but instead duplicated options that were already available. h2. Conversation Often the way this was implemented was by re-using existing user controls in the new Advanced Settings screen. This approach is blocking the team's ability to separate out the Skins module since one of the user controls in the skins module is also used in the advanced settings page. See DNN-6637. h2. Confirmation The Advanced Configuration Setting page and module should be uninstalled and removed in upgrade and new install of platform Note for DEV: please ensure that we remove anything related to that feature and we do not leave any dead code in the source. Keep in mind that probably all the user control used by this module does not belong to him as are from other module. In this case we cannot cleanup these files as part of this story.. The current format of the Content Item is in json and for a type like Product (see below): Product Description (string) Picture (integer) Is in the following format: This format is currently over complex the structure of the json and could be simplified with a more natural and intuitive format (similar of what MongoDB use as well): The proposed format: save spaces in the database it is easier to read Note: the content type Id is also probably no required as this information is already stored in the Content Item table: Note for DEV: we should carefully review if this new proposed format fits with any needs of the DCC: Lists *. DCC API - Simplify Dynamic Content Item json format. In the current implementation any content template file is a file stored inside Portals X folder (where X is default for global templates or the ID of the portal for local templates). This space is managed by the DNN Folder Provider system. This means that depending on the configuration of the folder the templates could be locally in the server file system (standard folder provider), in the database (database folder provider) or even in remote location Azure, Amazon, DropBox folder provider, see Cloud configuration that by default use Azure folder provider). The current implementation always assumes that these files are stored locally. See method in the class This latter assumption seems related to how the current DCC Module MVC implementation works that need to be able to reach the template file physically in the file system: We probably need to discuss more this part. Having the template under the Folder Provider could expose several issues: Admin Content Manager from DAM or Assets could delete those files causing inconsistency unwished issues in the DCC system We could consider store the templates files under Benefits: We always ensure that the files are locally stored and accessible via the Server File System : Admin couldnt edit replace these file from DAM. Currently all the logic to delete or add a template is in the Web Methods of the DCC Admin Module. See Delete Template Save Template Note: Similar code is duplicated in the Business Controller of the Admin module to create the default templates. We should move this code down into the API level class) as this is something that the API should be able to manage, so third party or other component do not need to care about templates files logic and any operation using the API is atomic and consistent. As part of this task we will need to write: * Unit and if needed and possible Integration Tests. Quick Settings Implement as a JQuery plugin. DCC - Error creating new content field with invalid field type.. The goal of this task is perform an architectural review of DCC Architecture. : Ensure proper indexes are in place Ensure system will not create overly large tables, thus requiring lots of disk space Queries are efficient and combined together : We have decent caching so that we are not hitting database for every page load (anonymous and registered users both) Ensure client side JS is optimal. In case of detection of any issues a new jiras will be created and link to this task.. DCC - Architectural Review. DCC - Possible dead loop in content types definition. EVOQCONTENT - Auto hit the site again during installation makes the IUpgradable runs in parallel with portal 0 creation. Auto hit the site again during installation makes the IUpgradable runs in parallel with portal 0 creation. Open a new browser tab while the install is in process Actual result The IUpgradable runs in parallel with the portal creation process making the result of the installation unpredictable or even broken. * The installation process should prevent this managing any other request to the site and run IUpgradable only once the installation + portal creation end properly. Note: this is an issue that likely exists since (when the code base was moved to github) or even before.. Remove ContentList Module. EVOQCONTENT - Password UI issues. EVOQCONTENT - DAM: UNC folder provider - folder remains in DAM after it was deleted in the remote server. EVOQCONTENT - Site search not working for tags with html characters. EVOQCONTENT - Sync Knockout javascript library version stored under. In Platform tab workflow was implemented and the AddTab method was changed to start workflow (if workflow was enabled) on page creation. We have detected issues with this approach as the page version is created only when you have modules on the page. So we can have scenario where you try to complete a tab workflow with no pending to be published version. This scenario was already handled in Evoq but making things complex. It was a workaround instead the right solution. The goal of the task is remove the code that start the workflow on tab creation. And let that the workflow mechanism is fired by the page change tracking system (add, move, delete modules, : this change does not impact Platform behavior as tab workflow is not enabled.. EVOQCONTENT - Do not start Workflow in AddTab Method. Module Actions - add support to identify in the DOM the module actions menu items. In Platform the module actions in Edit Mode are generated as a list. Currently there is not an elegant way to identify menu item in the DOM like: Import Help Today we can only identify the Delete module action as it has an ID that looks like: + MODULEID + \"-Delete\". The proposal is extend this mechanism to: Settings, Import, Export and Help.. EVOQCONTENT - Page Versioning Negative ContentItemId errors. EVOQCONTENT - Content Layout: ModuleAction js error when moving Layout position in a pane. EVOQCONTENT - Move modules doesn't work correctly when have deleted modules. EVOQCONTENT - Admin Page Management doesn't work properly. EVOQCONTENT - Recycle Bin Restore Tab does not work. Module Online Help button should not visible if the module manifest does not specify a helpUrl. Install a module that have the view module control with an empty tag put the module on the page enter in edit mode expand the module actions and click on Help check the content of the dialog The dialog shows a \"Help Online\" button that does not work, when the user clicks on it nothing happens. The system should not show this button and or provide a message that online help is not available for this module. EVOQCONTENT - Page Versions Rollback can be done in the backend for the last page version. Add a service to that allows to delete (soft) a module included in one tab. Note: this web method should be only available to Admin Host and created for integration testing purposes.. EVOQCONTENT - Add a method to allow to delete (soft) modules. With this improvent we will be able to create and manage System Tabs. A System Tab could be considered as a special tab, created by solution purposes, different fron tabs created by users. As these tabs may have a specific functionality, we should add some restrictions on the solution ir order to not break that functionality or not create corrupted data. TabController should manage System Tabs as they are other normal tabs Tab will be just a new field in the TabInfo entity we need to ensure that some existing features doesn't manage System Tabs, as following: - Export Site: System Tabs are specific for a portal and installation, therefore they should not be exported - Sitemap: System Tabs are not pages created by users, they should not be part of the explicit navigation, therefore they should not appear in the Sitemap - Content Localization: System Tabs are not pages created by users, they should not be localized - Page Picker: System tabs should not visible. EVOQCONTENT - Add Page missing events in Platform. h2. Card: Site Settings extension point code references to DigitalAssets Module. This should be something more generic as other module could inject some extensions. The module name used in the extension point metadata should be. UI UX review performed. It looks good.. Currently some of the web methods return a 200 http response with an empty body on success. This has issue when jQuery ajax calls are performed with as the empty response is handled as an error (empty response is an invalid json). The will fix this changing the empty success response with. The utils class works with private STATIC imgWidth and imgHeight members. These two fields should be removed and created as method variables. Statics members have issues in concurrency scenario. The profile picture thumbnails are created when requested if they have not been generated previously or if they have been removed (see for further details). If the user loads a page with a lot of user profile pictures of the same user Journal in the Profile Page) we can run into concurrency issues and the images can be created with an incorrect width or height.. The Grid Context Menu in the DAM Module does not hide properly menu options by permissions when more than one item is selected. The menu hides the menu options based only on the permissions of the item which the user has opened the Context menu with a mouse click. It does not take into account the permissions intersection between all the items selected in the grid. Steps to Reprouce: Log in as Host Create a Page Give View permission to all user Drop DAM on that page Go to the page Create Folder A and, under A create folder B (A B) Upload a file called in both folders (A and B) Change permission to folder B to give full control to registered users Create a normal user Log out Log in as user Go to page with DAM Select folder \"A\" Search for \"banner\" word Select the 2 returned items in the grid Right-Click on the first item than do Right-Click on the second one Actual Result: On the first Right Click the menu opens only the options that can be done based on the permission of the first item On the second Right Click the menu opens only the options that can be done based on the permission of the second item Expected Result on both right click the menu should show the same options based on the intersection of the permissions of the items selected. This option should be the same shown in the Selection Toolbar. ", "contenttype": "application/json", "created": 737603, "id": 29, "language": "en", "user_name": "francesco.rivola", "email": "-"}]}