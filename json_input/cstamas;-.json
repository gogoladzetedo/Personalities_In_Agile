{"contentItems": [{"content": "NX2 proxied items should have \"remoteUrl\" attribute set. All the cached proxied items in NX2 should have \"remoteUrl\" attribute set. Known affected formats so far: all formats should be reviewed (and fixed where needed) for lack of attribute. In short, the setup: group, that contains two members, one proxy and one hosted. The requested metadata is contained in a proxy (but is also deployed on same path in hosted repeatedly). This setup group should never return 404, as the requested metadata does exists, even under load. Current code does not uses the fact that merged metadata content is and does an unneeded roundtrip to Storage that introduces concurrency issues with group cache.. This affects latest NX2 it seems. NX2 claims it will keep alive the connection (default with and even ensures it with a header if client is (as with that protocol level extra header is needed), but then immediately drops connection on response is sent. This leaves no chance for connection pooling clients (like NX2 NX3, unlike Wagons) to properly handle connections, as connections returned to pool and believed to be alive will be actually immediately closed. OOTB Jetty 8 does not do this, this has to be something in NX2. Either fix the a) connection to remain alive if said so, or b) as simpler fix just add \"Connection: close\" header when client is and prevent addition of (done by Jetty) \"Connection: keep-alive\" header when client is Marked as affects but it might affect other versions too.. NX3 proxy fetches more than should. It seems we have a bug in indicate verified is invoked only after remote responds with 304, but it never happens with servers not supporting conditional GETs. Also, on servers supporting conditional GETs, it will be (potentially close) GET request that will mark the cache content as \"verified\", not honoring \"maxItemAge\" to perform re-check. Problems in short: 1. - refetches always if remote does not support conditional GET (as no 304 arrives) 2. - fetches two times if remote does support conditional GET (as 304 will arrive on 2nd fetch, that is made conditional from cached content) 3. - fetches on every \"stale\" detected content if the format does not support lastModified and or ETag. In this case unconditional GET is issued, and remote item is refetched over and over again, even if the locally cached one is same . Fix for first two should be trivial in just indicate verified on initial fetch too (200). For 3rd issue, proper Content support is needed.. Similar issue to NEXUS-8637, this case also currently results in HTTP 500 Internal Error, but should not. Downstream 404 Not Found is more appropriate, OR, in case of deploy, 400 Bad Request.. While the policy is enforced, the log gets an ugly stack-trace and response code of 500 Internal Error which is not acceptable. Response should be 400 Bad Request.. Create raw hosted repository named \"site\". Use the project at This setup works in Nexus 2. Create a hosted raw repo with the name \"site\". run mvn site-deploy That should work. Even if you turn of strict content type validation and allow redeploys it doesnt work.. Connection leak in RRB when content encoding is gzip. There is a connection leak in RRB, but under normal circumstances the leak is handled gracefully by GC and HttpClient. Still, in case when remote uses gzip and or chunked transfer encoding, the connections are NOT reused even after longer period, leading to connection pool depletion. Original reporter's description: When I'm browsing a remote maven repository in after maybe steps through the remote repository tree, I get an infinitly spinning cirle. Refresh doesn't work either. The only way to continue browsing the repository is to restart Nexus. This seems to impede all communication with the remote repository. Downloading a file that has not yet been cached locally doesn't work either in this state.. Update HttpClient and HttpCore to: HttpCore release notes. Replace modello based LDAP configuration with orient db Acceptance Criteria: - Make LDAP plugin stop use Modello (and have dropped use of it alltogether), and have it tied into \"config\" OrientDB instance. ( ) - Module tests related changes as needed (as many of those \"stuff\" under tests), true for module UTs as for module ITs ( ) - Remove use of Plexus from module UTs and ITs (as current tests were unmaintable, this was a desperate step of mine ( ) - Update remove Plexus (as use of the ldap testsupport module implied use of Plexus in dependant module, which is unwanted) ( ) - Introduce (needed to be able to manipulate LDAP configuration from \"real\" ITs, as copying does not work anymore) ( ) - Update OSS legacy and modern ITs as needed (replace copied with LDAP Rest Client use) ( ) - Update Pro legacy and modern ITs as needed (replace copied with LDAP Rest Client use) ( ). NPM hosted repository should maintain \"time\" field on deploys. Basically this algorithm (from npm couchdb server) needs to be \"ported\" to hosted repositories: Due to lack of this, the only known downside (or \"bug\" if you like) is that commands listing package metadata (like is) will mark the package as \"prehistoric\". Example output (packages deployed by user \"deployment\" user are locally published ones):. As per registry spec, version descriptor objects are not mandatory, and a URL where to find them is allowed too (see registry root description or Package Root Object's version field). NX should aggregate these into one document (either before storing or on serving, it depends). Currently, this feature is not used by but it might be used in future (or dropped, as the \"spec\" is much more a \"draft\" really). Links:. Add support for scoped packages. This is new feature of npm release, and targets users using \"private registries\", by adding a \"scope\" to package namespace, basically solving the problem of name clashes between public and private packages. More info. I am using and get this exception when calling \"mvn -e\" Migrated from. Profile ID is showing up in staging role names. More fixes to (already present on master):. LDAP OSS to Pro upgrade bug, multiple fields are not carried over. Discovered while adapting OSS ITs to now merged Pro LDAP (issue is NEXUS-6591). On upgrade of OSS config to Pro config, the flag introduced for NXCM-370 is lost (\"userBaseDn\" is optional, when subtree search is used) and some others too. This should be fixed in In master, the work changes done as part of NEXUS-6591 fixes the problem. OSS ITs that now run against Pro LDAP plugin caught this.. Acceptance Criteria: On upgrade, latest pgp configuration will be converted to a capability Users will have to first upgrade to to get on latest pgp configuration. Update Shiro dependency to. Seems like issue NEXUS-5418 introduced even more as known, and it made \"Rebuild Maven Metadata\" defunct (unverified, as reported by user on HC). It caused a known inconsistency, that proxy repositories response on file retrieval of SHA1 (and MD5) files basically \"redirected\" response to main file (the file that asked checksum belongs to) and served the response generated for main item corresponding attribute. This does not happen in hosted or group repositories, but should. The problem reported by user probably stems from same change, as \"Rebuild Maven Metadata\", once you end up with wrong checksums, does not recalculates them, but restores the bad ones from attributes.. The \"?asExpired\" flag is meant to invalidate local cache and force a \"remote check\" for requested item. Still, it is getting blocked by NFC, if the item is not locally cached, but is in NFC.. Basically, similar (if not same) fix should be applied to it as was done here: Also, it similarly breaks Map contract as AppContext does.. See attached video. In short, with CLM configured, at Staging profile south panel, the \"CLM Application Management\" link is shown, but it leads to wrong URL (having CLM Brain responding with 404): Note the double slash (). Manually removing one slash leads to page okay. When no application selected, the \"CLM Dashboard\" is correct, leads to proper page on Brain.. Capabilities that depend on repository cause Stack Overflow when repository is put Out of Service. FSPeer wrongly assumes is always a good candidate for tmp file creation. FSPeer wrongly assumes is always a good candidate for tmp file creation. This might not always be true (especially for non-maven layouted repositories, but even Maven layouted ones might contain such files, made by some custom Nexus plugin or external tooling). The code in question is here:. Consolidate logging levels in Nexus Core. Many log entries have wrong levels (INFO instead of DEBUG), and many of them dumps stack traces at unexpected levels (like stack trace dumped on INFO level). Chat about this at the very end of IRC. Rationalize Nexus Core dependencies and components. Core is currently bloated, and contains many \"key\" dependencies pinned in, that simply prevents plugin developers easy upgrades (to follow their own dependencies). On the other hand, key dependencies that are extensively used in key features like Maven Repository Support are moved out into foreign projects, pinning our core to depend on foreign release lifecycle, but also forcing us on \"compromises\" needed to maintain backward compatibility with other non-nexus integration for that 3rd party library.. Use downgradable locking implementation in Nexus. We have a fixed locking implementation available which should solve quite a few problems with the current If we're going to move to this implementation we should do it sooner rather than later, and should do an internal release of Nexus at least a month before the official release so we can get experience with it running on our servers. The change introduces \"downgrading\" of locks (in both, Nexus own and in wrapper wrapping sisu-locks). The use of distributed locks was already possible by a system property switch.. Artifact maximum age does not have any effect for proxied release artifacts (NEXUS-3069). However, the UI element for this is still enabled. We need to revisit the reason for NEXUS-3069 (and it's original reason NEXUS-3065), and if possible restore this functionality (since it breaks staging). If we cannot restore it, we should at least disable the UI.. ", "contenttype": "application/json", "created": 737603, "id": 66, "language": "en", "user_name": "cstamas", "email": "-"}]}