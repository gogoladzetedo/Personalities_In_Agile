{"contentItems": [{"content": "I noticed that when you have a scheduled (non-manual) task, if you update the start time, on the tasks list the \"Last run\" shown is the time you saved the update not the last time the task was actually run. Similarly the last result shows \"Cancelled\" even if you have never run the task before. also noticed this on his work on NEXUS-7797. I have not checked older NX3 or NX2 at this time. Debug was off during this test. Leaving minor since it could \"erase\" useful data. NOTES: - Could be because the API is too narrow to deal with this interaction - Likely need to group some of these issues together so that we revisit the API if needed - Quartz might not be keeping the date correctly?. I just ran a search \"docker search with the following results: It seems to show the proxied docker item as well as each docker hosted image I have in my hosted repo. The same occurs for just searching the hosted repo (without the proxy result). Narrowing the search seems to give the correct results, making me wonder if searching the broader item is somehow including as something to be searched (though just for hosted as there are any number of proxied items with out there). This was untestable in NX3 because of NEXUS-9159, however, spoke with and decided to give it a distinct ticket rather than reopen that one soas not to cloudy the waters. Docker does not exist in NX2 so cannot be checked there. I am leaving this major as I can imagine this will render results less and less useful the more things you have in the hosted repo. You also cannot perform this exact search in the NX3 search UI because of NEXUS-8801 so the workaround is partial search. NOTE: - Could be tokenizing the in the image name. Two reports that files in the nexus tmp directory do not get cleaned up, which ends with Nexus consuming large amounts of temporary directory storage. These files are all named with the prefix . The dates of these files are commonly very old. Example: We should figure out the cause and clean these up more reliably. NOTE: - This may be due to the file stream not being closed properly - Maybe we are creating these files and not consuming, or a client network break - More than likely this is in P2 code Technical Direction: - Maybe look at the thread and see if it can be cleaned up?. Typically we build images tagged as \"latest\" after SCM change automatically in CI and we push them to registry. It is basically the same as with SNAPSHOT deployed by maven. As result there are many \"dangling\" images that in our case take significant amount of space. Usually when you re-build image, meaning you tag newly build image with an already existing tag, you will see \"dangling\" image in \"docker images\" output. And you would delete it with: Basically what we need is something similar to scheduled task named \"Remove Snapshots From Repository\" for removing old SNAPSHOTs deployed by maven. For example Docker registry V2, provides maintenance function called \"upload purging\" for this purpose. See I don't think that Nexus currently provides any means to removing those images. Am I right?. I noticed that if I publish then delete the related assets (via browse UI) and publish again that I am getting the below error. This happens despite allow redeploy being on. If I do not delete the republish works as does the first publish. Debug was off during this test. NPM is new to Fabtastic so no backcheck of NX3 is possible. I did not check NX2 at this time. WARN admin - Service failure null at Method) at Source) Source) at Method) at Source) Source) Method) at Source) at STEPS: 1) Setup NPM hosted repo 2) npm publish (I used my own creation, ala ) 3) Go to browse asset UI and delete all assets in the NPM hosted repo 4) npm publish; BUG: WARN in log, 500 on console, no republish is done. While reviewing NPM, I noticed looking at browse search results all the json details were smushed together making IMO a tough reading experience. In fact, I believe it's much easier to read the json file itself (the contents are the same but the are not stripped). noted that 'we implemented \"nice\" display of attributes only for 1 level' and if extended it would show nicer. He also noted that some docker attributes have the same issue. This is an improvement ticket in that regard. I included a screen of current npm as well as a screen of current NuGet (which looks much better; though not a fair comparison provides a vision of something to strive towards). NPM browse search is new to NX3 and to Fabtastic so no back checking was done. I do not recall seeing the docker portion myself (implemented in m5, new to NX3), so did not attach screens cases however if I run across it, I will try and remember to do so.. I noticed that after saving a Capability change on the Summary tab that the Save Discard buttons remain enabled. This does not happen on the Settings tab, so I surmise this may have been fixed one place (by ?) but not another. Similar tickets have definately existed (see some linked). There are no errors in the JS Debug was off during this test. I did not check older NX3 or NX2 at this time.. Acceptance Criteria: - Implement a separate ability to keep track of npm package document version Right now, the NPM specific document version field is getting populated with actual underlying (, which completely suites the use case. npm CLI does retries 3 times in case of MVCC conflict (client and server mismatch). Still, as per phone with Alin, this can lead to many false positives (unsuccessful edits and retries), due to the fact that will also modify so multiple clients one package, while one client trying to update it might lead that updating client fails (even after retries). Proper solution would be to implement \"manually\" NPM document versioning, it could be another NPM format specific asset attribute, maintained by NPM format code only. This way, we could circumvent also any future change that might spin faster than we currently expect.. See attached (from Blobstores page). On smaller columns in IE(11), the sort arrow collides with the text. I noticed this first on where the default column sizes are pretty small (lots of data) and the initial sort (Timestamp) is affected. This does not happen in Chrome (Windows7) so this seems to be an IE specific issue. Working browsers have the arrow on the right and if the column gets too small, not shown at all. Being that the sort arrow is not first and on the same line, this is what I would have expected. Workaround, widen the column. I am pretty sure I have seen this before but did not see a ticket. Did not test older NX3 or NX2 at this time. Debug was off during this test. NOTE: Maybe talk to Sencha about this one. The help text on routing rules is incorrect. It says that the path in the expression \"will include the repository name\". This is wrong. It also implies that a leading is needed in the path before the start of the group ID, this is also wrong. This was previously fixed in , so somehow this regressed.. Help text in routing rules is wrong. Steps to reproduce: - Nexus 3 - Adminstration - SSL Certificates - Load from server - (note that the port is missing so loading the cert will fail, but it is a valid hostname) - Loading dialog shows for a LONG time - you can navigate out of the view and 'Discard changes' - Loading dialog will continue to stay visible - Other views in UI are sort of accessbile but not really - Until the timeout happens some time later See attached video. The headers like Info and Attributes in Asset browsing have a black line on the left and top of the rows. They are not intended to be there. See attached screenshots. Also happens in Capabilities when editing a capability in the headers there. This happens in Google Chrome 45 on MacOSX with latest SNAPSHOT of Nexus as of today Pretty much same as M5. Confirmed to be a bug by Daniel via email.. Running \"update indexes\" by clicking within the \"browse\" storage tab of a repository does not work in Nexus The log shows that the path is incorrect: INFO admin - Scheduled task finished :: Updating repository index \"Releases\" from path and below. (started runtime Note that the path starts with \" content\". It should not. The request sent from the UI is correct, so this isn't a UI issue: - admin \"DELETE 204 0 6 I'm not sure exactly when this regressed, but the end user reported that it worked in and I can confirm, it did.. Theres a delete button when viewing an asset in a group repository. We dont support delete in that scenario, so the button shouldnt be there, and if we do try to use it an NPE is thrown since the Asset id doesn't exist in the group repo bucket. Acceptance Criteria: - Remove the button from group repositories! NOTE: - The information to remove this easily is not currently available, we'd have to figure something out to indicate your are in a group repository INFO admin - Deleting asset: null ERROR admin - Failed to invoke action method: java-method: null Method) at Source) at Source) Method). If you create a NPM proxy repository, and disable content validation via the UI, the which validates package content is not disabled. It seems like this validator should respect the content validation feature setting.. The maven component model contains and but it is missing This is a bug according to discussions with Jason. Currently, creation of the default blob store is lazy. This is a problem because (insert problem here). - Problem was went to look for Blob Store and it wasn't there yet! A new instance of Nexus should create the default file blob store as it starts up for the first time.. Deploy a site with an to a hosted raw repo with the Maven site deployment from Then navigating to the URL of the repo you see a 400 error in the Nexus UI Even though renders the site in HTML. Note: - Make sure we have a longer term plan for how we handle and directory. creates with while repositories created via UI have . I think we should decide which one is the default and go with that in both cases. Acceptance Criteria: - Set to true when default repos are created. If one is to add non proxy hosts - the tooltip (? icon) suggests regular expression Inserting a host with such format does not produce an error, but while having a wildcard '*' at the beginning of a hostname causes an error to show up in the console upon restart of Nexus. A correct regex patter should be something like: This correctly validates upon restart. Acceptance Criteria: - Change help text to correct pattern. The new jetty xml files in Nexus 3 are copies of those files found in Jetty These files contain system properties to simplify configuration of Jetty without the need to edit the xml files directly. Some of these properties are prefixed with some are not: When prefixed with jetty, it is very clear they are jetty container specific. When not, it is not clear if this applies to Jetty or something internal to Nexus. There is a chance of conflicts if we don't prefix all jetty properties. It would be more valuable to support when scanning support bundles to see what jetty properties are set when they are grouped alphabetically together as well. The only downside seems to be that we diverge from shipped default jetty xml files a bit. Personally not a concern with me as our files are bound to diverge in other ways regardless. Nexus jetty xml should be optimized for Nexus, not Jetty living in a vacuum. Acceptance: - prefix all container related ( jetty ) system properties with the text except well established Nexus properties like etc.. During UX review, I noticed that when you added a mark to the Log (via Viewer) that the modal that you use to add the mark gets a Saving mask. I had never seen a modal with a mask so asked Daniel and he asked me to file. He writes: \"This is a little odd, but the Add Mark modal is a bit of an odd-ball itself. Go ahead and file. Ill probably just move the mask to the log textarea field for I do not recall seeing this before but have not checked older versions of NX3 (or NX2) at this time. Note: - Just mask the entire UI. Timeout modal dialog does not appear sometimes (related JS error). Configure a hosted repository to allow yum metadata generation. Deploy an rpm into the hosted repository Configure a staging profile to allow yum metadata generation, and to release into the hosted repository used in step 1 Stage an rpm, then try to release it This will fail with a message like this: Artifact updating: Repository does not allow updating This is a regression, in the above scenario works without any problems. In Nexus if you try to release a staging repository that has yum metadata generation enabled it will fail if the target repository has a file in it already.. As a user, if I add columns to a results page, I would like them to remain that way at least for the duration of my session. While testing CLM, I searched and then added Security Issues and License Threat columns to see the results. Unsatisfied I did another search and noticed that those added columns were removed. I realized we just talked about this in a semi-recent meeting but did not see a ticket. I also assume this is behaving as desired and is not a bug. If I am wrong, please feel free to adjust the issue type. While my example was for search, I think this use case would be good for all pages. There was discussion about making this longer than a session, which would solve the minimal case I mentioned above. I did not test NX3 at this time because I believe search (specifically) is in flux. Note: - Could be a mixin that handles this Tech Direction: - Configure grids to be stateful. The forgot feature of Nexus can cause performance issues against an external realm. We should consider options such as: - optimizing the generic queries that the resource performs for external users - provide a configurable way to disable the feature - consider removing the feature entirely if that is easier - removing the Forgot Username and Forgot Password resource privs from the built in anonymous role. Acceptance Criteria: - Remove Forgot feature from UI. While reviewing NEXUS-7895, I noticed that the helper text for Evict Unused Proxied Items From Repository Caches task for the \"Evict items older than (days)\" was as attached but I felt grammatically wrong. After discussion with and , we decided to remove that helper text and instead change the title to \"Evict unused proxy items older than (days)\" (so it would encompass the elements of the helper text that were removed). I did not check NX2 at this time as I have been told to expect no UI changes for that. I did not check older versions of NX3 either. Acceptance Criteria: The title of Evict Unused Proxy Items will be \"Evict unused proxy items older than (days)\". While reviewing NEXUS-7760, I noticed I kept getting the attached warnings in my Safari Web Console once per browser session. I thought it might be search related but noticed that I also got it when I signed in and clicked Feeds and also when I clicked Standard (Repository; clicking Repositories was fine). The messages are the same each time. I do not notice anything errant on the pages but filing for investigation. Note: Do awful things to browser size to replicate this Acceptance Criteria: - Current missing assets will not show up in js console any longer when scrolling tabs. Oracle has started to publish a Maven repo with weblogic related artifacts. I expect that to become pretty popular with Oracle users since it saves TONS of time in terms of deploying the artifacts to an internal Nexus instance alternatively. We should make we know how to configure this so we can show customers and potentially work with Oracle to get any problems removed. More info: there might be no index. This could also be done as a blog post related investigation if there is no engineering. Update to more recent Groovy version. Groovy appears to be the latest available version with a corresponding groovy-eclipse compiler, with being the last release published at this time. Java 8 is only \"official\" since so hopefully this will head off any compatibility issues Acceptance Criteria: - Nexus 3 OSS and Pro will use Groovy. Implement Raw Format Proxy Repository For New CMA. Implement a simple bucket of files that allows for any file to be shared, so that they appear to be a repository while preserving the path. This is the simplest of the repo formats in Nexus. Equivalant of Site Repository from Nexus 2. We did this because Maven uploaded files such as HTML to describe your repo. This allows for to be shared.. Implement Raw Format For Hosted Under New CMA Architecture. As a Nexus administrator I want a supported procedure to rebuild the npm metadata from existing npm repository storage, particularly from hosted repositories. This is useful for rebuilding metadata from rsynced npm storage in a failover instance and as a database corruption recovery tool. Notes: - Look into OrientDB backup, export as potential options if we can't rebuild. As a user, it'd be nice to have a persistent message when I come back to a session and am logged out. Two times today, I've been idling on NX3 and on return to the screen have had a pause then realized I am logged out presumably due to idling. One benefit of NEXUS-7755 was that there was a history including that you were logged out. Right now, you can potentially just click anonymously before realizing what happened. Suggesting a message on the screen relaying you have been logged out that persists until the user clicks it off (or otherwise notes it as being seen). If NEXUS-7755 or like history is restored, then this could likely be OBE. Acceptance Criteria: - When a user is logged out due to timeout, show the user a dialog that indicates to them they have been logged out. Start with this repository setup: Configure your registry for to point at npm-group with proper permissions. Using and a proper publishConfig url in deploy package X version to npm-hosted1 deploy package X version to npm-hosted2 Execute This returns one version . Reorder the group members: Execute This returns one version ( ). Expected - should list all versions of the same package in all group members Notes: - NPM groups do not exactly match up with Maven groups packages are flat, there is no hierarchy Because of this, should we treat NPM groups like Maven groups? We have a concern that we could merge packages together due to the flat nature of NPM that weren't meant to be merged Scoped packages was invented to circumvent this problem Potentially do: - Allow for capability for specific groups to do merge, and instruct the users on how to add hosted proxy repos to the group. Replace modello based LDAP configuration with orient db Acceptance Criteria: - Remove Plexus based Unit Tests -. This has someting to do with re-using settingsforms bits which have this preset width. Acceptance Criteria: - Bring Change Password Dialog into being a consistent width with Login Dialog. Content from sources needs to be able to detect the type, by asking Tika and recoding this in metadata. Additional logic will also be needed to layer ontop to validate that content we get is what we think, to cope with issues like asking for a .jar file and getting a .html error page. Acceptance Criteria: - You will be able to deploy a Maven site to a hosted raw repo and when viewing it in the browser it will display properly due to content types being returned. NuGet Proxy Repository. As a .NET developer, so that I can get quicker and more reliable access to remote packages, I want the ability to have NuGet repos cached locally Acceptance Criteria: - Implement handlers for the various read-only NuGet gallery protocol endpoints (ODATA queries, downloading, - Implement the caching of components in component storage. - If a user requests a package we don't have by URL we should send a request to fetch the metadata from the remote proxy - Feed counts should reflect what the upstream repo reports results will be slightly different due to the algorithms we use versus - If the remote repo goes down, a user should be able to still use the proxy repo with locally available metadata and packages - Locally cached NuGet packages should be visible in Nexus ElasticSearch results - Nexus Admins will be able to configure the cache duration size for queries to remote repos so that we don't overload the remote repo - If a user Searches on the NuGet Feed search results are capped at 40 entries - Supported clients are Visual Studio 2013's package manager, the VS package manager powershell utility, the standalone command-line client, and the Nuget Package Manager.. Acceptance Criteria: - Add and test support for the ability to use the npm deprecate command to deprecate a package - Add and test support for the ability to use the npm deprecate command to UNdeprecate a package - Visually show that the package has been deprecated in Search and Browse This is the alternative for npm unpublish ( NEXUS-6892 ). ", "contenttype": "application/json", "created": 737358, "id": 68, "language": "en", "user_name": "jhesse", "email": "-"}]}