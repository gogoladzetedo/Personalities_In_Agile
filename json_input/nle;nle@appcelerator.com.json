{"contentItems": [{"content": "The Find bar should interpret tabs as \"move to next tab stop\", instead of inserting t tabs. We can change inserting of tabs to be similar to how we add newlines: -TAB will move to the next control. SHIFT+TAB will move to a previous control -TAB + (Non-shift modifiers) will enter t tabs in the text boxes The tab order has changed. We skip the history toolbars during tab traversal because of this swt bug: The history is accessible using the mouse or the implemented shortcut: -MOD1 (OSX CMD, Windows CTRL) + Up Down arrow: Replaces the search box with the previous (up) or next (down) history item. The find bar does not currently support a search in selection option. Comparing to other IDEs, this is a standard feature.. When performing the search, convert new lines and spaces into an appropriate regular expression and perform the search. Update the find toolbar UI to include multi-line text boxes. Update the text box to insert new line characters when CTRL+ENTER is entered. Add Search scope action to find toolbar. Search action has a drop-down menu that specifies the scope of the search. If the scope is anything other than 'current file', then it will trigger a search. This provides a quick way of uting a search across multiple files. The items in the drop-down are as follows: Search current file - current file Search Open Files - search opened editors Search Enclosing Project - search across the project that contains the targeted file Search Workspace - search the entire workspace New icons is also needed for the scopes: Current file (file icon) Open files (multiple file icon) Enclosing project (project icon) Workspace (Globe icon). Add a dropdown menu action for both the find and replace multi-line text boxes. The items in the dropdown will be the last 5 used text values. Upon selecting a value, it is used to replace the contents in the corresponding text box. Update find toobar to reflect new layout and add resize support. The layout of the actions needs to be updated to reflect the spec: The height of the toolbar needs to be adjustable. Chromium: Update WebKit Browser implementation to cef rev392. TiStudio: Toast says android build succeeded when build failed. Different environments will have different login endpints: test, dev, pre-prod, enterprise, vpc. To accommodate these different environments, the cli will have to make the login endpoint configurable - currently it is hard-coded to This can be configured via the config file or via a parameter This is preventing Studio from working properly against the enterprise cluster, ie unable to login means users can't create projects. As a work-around, users would have to have the same on all type servers. This was found in the course of testing TISTUD-1527. Steps: 1. Open dashboard 2. Right click (on a link) Open in new window Expected Link is opened in a browser based on the Eclipse Studio settings Actual Link is opened in a new external generic browser with no navigation controls This is currently only occurring on Windows, but an implementation change will affect osx linux as well. Module installation should not allow modules to be corrupt. There's one console line before the two you listed that specifies the alias, can you include that line?. This is related to TISTUD-1817, where we tracked down the locations that opened up a Message dialog from a background thread. A more elegant method of displaying the notification is to use a popup toast to notify the user. The popup should only be used for INFO messages, for Question and Error we should still use the Message dialog Locations that this affects: project packaging module packaging (normal and deploy to project with changes) -Titanium SDK update -Publish -Android SDK update (dashboard). -Replace the textbox with a combo box that contains the list of keystore certificates -Remove the and Browse buttons and replace with an button. The pops up the keystore certificate dialog, which allows the option of create a new keystore or registering an existing one. Add a radio to the dialog that allows the user to specify and existing or new keystore. If an existing one is used, then only the password fields is enabled. Add a Preference page to manage Keystore certificates. We should adopt the Adobe AIR certificate management UI. See attached for Adobe AIR cert. management UI in Studio (we can probably reuse this code) There should be a new Android preference page (similar to iOS), that contains a table of current keystore certificates, and an Add and Remove buttons. Prereqs Install Android SDK Install Android NDK Update settings in Titanium preferences Steps: 1. Create an android module project 2. Package the module Expected results Module is packaged Actual results: NPE in the AntRunner and this following error (Build returned: 2 returned: 2 Caused by: returned: 2 at Source) Method). The file is generated when you publish a Titanium mobile project as a new project in the workspace. The generated project should have a file. When I try to format the file I get the following error: !ENTRY 4 0 !MESSAGE (Build Cannot recover from the syntax error !STACK 0 Cannot recover from the syntax error at !ENTRY 4 0 !MESSAGE (Build Error while formatting the code in your editor. Please submit a bug report through Studio's support and include the relevant code which triggered this error.. Studio displays Ad hoc provisioning profiles incorrectly as \"development\". This causes confusion in the following areas: -Preferences displays the displays the type incorrectly -The iOS distribution wizard displays Apple iTunes, Ad hoc, and development profiles (should only display Apple iTunes and Ad hoc profiles) -The iOS Run on device wizard displays Apple iTunes, Ad hoc, and development profiles (should only display development profiles) Special attention must be made to the way we cache provisioning profiles, since a fix to the SDK will not update the \"type\" of the cached provisioning profiles. We have to trigger a flush of the cache if there is a presence of SDK where previously there wasn't. This is blocked by an SDK bug. Update method to explicitly pass in PlatformType, output location and publish target. For the xcode-select command must be run to ensure properly function of the iOS platform scripts. Running the command can be foreign and difficult for some users. We should display a informative description and link on how to run xcode-select. There should be a linked wiki doc page that describes in further detail on how to run the command. The description should be included in the iOS section of the Titanium preferences. It should state: \"If the desired Xcode installation is not displayed, you will need to run \"sudo xcode-select \" to target a specific installation. More details\". Currently, if a user has both Xcode and Xcode installed, they would have to manually ute xcode-select to switch the Xcode version used for iOS operations. I propose we do the following -Update the Titanium preferences for IOS SDK home to be a combo box -The combo box contains a list of detected Xcode locations -Upon applying the changes, we call the sudo xcode-select -switch command. Running package operations (on multiple platforms) on the same project multiple times causes errors. Since package operations are now public launch you can run multiple configurations in quick succession. This will cause errors since the package operations operate on the build directory. We should queue up the launch configurations so they are sequential, scheduling launches based on the project. Steps: 1. Create a mobile project with iOS, Android and mobile web deployment targets 2. Perform project package for iOS 3. Perform project package for android 4. Perform project package for mobile web 5. From the run shortcut, re-run operations multiple times Expected: Each package operation completes successfully Actual: Error occurs. The wizard banners should be consistent with the action icons iOS Distribution Wizard Mobile Web packaging Wizard See attached request document. Currently the color scheme for the snippets view on Windows (tested on XP specifically) is not consistent with the other Studio views. See attached screenshots Background colors need updating Disabled tag buttons are not painted properly Hover over the tag buttons has an outline Snippet popup toolbar bg color has incorrect border colors. We have a a few icons (as detailed in the attached document) that need upgrading as they are not in keeping with they rest of the Studio UI. In general, they should be a bit more and colorful. Debug Icon * icon. Refactor the Android wizard page contents so it can be reused in the Launch configuration tab. Add a launch configuration for \"Install on Android Device\", which allows users to specify a android sdk. With the introduction of the Snippets View ( we need update the existing snippets to add more context and improve This is accomplished by adding the following fields to Snippets ( category: A name of a category used to group the snippet with other similar snippets. Optional tags: keywords that describe the snippet. Used as means to easily filter snippets. Optional Example: In addition is the entry that defines a grouping for snippets: These additions will make working with snippets much easier for user via the Snippets view The changes are also outlined here (towards the bottom):. Write Test Plan. Implement the new in Rubles: 'UI Elements' do s end Update bundle view to display categories. Snippets view should honor the theme settings. This applies to theme colors, invasive themes and invasive fonts Snippets view requires two new images - Insert snippet and Navigate to snippet source. These will be provided by our creativity engineer. Add appropriate listeners so the snippets view displays the appropriate contents A selection listener will listen to cursor location changes, and updates the snippet contents to match the cursor context. If there is a mismatch, the snippet is shown with greyed out colors A Bundle listener will listen to bundle to keep the snippets view contents in sync.. Support dragging a snippet from the snippets view and dropping into a source editor. The snippet is inserted at the drop location, and tabstops and cursor locations are honored. Snippet Preview Popup display information about a snippet: Snippet name, scope, and triggers - honors theme colors Snippet expansion contents - based on content-type settings Toolbar to perform additional actions - Navigate to source action (opens the contributing ruby file for modification of the snippet). Each Drawer contains the name and the count of snippets in the drawer Each snippet in the drawer displays the name and description of the snippet If the snipppet has tags, the tags are displayed in the snippet as a list of actionable buttons (buttons will filter based on the tag name) Each snippet has a toolbar with actions to perform on the snippet. Update Snippet Elements in Rubles to support Description, Category, Icon and Tags. The following attributes were added to a snippet element: description (String) - description of the snippet category (String) - category for the snippet icon path (String) - path to icon file tags (list of strings) - tags for the snippet. The way the Dashboard installs SDKs, it requires the SDK paths to be set in the preferences. In the case where the default SDK paths don't exist or invalid (ie, the user doesn't have permission), you will not be able to change the SDK paths to a desired location. To reproduce: 1. Have a valid Ti SDK setup 2. Export the all the preferences via 3. Edit the exported preference entry: with an invalid path. I used a path that the user does not have permissions, Save the file 4. Launch Ti Studio 5. Import the preferences via 6. Restart Ti Studio Expected: Ti SDK installation starts and prompts for a new location for installation Actual: Ti SDK installation starts and fails The same issue is exhibited with the Android SDK as well. The preferences for them are: The installation is triggered via the configuration in the Dashboard The installation should validate the SDK location to ensure it is valid (exists write permission), if it is not the user is prompted for a new location. As a Titanium Developer, I want to view and inspect all available snippets, to determine which snippets I want to insert into my source. A comment with security level 'Developers' was removed.. Studio First Time Startup: Address iOS NPEs in log. Preferences Default Titanium SDK path saved even after being canceled. Test steps: 1. In Studio, navigate to Preferences Titanium Studio Titanium Default Titanium SDK. 2. Change the Default SDK path to a different location and click on \"Apply\" 3. It displays a prompt for saying that the path location does not contain SDK 4. default SDK location should not Titanium General configuration window should either display a error message when user tries to close the window after setting invalid path or the default SDK location path should get reset when the window si closed without applying the changes.. During the startup of Studio, it appears to hang for a few seconds while it is trying to load show dashboard. I think Dashboard needs to re-worked (either calling the services and caching the portal action results in the background) to improve the performance of its startup so it does not hang the Studio UI.. Android distribution wizard : The keystore locations combo is not reflected immediately with browsed locations. Update to: -utilize the extension point to determine to create additional UI for the main page -If the extension returns an error or warning, show the appropriate message -Verify all subclasses. The extension point should declare an implementation of -priority -String representing the The is defined as Utility methods should be added to retrieve and store the extension points. I enabled logging for ALL, and I ran through the iOS publishing wizard. I noticed when the environment variable PATH contains numerous entries for the JDK path: Environment:. We want to utilize the formatted version information from the AppDirect call The new format would be: Multiple versions: Single version for all platforms:. Some console logging calls with array args do not print array to console. The cases are: ) and This does not occur in MobileWeb or Android. This is a parity issue. This does not occur to other array printing calls in iOS. This is an internal inconsistency. Steps to Reproduce: 1. Run code: Actual Result: Expected Result: There are issues with both the old python and the new CLI with how the multi-line strings are outputted. When we fix it, we should make sure it works for both CLIs. Keep the focus in the editor when console generates error output. Debugging on Device is a multi-step process, and we should guide the user through the steps. Once the user presses the \"debug on device\" command, pop up a dialog that shows the four steps: Installing on Device * Launch app on device (waiting for connection) Suggest having a wizard page that appears when launching. The page will describe the four steps (1-4), and can help to resolve any setup issues.. When debugging on device, Studio launches two launch configurations (see screenshot). This makes it confusing to the user since the first launch configuration (Install on device) finishes and terminates, and another launch configuration is launched. There should only be one launch configuration and it should contain both the app installation and debug processes. Currently the my modules \"Update All\" button is disabled, since we don't currently support installing multiple modules. The action controller is in place to support multiple module updates, the dashboard needs to use it. It will also need to properly refresh the status of the installed modules. ", "contenttype": "application/json", "created": 737358, "id": 42, "language": "en", "user_name": "nle", "email": "nle@appcelerator.com"}]}