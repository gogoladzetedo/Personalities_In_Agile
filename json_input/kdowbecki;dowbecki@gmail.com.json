{"contentItems": [{"content": "After successfully deploying 12 jobs the Jobs Deployments page still shows only 10 results. It looks like always returns of 1 regardless of the parameter.. introduced an improved instantiation strategy based on byte code generation. It's now the default instantiation strategy however it can't be used in custom Spring XD modules due to class loader issues. Please see attached custom module source code which can be build with Maven. You might want to change MongoDB connection parameters in . Execute following xd-shell commands The stream will output following message when the MongoDB collection is empty: After documents are inserted into collection by uting following exception will be thrown: This exception affects both custom stream and job modules. One workaround is to force in however this has to be done in every custom module. Perhaps that's an issue with Spring XD custom module classloaders (or DATACMNS-710)?. Spring Data throws when mapping custom classes. xd-shell doesn't work with SSL proxy. After connecting to admin endpoint over HTTPS xd-shell will use plain HTTP for all further calls, which fails if HTTPS is mandatory: In above example is a proxy that provides load balancing and enforces HTTPS for users. It forwards the traffic to to service REST API over regular HTTP and port 9393. Admin service is returning with plain HTTP because it's unaware of the network proxy. Can this be solved without employing server side HTTP- HTTPS url rewrite? Is enabling SSL in the only way?. After enabling security (see XD-3214) and granting user privileges it's not possible to launch jobs from Admin UI. For job, 403 error is returned when Admin UI attempts to access following URL after \"Launch Job\" button is pressed: Please see attached screenshot.. Enabling security breaks job launching from Admin UI. After enabling Spring XD security in : after logging in as with only privilege, Jobs admin page is broken and is not displaying data. 403 error code is returned for following URLs: Looks like and URLs are not covered in security section of file.. Custom Spring XD modules are packaged into a JAR file with 3rd party libraries packaged into folder. Let's say we have a custom job module, packaged as JAR and deployed with shell command. It wants to use provided by library. Unfortunately will only add to classpath (code in method). should add all 3rd party JARs packaged in custom job module to classpath. This works with module shipped with Spring XD because it's deployed as \"exploded\" module under In such case correctly adds all JARs from to classpath.. RabbitMQ retries on. We are running Spring XD with RabbitMQ transport and we'd like to have a way to stop retries in certain situations. In , in chapter about RabbitMQ transport, in \"A Note About Retry\" section, it's written: Message deliveries failing with a (perhaps when using a custom are never retried; the assumption being that if a message could not be converted on the first attempt, subsequent attempts will also fail. Following is unclear: Are we speaking about or ? Based on XD-1597 and AMQP-390 it's the latter. Only is available for custom module developers. Attempting to throw which is provided by results in even after Spring XD is configured to use transport. Throwing from custom processor module written with Spring Integration's or doesn't stop retries.. On multiple occasions we have seen that and services can exit reporting state, however most of the times the Java process is correctly terminated. and in the container logs:. Creating a custom processor module with Apache Velocity as dependency results in during stream deployment: Attached is module source code. Executing commands in file is enough to trigger the exception. Everything works when velocity jar is placed in and excluded from the processor module.. When Spring XD is started as a service using the in GemFire module is resolved to the top-most directory (on Linux \" \"). This directory is not writable by spring-xd user under which the process is uted. When a stream using GemFire is created following exception will be thrown: should be set to a directory which writable by spring-xd user (maybe. Basic security makes xd-shell throw 403 Forbidden error. After enabling admin endpoint security in using basic authentication and single user Spring XD UI is secured however xd-shell commands are resulting in a 403 error: This can be fixed by adding configuration explained in \"File based docs section: Following is the problem: Configuration explained in \"Single user chapter should work out of the box without additional role setup Docs should be more clear on authorization. Composing \"transform\" and modules leads to during stream deployment when: - xd-admin and xd-container are started as system services (after installing from RPM). - xd-singelonde is started outside of $XD HOME bin directory but it's fully working and exception is thrown when: - xd-singlenode script is started from within \"$XD HOME bin directory Then using the XD Shell: Stream deployment will result in following exception Exporting XD HOME as a global variable seems to have no effect on this behavior.. Please see \"Deployment\" link on page. The link is broken and redirects to which is a 404.. Spring XD container will throw following exception: when module properties have a trailing whitespace character in type property (in example below there is a trailing space in value): Can the property values be trimmed before comparing to map to avoid this problem?. Custom modules that use as a parent will get a \"lib\" directory created in the module root source directory. This forces us to add additional ignores in version control system. Following Maven convention all build files should be created under \"target\" folder so \"lib\" folder should be created as \"target lib\".. Spring XD is packaging a dependency which aims to provide runtime libraries. is not providing all libraries from $XD HOME lib. See attachment generated with \"ls $XD HOME lib\" and \"mvn on a module with parent: - 100+ JARs are not provided - some are provided in different versions - some are provided but not available in $XD HOME lib This forces us to add and maintain missing dependencies in our own module parent to use commons-lang3 in our code which is present in $XD HOME lib but is not provided by Why there are so many differences between $XD HOME lib and. In the receive() and methods are non-blocking. Methods without timeout parameter are usually blocking and return the first message delivered to the channel Integration tests based on dependency and embedded xd-singlenode are asynchronous. This makes receive method return null in all invocations because test thread is progressing faster than container can process the message in the background. Would it be possible to make receive methods behave like in. Failed to create a stream with Script processor. I attempted to create a stream with a Script processor using Spring XD shell: I've corrected the syntax as described in docs by replacing with My stream was created but the deployment failed with exception: uses The have issues with properties naming example is using while later is used. Same with and. Spring XD shell should maintain single log file (per user?). ", "contenttype": "application/json", "created": 737603, "id": 13, "language": "en", "user_name": "kdowbecki", "email": "dowbecki@gmail.com"}]}