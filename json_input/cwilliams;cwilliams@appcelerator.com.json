{"contentItems": [{"content": "Windows: Aptana Studio Installer: Studio does not install JRE and hence fails installation. This is regression issue since earlier studio used to get installed with JRE successfully. : 1. Download 2. Try installing same on clean windows 7 machine. Actual: Expected: No error should appear. Installation must be successful.. Write script to update version numbers when we bump versions for Aptana Studio. We've combined core and UI code in the SVG editor plugin. For proper separation we should split the two apart as we did with the JS plugin.. We've combined core and UI code in the DTD editor plugin. For proper separation we should split the two apart as we did with the JS plugin.. We've combined core and UI code in the HTML editor plugin. For proper separation we should split the two apart as we did with the JS plugin.. We've combined core and UI code in the XML editor plugin. For proper separation we should split the two apart as we did with the JS plugin.. h3. Steps to Reproduce JS source may contain 3 types of comments: h3. Actual Result There is no options allowing to format these 3 types differently. h3. Expected Result Should be options for each comment type as in Eclipse JavaScript Development Tools).. h3. Steps to Reproduce Format this example code: h3. Actual Result Formatter inserts space before `typeof (s)` h3. Expected Result. setting Job's system property. Implement checks for these rules: bad assignment bad number empty block evil function eval not greater radix strange loop sync a unescaped a use array use object weird new wrap immediate. Formatting Warnings Option JSHint Option expected a Expected ' '. If in JSON mode and string doesn't use double quotes (expects '\"'). ? Also relates to unexpected spaces white es5 trailing Expected ' ' at column , not column . Related to indentation level. This checks that indent level matches expectations based on a setting (default is 4). white trailing Expected exactly one space between ' ' and ' '. ? white trailing Missing space between ' ' and ' '. ? mixed Mixed spaces and tabs. Looks for mixed spaces and tabs in leading indents. smarttabs too long Line too long. Checks for lines exceeding a given max length column count option value (maxlen). Default is 256. Unexpected space between ' ' and ' '. ?. Investigate Lexing Parsing warnings from JSLint. Lexing Parsing Warnings Option JSHint Option Expected ' ' and instead saw ' '. ? see this as relating to braces around for while loops (line 3003, approx), and eqeq (line 2744) and semicolons (2391) eqeq es5 Expected ' ' to match ' ' from line and instead saw ' '. ? Expected an identifier in an assignment and instead saw a function invocation. ? Missing property name. Looks for missing property when defining ES5 getters. missing a Missing ' '. ? newcap newcap Missing ' ' after ' '. ? Expected to see a statement and instead saw a block. Looks for braces in statement context to start a line). unclosed Unclosed string. Checks for unclosed strings Unclosed comment. Checks for unclosed comments. Unclosed regular expression. checks for unclosed regexps. Unexpected comment. Looks for comments in JSLint directive sections, html.. HTML Warnings Option JSHint Option Attribute ' ' not all lower case. ? bad entity Bad entity. ? bad html Bad HTML string. ? Bad id: ' '. Looks for id attribute values not matching ^*$ in HTML Bad name: ' '. Checks for following '' must be within ''. ? Unexpected character ' ' in . Matches ids attributes against Unknown HTML tag (See Error.. Update find toolbar to reflect new layout and add resize support. Write unit tests to verify JSLint rules. Permissions not retained in Studio standalone expanded plugins (like terminal). Once we have a baseline set of data, make sure the performance job is then configured to assert against that data for performance regressions. This involves setting a property on the job of: where is the studio version string we used to generate the baseline.. Unable to see cursor over dark background color in editor. Improve text hover for CSS property names. Reduce number of refreshes in Git Index and reduce work done during refresh. Previously I thought we could entirely remove refreshes when files change inside a git connected project. Turns out that we couldn't but there are other things we can do: - When we get resource change events, only update the changed files, don't do a full batch refresh. - Don't call batch refreshes from some actions like deleting files folder or moving files through our UI. The connected filewatcher on the repo should pick up a file event or two to the \"index\" file which will trigger a batch refresh. - When we do refresh we call one process and then we spawn off 3 parallel jobs to each run another process to update our listings. We may be able to reduce the number of processes down to as low as one in most cases (or two in worst case).. Improve Unit test coverage on the 'participant' branch. From Boolean) description Supported Platforms: description Supported Platforms:. Display JS metadata in Help View (see Aptana Studio for example) description Parameters Returns return-value Remarks remarks Example example (collapsed) Supported Platforms Specification See also HTML DOM 0 Reference Titanium Mobile Reference (if applicable) Hover and Dynamic help for functions is identical to properties, except it shows the method signature. Support rbenv usage. Toggle Block Selection does not work with word wrap. Don't block IDE usage when updating user bundles. Ctrl+Shift+ has two available commands. Now that the servers view is back, we should hook up the rails application launching to use it as it used to in RadRails.. Our current unit test coverage hovers around 30% (class, method, block, and line) We need to get this higher. Here are the classes we need to test: Please create a sub-task for the class you want to test, and edit the document to indicate you've claimed that test. If there already is a task created for a particular class, it means someone else has claimed that one, so choose another. If there are a bunch of related classes, you can group that into one task. Coverage goals for all classes below is a minimum of 100% class, 70% method, 80% block, 80% line (default Emma values in Jenkins) HTML (Michael) Scanners (Chris) Ruby (Allen) FTP FTPS ArrayUtil (Done) (Done) ExecutableUtil FileUtil (Michael) IObjectPool ProcessStatus (Chris) (Done) RegexUtil (Allen) StreamUtil URLEncoder Third Batch FTPClientPool ParserPool Model Manager ** SamplesManager (Michael). Variables and functions defined by user are not shown in code assist. They are also not displayed in outline. Steps to recreate problem: 1. create blank js file 2. open it with JavaScript Source Editor 3. Paste following sample code: 4. on empty line after function, invoke content assist by pressing ctrl + space Only items from JS core are displayed. There are no items from current file. Attached file shows displayed content assist. \"foo\" should be one of the proposals, but is not.. Support watch expressions in ruby. Looks like we can just port the RDT impl over easily. It's a single class with a couple nested classes in it, and it gets registered via a extension point.. h2. Description When launching an app on win 10 mobile with a classic project, the default from our templates is used. However, this uses a landscape image on a vertical screen and results in the image looking both too small to read and having large black horizontal bars on top and bottom (letterbox TV style). Ideally the splash screen should have our logo centered and the red color filling the screen.. Windows: Splash screen on Win 10 mobile doesn't look right - horizontal bands of mismatched color above below. Windows: Parity: Cannot set HTML property on a webview. Windows: Data binding: returning false displays false. Windows: Data binding: Using attribute in ListItem that is not in data crashes view. We have no conversion of in our Kroll V8 bridge - and we don't handle this special in our hyperloop code - so I assume right now it'll try to wrap in a hyperloop proxy and fail miserably. From discussion on Ideally I think we should: - accept a JS String for any argument field that accepts - if the string is for a single char Character and has more than one character, we should take the first char of the string and spit out a nasty warning in the log. - When a method field returns a convert it into a Java String and the bridge will convert that to a JS string for us.. Hyperloop: Android can't access fields with primitive array types. Hyperloop: Android Anonymous interface need to have default of. Windows: is crashing. the of the HTTP obj is not working, when used the send() crashes all the time If I remove the and handle the type by default in the back then the send() works We need of course this feature in Example code:. Windows: App crash on click eventlistener of appended row of tableview. Windows: Support bindId property on ListView. iOS: Log messages are not always displayed on compile time. Windows: Support Notifications sent while in background. Windows: Update parity report to show support for missing items. Kota made great strides in eliminating a large source of memory hogging going on: storing all constant property values in fields of the enclosing type. We'd not only store them for the class definition but also for every instance! Now that we store them in an unordered map and generate them on-demand they're only cached once per class. But it'd be a good improvement to move to something like an LRU cache to evict older constants out of the in-memory cache if we ever need to free some memory. It'd be good to have more details on just how much memory these are taking up and what the speed perf overhead of always generating them on-demand would be (or if that'd even be feasible whether the constants would be considered equal when regenerated).. Windows: Support for Localization i18n. Windows: Add support for shadow* properties on and Button. Add support for Shadows for Windows Phone This is a vague request but most shadow API's are not supported in Windows shadowColor, shadowOffset and shadowRadius. Also note that these properties are not supported on iOS Button; and shadowRadius isn't supported on iOS Label.. Windows: Support methods. Windows: Implement point, ). point, ) : Point Translates a point from this view's coordinate system to another view's coordinate system. Returns null if either view is not in the view hierarchy. Keep in mind that views may be removed from the view hierarchy if their window is blurred or if the view is offscreen (such as in some situations with If this view is a the view's x and y offsets are subtracted from the return value. - - -. The list of capabilities specified in the appxmanifest has changed from to 10. Some of them apply only to one version or the other, and some of the new ones require the tags be namespaced. Right now our support is basically to allow a passthrough of XML from to the manifest to add more capability tags. But I'm not sure if we say use the new tag for Windows 10, if that will break a build for Windows We may need to be smarter to filter out bad values for certain versions. Windows 10: Windows Windows Phone. Windows: Error while on Windows Phone. Windows: Can't find windows device or emulators. We currently require that the Windows Phone tooling is installed for us to be able to get the emulator listing. We should support Windows 10 universal apps without requiring the user to also install the Windows tooling. We'll need alternate ways to get the list of emulators for Windows 10, rather than using Windows Phone I believe we can already do so using our own custom. Windows: Phone App crashes after Splash Screen. Windows: The textAlign and verticalAlign property of the label is not working on windows phone. We currently have hard-coded to be on Windows 10. We should investigate how to get the full version string (doesn't the code that worked on Windows work on Windows 10?). On Windows Phone we use a Pivot: On Windows Store(desktop) we use a ListView. Just by how the macros fall, we use the same in Windows 10 Desktop and Mobile now. In the source we note we may want to use a SplitView on Windows 10: and I think we have the choice of all three on Windows 10, so we may want to see which is the best fit.. Our current implementation is \"turned of\"' for because the API doesn't exist. The API does exist in Windows 10, but since I wrote most of the code before we started out real efforts, I did not finish it fully. We need to fully hook it up (particularly, we don't actually generate a ContactList on the Windows side when we do a so any operations on the js group returned won't work.. The bundled make in Windows SDK has a set of default assets it packages apps with. One of those is a temporary PFX key. However, they only auto-insert it if the app has no apps manifest, but we generate that. So we need to add logic that for not distribution targets that require PFX cert we should just use the temporary key transparently much as Visual Studio does. So for ws-local on and for wp-emulator, ws-local, wp-device on when no PFX is found, use this key and don't prompt.. Using this code: The textfield \"password\" don't mask the content if field is not editable. If property editable is set to true, the value is masked. Works fine on iOS devices.. Windows: Can't display local url on windows phone. We currently use macros that will effectively compile one block or another depending on whether the code works is available on phone or desktop. This is the right approach for Windows 8, but in Windows 10 a universal app is generated and the check must be done at runtime. We need to convert these checks into a macro and have the macro defined to do different things for versus 10. See and I think we can extract a simple macro like: We may of course need more variants for things where the API is now available in Win10, but was only available for phone or store on etc. Clipboard was only for in but is universal in 10). Windows: Convert (store or phone only) code to using macros to guard. When we target Windows 10 as the end SDK target for a user's app, we need to be sure we use the Win10 compiled SDK libraries.. We have separate builds of the SDK done against Win and Win 10. We need to package both versions up into a single zip that is used in the main SDK. We can't just mash together the two zips, as we need to adjust where the WIn10 builds get packaged up in the final zip. Right now they're under store x86 and store ARM. They probably should be under something like \"win10 x86\" and win10\"ARM\" since they're supposed to be universal for Win10 store phone.. If we generate a native UI proxy (say an and add it to a Titanium UI, we don't properly clean up all the native proxies we've generated leading to a large memory leak. Specifically we need a way to track all UI proxies added as children in the view hierarchy and explicitly release them when the top-level native view is asked to release in our Java code. Be able to pass in some subclass of into Titanium methods that take subclasses. Once the V8 library is updated we'll need to do some significant work to update our native C++ code. There have been a number of large breaking API changes in V8 that we'll need to handle. See:. Add some mechanism to reference, include and use third-party libraries in Hyperloop JS code.. Android: Support usage of third-party JARs in Hyperloop. Support some syntax that allows users to implement a native interface in Hyperloop JS.. Support some syntax that allows users to subclass existing native types in Hyperloop JS.. Tried doing this (had to use JDK8), and got the following: It appears there are at least a few issues to resolve.. If you're using native API access and create something like a you'd naturally want to set a text label for the button. But the Content property is a with the understanding it could be a String or it could be an UIElement (in fact it could be a UIElement, and if it's not then it's basically converted to a String though how that's done isn't really talked about). We need to understand this nuance of the API and support settings string values easily,. Windows: Implement. If any of the app icons are missing, then search for and and us it to generate missing app icons. You simply need to the base Builder object's method: Here's a good article on MSDN about the assets for Windows apps:. Windows: ti build failed when logo image assets with invalid dimension exits. Parity: should support array of views on Windows as iOS. Import the Movies sample (alloy) by using the latest Appcelerator Studio release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.. If a developer uses the native wrappers they currently cannot generate native UI components and then add those to a Titanium View Window, and vice versa. We should support the ability to wrap native UI widgets as when necessary, or unwrap native components to native wrappers when necessary. This is something Pedro's handles.. We have a version of hard-coded into the manifest templates. We need to pass along the tiapp version number to the manifest. From the looks of it, I think the best approach is to use the first two digits from tiapp, and then we should manage the last two. The 3rd one should be an number each build. The 4th can likely just be a unix timestamp.. Windows: Module name suggestion should include text description, not just a regular expression for format. Windows: does not work. Windows: Adding items to a ListSection after creation of ListView doesn't update UI. In testing the RSS Reader sample, I'm seeing nothing happen once we do get the RSS feed fetched. Once I loaded everything up in Debug mode in VS2013, I see the following logs when it should be showing the new items in the ListView: Basically, our code works fine if all the items are created first, then added to sections, then the ListView is created from the pre-populated section. But if you generate a ListView with one section, and add items to it later async, nothing actually happens visually. We haven't hooked all that code up to do anything. We have methods for modifying the sections on a view, and I think that should work fine post-create, but the item manipulation at the section level just never triggers the view to add them.. Import the Employee Directory sample (alloy) by using the latest Appcelerator Studio release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.. Import the Field Service sample (alloy) by using the latest Appcelerator Studio release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.. Import the Todo List sample (alloy) by using the latest Appcelerator Studio release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.. Import the Rss Reader sample (alloy) by using the latest Appcelerator Studio release, through the dashboard. Then verify that you are able to build it for Win Phone and Store (after adding windows to list of deploy targets in If you run into any issues, please file additional tickets. If the sample needs to be updated in any way (like enabling capabilities), file a PR for the sample.. Windows: ti create for modules with long paths fails with cryptic errors. Windows: does not return correct values. Windows: Update and properties on CI build. This looks to be a mismatch in our implementation with the way the property is defined. We ask the current position status, but that value isn't \"good\" unless there's an active tracking session. The property is meant to convey if the app itself is set up to do location services, so it's more a check if they've set the in their I'm not sure if we can query capabilities at runtime or not. We might be able to do a simple call to the geolocator and catch exceptions to know if this property should be true or false.. The docs we use to populate the parity report (or maybe just the parity report itself?) aren't including the Windows specific types we've introduced. Specifically, we have a set of types implemented, but not listed in the parity report. I also don't see them listed in the bleeding edge docs at The types are here:. Windows: Fire routechange event. Windows: Add windows module build command to the CLI. Add the ability to build a windows module project from the CLI. Windows: Add windows module create command to the CLI. We should allow hooking and removing event handlers in a JS-like fashion and handling the conversion to the right native calls in native wrappers. We'll need to do some translation of event names and also mapping to various handlers event registration types that Windows uses, as well as wrap the added handler with a call to the callback function.. We need a mechanism as part of the build to crawl the user's app to generate the list of native types required. We may need to also handle \"dynamic\" requires and treat them as needing all native types. We can then use this list of types and their dependencies to trim down the list of included types we'd incorporate into the require and cast hooks from TIMOB-18878 and TIMOB-18879.. Implement the non create* methods: -beep -hideCamera -previewImage -showCamera -switchCamera -takePicture -vibrate. Windows: Allow casting to a different native type. We should allow the ability to \"upcast\". We could simply hang a \"JSObject type)\" method that is on all native wrapped objects and would take the new type name. Then we'd have a giant generated if else block where we test against the known set of type names and do the to \"cast\" it:. Windows: Stub module with constants, stubs for methods, no event firing. From I found that YAML files for generated directly under `Titanium`. Shouldn't that be placed under. h2. Methods - clearData( ) : void - clearText( ) : void - getData( type ) : - getText( ) : String - hasData( type ) : Boolean - hasText( ) : Boolean Number - setData( type, data ) : void - setText( text ) : void. Note that takes a special object defined as: We should represent that with a struct, much as we do other defined-object abstract types such as Point or Dimension. This class is used in conjunction with which eventually is consumed in the method. It seems to map to h2. Properties - a : Number - b : Number - c : Number - d : Number - tx : Number - Amount to move horizontally? - ty : Number - Amount to move vertically? h2. Methods - invert( ) : - multiply( m2 ) : - rotate( Number angle, ) : - scale( Number sx, Number sy, , ) : - translate( Number tx, Number ty ) :. Setting a ListView's searchText property does nothing right now. It should filter the items based on the search text. Unfortunately Windows doesn't make this easy for us. Looks like we need to filter the collections ourselves under the hood: - - - -. The search bar textfield isn't visible in the directory header. We need it ot be able to filter the list.. You can see space for the but there's nothing visible there.. h2. Methods - - Note that the responses use special objects, we should use structs to hold them like we do for Additionally, those objects hold other specialized properties that should also be represented by structs.. This is to ensure we have proper set up in TitaniumKit (likely already done for us by stub generation), and then to hook up the relevant properties in the Windows subclass - typically overriding some setters to take action. h2. Constants - ACCURACY BEST R O - R O - ACCURACY HIGH R O - R O - R O - ACCURACY LOW R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - ERROR DENIED R O - R O - R O - ERROR NETWORK R O - R O - R O - R O - ERROR TIMEOUT R O - PROVIDER GPS R O - R O - R O h2. Properties - accuracy - activityType - distanceFilter - hasCompass R O - headingFilter - R O - - R O - - purpose - - h2. Methods - getAccuracy - - - getHasCompass - - - - - - getPurpose - - - setAccuracy - - - - - - setPurpose - -. This ticket is to fire the relevant events when applicable for the module. h2. Events - authorization - calibration - heading - location - -. This involves using our module generator and stubbing out the full API of the module. We should have all the methods and properties set up in TitaniumKit with appropriate and have stubs to fill in for the Windows subclass' actual h2. Constants - ACCURACY BEST R O - R O - ACCURACY HIGH R O - R O - R O - ACCURACY LOW R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - ERROR DENIED R O - R O - R O - ERROR NETWORK R O - R O - R O - R O - ERROR TIMEOUT R O - PROVIDER GPS R O - R O - R O h2. Properties - accuracy - activityType - distanceFilter - hasCompass R O - headingFilter - R O - - R O - - purpose - - h2. Methods - - getAccuracy - - - - - getHasCompass - - - - - - getPurpose - - - - setAccuracy - - - - - - setPurpose - - h2. Events - authorization - calibration - heading - location - -. Note that each method returns a specialized Object as argument to the callback function. We'll need to wrap it in a struct as we do for Additionally, the response object has a specialized property value that should also be a struct. h2. Methods - -. h2. Constants - ACCURACY BEST R O - R O - ACCURACY HIGH R O - R O - R O - ACCURACY LOW R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - R O - ERROR DENIED R O - R O - R O - ERROR NETWORK R O - R O - R O - R O - ERROR TIMEOUT R O - PROVIDER GPS R O - R O - R O h2. Properties - accuracy - activityType - distanceFilter - hasCompass R O - headingFilter - R O - - R O - - purpose - - h2. Methods - - getAccuracy - - - - - getHasCompass - - - - - - getPurpose - - - - setAccuracy - - - - - - setPurpose - - h2. Events - authorization - calibration - heading - location - -. Looks like the simplest way to achieve this stuff is to add the components underneath a Border:. Windows: Support border* properties. Right now, I see failures for:. Right now, I see failures for:. Windows: HAL crashes on syntax for method invocation. The call is crashing in an odd way inside HAL in the controller once you've clicked on a person n the directory listing. Try out the Corporate example and click a person to see the crash. The root cause is the following syntax: Changing it to a straight up createView call doesn't trigger the issue:. Windows: Stub out remaining properties and methods on existing UI proxies for Corporate Directory app. The or option is required for , so it must be given on every build if not set via (TIMOB-16748). On Android, we use the the included in the SDK when none is given. Would it be an option to have a similar approach for Windows and default to the mentioned in the for example ?. The generated hpp files are using 2 space indents, we use tab characters (and display them as 4-space width); the inner namespace (UI) is not indented, but should be; there's also an empty line between the namespaces, and there shouldn't be; The curly braces should be on the next line, but aren't; The closing of the inner namespace (UI) doesn't have a trailing comment, but should; there's a space after JSExport and there shouldn't be. Here's what it generates: versus a good example: On the cpp side, it's much closer. The inner namespace should be indented, but isn't; and the closing of the inner namespace doesn't have a trailing comment.. Windows: module generator doesn't include UI proxy headers into the file. When generating TableViewRow, the wasn't modified to add the include for the file.. We should use a fully implemented algorithm for our require implementation that generally follows the spec: Tony L has implemented on top of Titanium APis for and Jeff H implemented in Objective-C. We also had an impl in Hyperloop, all of which we can try and re-use leverage.. we seem to do this pattern a lot where we pull something out of a argument list, cast it, check the type via assertion, etc. this is a good place to come up with either an inlined helper function or a macro. makes the code more readable and has the advantage for developers to ensure we have a very common pattern for how to do this logic. From Jeff's review comments here:. I would create macro that does this instead: which would generate this: From Jeff's review comments here:. HAL: Create helper for common property additions to classes. Can't we come up with something like this: This would generate: Advantage is that we force a compile time pattern for the TitaniumKit defined interfaces and it's easier later if we want to change the pattern or add assertions or even compile this code out with our compiler because this method isn't used by the app. From Jeff's review comments here:. Windows: Need to support UTF-8 characters. Related to PR 12 ( Added new issue entry for this so that we can track this. We may need a workaround for Currently some unit tests are failing on Yosemite. Maybe on specific version of iOS 8 too.. A comment with security level 'Developers' was removed.. We package up an ini file into the apps with the IP port to use to connect to the CLI and forward logs. We need to supply a C++ implementation of a logger that will use those settings to connect over TCP to the CLI and pass the logs along. Chris Barber has already done the equivalent for Windows hybrid here:. I'm not sure how exactly we sign WP apps. We can do XapSignTool as commented out here: But I think that's for \"company apps\" which I guess is sort of like adhoc distribution for iOS?. Once the build impl is done and we have a finish package, we need to hook up the install and launch of the generated app on the. This includes TODOs like: - Running cmake to generate the VS solution - Running msbuild against the solution - Fixing up resource copying into the cmake template or VS (not sure which we're eventually doing, but right now as it stands we stuff resources into Assets folder of cmake template before running cmake). h1. h2. Implemented h3. Properties - isActive - color - h3. Methods - hide( ) - show( ) h1. h2. Implemented h3. Properties - bottom - color - font - height - indicatorColor - left - message - right - top - width h3. Methods - add( ) - hide( ) - remove( ) - show( ) h2. Not Implemented: h3. Properties: - - messageid - style. See: Implement proxy for EmailDialog. h2. Implemented: h3. Properties: - bccRecipients - ccRecipients - messageBody - subject - toRecipients h3. Methods - isSupported( ) - open( properties ) h3. Events - complete h2. Not Implemented: h3. Properties: - barColor - html h3. Methods - addAttachment( attachment ) h3. Constants - CANCELLED - FAILED - SAVED - SENT. Windows: Implement. Appears to be phone-only.. h1. h2. Implemented h3. Properties - - color - max - min - value - showError - showPaused h1. h2. Implemented h3. Properties - color - font - max - message - min - value h3. Methods - add( ) - hide( ) - remove( ) - show( ) h2. Not Implemented: h3. Properties: - style. Set \"JS Editor\" as default editor for files. Can ignore for the moment.. The JSON style files specify style information for an app. We can provide CA for the property names, and also possibly common values similar to CSS CA. Need XML file containing CSS style information for the JSON configuration. See. For Alloy XML files, it is a file with XML tags, Need XML file containing tag information for Alloy tags. See. As an example: You would then define a controller named and you could automatically bind events inline in your controller code: So, we would need introspection on the items defined in the XML and display them appropriately in the content assist for the JS files. Right-click app models folder Pop up dialog box asking for model name, with a small table below for adding new values types For example: Add keyboard shortcut for opening dialog and generating widget (so user isn't forced to go through UI to do this action and can do so by keeping hands on keyboard). Right-click app widgets folder Pop up dialog box asking for widget name Add keyboard shortcut for opening dialog and generating widget (so user isn't forced to go through UI to do this action and can do so by keeping hands on keyboard) This will create a default widget in your projects's app widgets path.. Right-click app migrations folder Pop up dialog box asking for migration name Add keyboard shortcut for opening dialog and generating migration (so user isn't forced to go through UI to do this action and can do so by keeping hands on keyboard) This will create a migration file for the model specified.. Right-click folder Pop up dialog box asking for controller name Add keyboard shortcut for opening dialog and generating controller (so user isn't forced to go through UI to do this action and can do so by keeping hands on keyboard). Right-click app views folder Pop up dialog box asking for view name Add keyboard shortcut for opening dialog and generating view (so user isn't forced to go through UI to do this action and can do so by keeping hands on keyboard). Associate Alloy JS Makefile files) with our JS editor. file extension. What is the alloy JSON style configuration custom file extension we need to associate with? Does our JSOn parser editor handle the non-standard \"expression\" syntax?. Associate XML editor with files. This may not require any additional work. We may simply need to run the existing script as we do with typical titanium projects. Here's what we had in the wiki: Then run the existing script for packaging What if the user is using an older SDK? Does alloy plugin to an < SDK and work transparently?. It's currently unclear if the work needs to mostly be done on the Studio side or the SDK side. In general, we would need a source map to connect the generated source code with the original source code so that users could place breakpoints in the original JS files and have it break appropriately.. This may not require any additional work. We may simply need to run the existing script as we do with typical titanium projects. Here's what we had in the wiki: Then run the existing script for running in simulator or on device What if the user is using an older SDK? Does alloy plugin to an < SDK and work transparently?. Hide Resources folder - Alloy generates the intermediate files there, most of the app lives in the \"app\" folder Long-term: - perhaps we root Alloy projects on the \"app\" folder, and choose an alternate presentation structure like Package Explorer. - What additional folders do we need to hide?. By default, a new Titanium project is an Alloy project - Select the \"blank new alloy template\" as the default in the titanium mobile project wizard. Alloy templates are similar to rails preset set of files, more a set of commands to run to generate a scaffold Need metadata format for Alloy templates and location on disk where they are stored (or how we will grab them) Alloy templates need to specify some sort of tags specifying them of type \"alloy\". Creating Alloy projects inside New Titanium Mobile Wizard. Creating a new \"blank\" alloy project is as follows: - Run regular Titanium Mobile project creations scripts) - Run 'alloy new to run the alloy generators - Add Alloy project nature (in addition to the titanium mobile nature, web nature) By default, a new Titanium project is an Alloy project Note that an Alloy \"template\" likely would already have all the generated files, so we shouldn't need to do the script utions (running titanium scripts alloy binary). Need a new Alloy project nature to tag projects with (and with which we can hang new icons, etc, on). Need icons for Alloy project nature. Move Template selection to front of project wizards. We move project template selection to the first screen in the project wizard (see Xcode for an example here) This allows the user to focus on what they want to create (blank project, game, rss reader, master detail, We then ask the user to fill in the later. (Basically swap the first and second page in most project wizards).. The determination of whether or not this needs to be run under sudo may not be easy for us to determine. We may need to assume no need for sudo? If we do need to run under sudo we'll need to handle prompting for the sudo password and piping it along to the command.. Titanium API not showing up at all in CA of a newly created project if \"Build Automatically\" is turned off. Auto-configure browser list to contain all installed browsers on Windows. Description: While testing the new feature that provides users with a view of the release notes, I clicked a link which opened JIRA in the same view. There was no option to return to the release notes, so I was forced to close the view. Steps to reproduce: 1) Install the latest Studio version 2) Remove SDK version if you have it installed (and any later versions) from your Titanium folder 3) Launch Studio and click the yellow \"updates available\" box 4) When the \"Titanium SDK Upgrade Available\" window appears, select \"remind me later\" 5) Use the help Check for titanium SDK updates option Result: SDK install begin with no preview of the release notes Expected: Release notes view always presented when installing SDK update. We should set up the CA platform list on Titanium mobile projects based on the deployment targets specified in the itself.. I invoked CA on using Titanium The results for what show up as supported platforms is pretty spotty. Most just show none. A few functions show Android, ipad and iphone. The \"sub-classes' API, Buffer) show none. Android doesn't show as only available on Android.. Provide more comprehensive CA on JS constructor invocations. The content assist does not shown Object instance methods for $ in controller files. This is a regression as the issue does not occur in studio Steps to Reproduce: 1. Create an Alloy project 2. Copy the below xml code in 3. In the file, type '$' followed by to show content assist with objects from Actual Result: Content assist shows the ids from the view as properties off $, but nothing like toString() or Expected Result: Content assist should show Object instance methods for $, such as and toString().. Enable Test and Performance services based on project's organization's plan. Associate Organization with Plan. Support detection of i18n translation keys in Alloy View XML text nodes and id attributes. Add a hyperlink detector to navigate from keys in TSS to definition.. Add a hyperlink detector to navigate from keys in JS to definition.. We need to start indexing the usage of translation keys in JS files so we can support F3 hyperlinks for navigating the relationship with their definitions in files. See. We need to start indexing the usage of translation keys in Alloy TSS files so we can support F3 hyperlinks for navigating the relationship with their definitions in files. See. Add a command with F3 binding to jump to the definition of translation keys in the file(s) in a Titanium Mobile project. This is simply a matter of defining a command with binding and handler, and then reusing some of the same implementation we have for the hyperlink detector from TISTUD-6692. Add a command with F3 binding to jump to of translation keys in other files in a Titanium Mobile project. This is simply a matter of defining a command with binding and handler, and then reusing some of the same implementation we have for the hyperlink detector.. Add data-binding attribute to Picker element.. We now can pass in auth for a given URL to our download manager (see TISTUD-6702). We need to break apart the utility method for installing modules to download and install separately and allow for passing in the auth in the download portion so for Mobware we can pass along auth to download the SDK zips.. Add hyperlink detector to jump from string keys in i18n files to usage in view files. Add hyperlink detector to jump from i18n translation keys in Alloy View XML files to their definition in files. Support content assist for curly braces syntax in bindings: we should provide CA for title subtitle after the period.. On clean installing the Appcelerator studio through installer, it creates additional folder Studio which contains an empty \"0D804B5\" folder. The actual installation of the product is in Studio\". Installing Studio dependencies fails when user has never run sudo before. Move Nukona out to it's own repo. We allow adding a node acs service underneath an existing project (definitely Ti Mobile projects, maybe any project nature?). When we do this we have a command handler which eventually call acs new. In 360 we need to override the handler and prompt user for org env and pass that down to acs new call.. Alloy: warnings relative to Custom TSS styles not being used should not be displayed. Load and store new property constant values from JSCA in JS' model for properties. Update CLI calls to old module create build python scripts. Look at parent screenshot 1, 'contentURL' property is not flagged as deprecated, but should be.. After encountering an error during the SDK configuration process I was unable to cancel the studio process a Mobile SDK\" Even after waiting 5 minutes it did not cancel and needed a Studio restart to resolve. I spoke to about the issue and the reason you need to cancel the studio process is because after the update error in the SDK tool occurs, the only option you have is to \"hide\". Previously that button would have been \"configure\". Attached the studio and diagnostic logs. Let me know if I need to clarify.. Creating an app from an alloy template is failing.. Tried all three preview links to install the update to and cannot get past the following error during the software update:. I took the studio updates restated my Studio. On restart I got the error prompt for 'An internal error occurred Computing SDK info'. Please refer the attached screen shot and log file for more clarification.. Module Project Packaging: Test steps: 1. Create an iOS Module Project. 2. Package module using all the three available option. Actual Result: No alert is displayed. Studio logs attached .Nothing displayed on console.. Steps Followed: 1. Create a Classic Mobile App with or without Cloud Services. Actual Result: NPE found in the log file. Please observe the attached log file for further clarification.. h5. To reproduce Right click on a project Profile as iOS device result App is installed on to device via iTunes and it is in state \"Waiting for profiler to connect\". h5. Expected result Message should appear and disappear shortly. For the controller code, content assist does not suggest any of the elements in the Alloy namespace, such as etc. See. No Mobile Web option is available for packaging under the global toolbar. Create a dark e4 theme (that is similar to our new \"Dashboard\" theme). Test Steps: a mobile project. the project on local server. the console view .screenshot attached. This ticket is to fix the issue long term timeframe) with our new skin and old theming system.. Pushed a possible fix via the method I describe above in a fragment in the repo.. Views revert back to white light grey background on redraw when user has editor theme applying to views. 1. Verify new eclipse theme \"Dashboard\" is being used in Preferences General Appearance. 2. Turn on option to apply editor theme to views in Preferences Studio Theme. 3. Choose a theme with a dark black background. Click OK. 4. Right click in a view like the Project Explorer. It will revert back to Dashboard theme's white light grey BG rather than keeping the black bg from editor. Result: 1. View takes on white BG color. Results: 1. View retains the same BG as the editor.. From Aditya: We also run into issues where the system path has been changed by the dev for some components but is not the same as the path that we check for our updates, which causes challenges when running updates. This pathing issue is both a Mac issue (where they edit their .bash profile and install paths VMware put node in opt instead of the default location and then the installer went into loop checking for node updates and installing) and Windows issue (where IT redirects installs from the user directory to some other path that they standardize on an NFS share for all end users) I think we need more details here. Are they installing multiple installations? Does this mean they're pointing at a specific install in the prefs but we're not honoring it? Are we just not picking up existing installs?. Platform Config Wizard: Not to resize the wizard width when expanding the Advanced Settings section. The preferences page for the JSLint validator used to have an open text field for setting options using JSON. It no longer does. Users can still set options using *jslint comment directives in their code.. If a user adds a new remote but doesn't perform an action that would actually fetch or hit the remote, git doesn't \"grab\" the list of branches at that remote. When a user adds a remote through studio we can pass a flag that forces an immediate fetch to help alleviate this.. Now that we can generate pull requests in Studio, it'd be nice to see the list of open PRs against a given repo and select them to merge the PR. We need to hook a menu extension to show the listing of open PRs and merge the PR when selected. (The user could optionally supply a commit message, but I think for a first cut we just send no commit message and they will likely generate a default). List open pull requests for git repo attached to github, selecting PR opens in browser. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the iOS \"profile on device\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the iOS \"test on device\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the iOS \"debug on device\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the iOS \"profile on simulator\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the iOS \"test on simulator\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the iOS \"debug on simulator\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the Android \"test on emulator\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the Android \"profile on emulator\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the Android \"debug on device\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the Android \"test on device\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Every time we added a new mode for a platform, we generated new launch config types. We shouldn't need to do this, and should instead be able to simply add a new launch delegate, shortcut, config tab for the new mode. We typically have a \"device\" and \"simulator\" launch config type for each platform. We should be using that across all the modes of \"run\", \"debug\", \"profile\" and \"test\" - rather than defining a new launch config type for each mode. This ticket is to remove the Android \"profile on device\" launch config type, and then update the delegate, shortcut and tab group to point to the standard android device launch config type id (an attribute on the extension and for the classes usually one single reference to the id in code). It will also involve removing the launch config type image registered for the profile launch config type.. Login to Titanium Studio. File Restart. Actual are not getting attached.. Alloy Editor: new model wizard allows multiple columns with same name. Incorrect syntax error notification for a model's use of the keyword 'default' I installed an npm mode mysql ( which installed nicely but Titanium Studio is throwing exception errors related to an object property named 'default'. Code snippet is below: Screen shot is attached. Perform shallow clone and remove .git directory when importing samples from git repo. Update the Dashboard side to call the SDK-Info command with a \"windows\" key. Then, parse the result and display any info (like we do with the rest of the platforms). The Tizen section in Dashboard will look similar to what BlackBerry one shows.. Update the Dashboard to check for Windows Phone SDK and display corresponding message. We need to implement an SDKLocator subclass for windows. The class typically just looks up the SDK given the preference value and does some minor validation on the file folder structure, and then generates \"SDKEntity\" instances for each version of the SDK contained therein (which may just be one version here).. Add Launch shortcut for packaging a Windows Phone app. Add extension for Hook to the launch config type defined by TISTUD-4375. typically just define launch config type id we're tied to in extension and subclass of enablement expression strings; pointer to icon. Add launch config type image for packaging a Windows Phone app. Add extension for - refers to launch config type id and icon path.. Add extension for - refers to launch config type id and icon path.. Add extension for with an id, a handler. Implement the handler that will open a packaging wizard. The wizard will use the banner image defined in TISTUD-4363. The wizard will step user through the values options required to package an app.. Add launch delegate for packaging Windows Phone app. Add extension for Hook to the launch config type defined by TISTUD-4375. Typically need to subclass an standard titanium tab group base class, add a tab class. Tab class will define any Windows Phone specific arguments we need (currently unknown).. Add extension for Hook to the launch config type defined by TISTUD-4370. typically just define launch config type id we're tied to in extension and subclass of enablement expression strings; pointer to icon. Add extension for Hook to the launch config type defined by TISTUD-4370. Typically need to subclass an standard titanium tab group base class, add a tab class. Tab class will define any Windows Phone specific arguments we need (currently unknown).. Add extension for Hook to the launch config type defined by TISTUD-4370. Adding support to command helper(s) defined in extension (TISTUD-4357) for running.. Add extension for Hook to the launch config type defined by TISTUD-4366. typically just define launch config type id we're tied to in extension and subclass of enablement expression strings; pointer to icon. Add extension for Hook to the launch config type defined by TISTUD-4366. Typically need to subclass an standard titanium tab group base class, add a tab class. Tab class will define any Windows Phone specific arguments we need (currently unknown).. Add extension for Hook to the launch config type defined by TISTUD-4366. Adding support to command helper(s) defined in extension (TISTUD-4357) for running.. Add extension for does not include the launch delegate or shortcut.. simulator launch (16x16, typically same as icon used in modules table and user agent). device launch (16x16, typically device with small platform overlay on bottom right). package wizard header (48x48, typically large platform icon in box). 16x16, typically platform icon with box. 16x16 enabled icon 16x16 disabled icon 12x12 enabled icon (may be shrunk version of 16x16). Add 16x16 and 12x12 icons for Windows Phone platform. Define the pref page id, pointers to the 12x12 and 16x16 icons for modules table.. Add the preference page extension, add a preference page that includes a path to the windows phone SDK.. Add extension stub (just basic name \"Windows Phone\" id \"windows\"? - check with platform for the id they'll be using sdk support check) (core). We have a handful of FTP and SFTP plugins. I'm not sure if they're advertised or used much by Titanium Studio users. We may want to break out an S FTP feature (and repo?) to move them to, build them separately and then include them under the Aptana Studio umbrella so they don't get installed in Titanium Studio by default, but only in Aptana Studio (like we did with We already have the S FTP library in it's own feature and build. It would likely be combined with the following:. Move BlackBerry preference page to blackberry UI plugin. Re-order the Test items under the main Run menu. We only show the user's personal repos in the listings. We should also look for the repos they have access to from their organizations.. h5. Problem Code completion is not automatically being displayed for Alloy TSS files. h5. Steps to reproduce 1. Create a new Alloy project 2. Open and edit the file - for example: Property name proposals (beginning with b) should automatically appear after hitting the 'b' character on the newline between the curly braces. Instead, user has to hit Ctrl+Space to invoke CA manually.. Code completion broken in Alloy TSS for selectors with IDs not defined in a view. h5. Problem Code completion is throwing an exception and displaying an error dialog for Alloy .tss files. h5. Steps to reproduce 1. Create a new Alloy project 2. Open and edit the file to be: 3. Invoking content assist inside the braces throws an uncaught NPE and displays an error dialog.. A comment with security level 'Developers' was removed.. This involves moving the definitions and related classes for contributing the Publish Package - Adhoc action to ios' own plugins.. Refactor the Titanium module project wizard to have iOS plugin contribute its entry. Refactor the Titanium module project wizard to have ios plugin contribute its entry as shown in the screenshot.. Move all references of iOS from the mobile and core plugins to ios plugins. Once all the subtasks of refactoring the mobileweb code into its own plugin is completed, all the references of ios from the and has to be either removed or moved to ios ui core plugins. All the constants, resources and utility methods corresponding to ios should only be available in ios plugins.. Move Publish Package - iTunes action to iOS plugin. This involves moving the definitions and related classes for contributing the Publish Package - iTunes action to ios' own plugins.. Move Run iPhone Simulator action to iOS plugin(s). This involves moving the launch shortcut definitions and related classes for contributing the Run iPhone Simulator action to ios' own plugins.. Refactor the modules table section of to have ios plugin contribute its column. Have iOS plugin contribute to the preferences page. We should have a subnode for each platform under Preferences Titanium Studio Titanium and move the respective section from Titanium preference page there. The plugin will contribute the iOS preference page and handle its preference settings.. Move Run iPad Simulator action to ios plugin(s). This involves moving the launch shortcut and related classes for contributing the Run iPad Simulator action to ios' own plugins.. Refactor the Deployment Targets section of to have ios plugin contribute its entry. Refactor the Titanium project wizard to have ios plugin contribute its entry. Currently the Titanium project wizard defines all the checkboxes for deployment targets. We should have the ios plugin contribute the following attributes through the extension point from TISTUD-3066: 1. A display name (\"iOS\"); 2. A string for platform type (\"ios\") that will be used by CLI and other necessary operations; 3. A mean to check if the requirement for platform support is met, if the Titanium SDK contains the platform, if the platform SDK is installed (not applicable to Mobile Web), and if the OS supports the platform (not applicable here either), so the project wizard could enable disable the checkbox as appropriate. It should return a status so we could display a warning or error message if needed. 4. Potentially a post-project creation hook to perform any iOS specific task needed (don't think we have any?). 5. An optional \"priority\" attribute to control the order of the platforms both here and in Currently we are sorting them in alphabetical order, but there might be a case in the future where we like to have the flexibility.. In XML, if you invoke CA after a ' ' we suggest attribute names, not values.. In HTML, if you type ',\", we auto-pop CA. That isn't the case for XML. We should make it do so (mainly for alloy, because normal XML doesn't actually have any proposals).. Once the user is able to set the path to the NodeJS source folder we need to be able to index it to get the details of the core modules under lib. These are straight JS files, so we can index them using our current mechanism. This should be treated like a 3rd-party library that can be attached to JS projects (much like an external JAR for JDT, possibly even just attaching \"Node\" to a project entirely which would be like attaching a JDK so it attaches the core modules form source and the $NODE PATH from the binary install).. NodeJS's core modules are defined in JS files under the lib subdir of the Node source package. This is not installed when the binary is. If the user has a source package on their system, we should allow them to point to it so we can look up those core modules. This would involve setting up a preference constant to use as the key to store the path, as well as the UI fields to set edit it in the Node preference page (which already exists and has a field for setting the path to the binary install).. We need to provide content assist for the list of property names for a given element in TSS files. is the token we'd suggest. We should take the string which is the key of the surrounding object, convert it to a fully qualified type name (see TISTUD-2783), then query the list of properties for that type. If the string is not the name of a type, but is a class or id, we need to query the class id index from the view files to resolve it to the type it is hanging off.. Provide content assist for property names in TSS. We'll need to begin indexing alloy's XML files to record the list of classes and ids used. This will then be used for TSS code assist. The involves adding a new for XML files. In the participant we may filter when we activate to only projects with alloy nature and files under The participant would parse the XMl file and traverse the AST to get the class id attribute info. When we record a class or id reference, we will likely also want to record the fully qualified type name of the element it is on. In this case we'd record that has a with an id value of \"myLabel\". The type is required to determine the property list in TSS content assist, as well as content assist in controller JS. The type namespace mapping is the same as in TISTUD-2783. Please note that the top-level widget (the child under the of would have an id of \"index\").. We need to offer up content assist for the keys of the JSON-like objects in TSS files. This ticket specifically addresses offerring up the list of classes and IDs found in the view files. The token is what we'd suggest. IDs use a prefix like in CSS, and classes use . The list of classes and ids is found by querying the indexed values from TISTUD-2798. should query all files. For other tss files we can limit the scope to just the associated view (same hierarchy and basename).. Once we have a proper parser we can use it to highlight syntax errors. This will involve creating a build participant that simply grabs the context's AST, asks for the SyntaxErrors and hooks them as problems to the BuildContext. See. We need to generate a TSS Parser. See the PEGJS grammar here: We'll need to generate an LALR grammar from that and then use beaver to generate a parser. We may be able to simply copy the and modify slightly to handle the changes that alloy introduces.. Hook up a special Content Assist processor for Alloy view XML files. Provide Content Assist for attribute names in Alloy view XML files. Alloy uses XML files to define views. We should provide content assist for the attributes of elements. For attribute CA we need to look up the properties for the given element's type in the JS index, as well as the events. To look up the type name, we take the element name as the type name and determine the namespace prefix. The default prefix is . If there is an attribute, use it's value as the namespace. Alloy will provide us with the exceptions to the rule for namespace mappings. - - - The list of attribute name proposals is: The list of properties of the type The list of events of the type. Each event name is transformed to be - \"click\" - \"onClick\" The common set of attributes: , and . It should be noted that the element may only have and attributes. The special element may have , , , and .. We explicitly make use of \"Window\" as the assumed global namespace for all JS files. This is only correct if the file is intended to be run inside a browser. With the use of TiMobile JS and in that environment, \"Global\" is the type we should be querying - not Window. We may need to alter indexing CA to determine the proper Global type to use based on the file's location, or project nature. We can safely assume that any inline JS in an HTML file will use Window. Beyond that we may just want to assume Window for all except Titanium Mobile or projects.. There are no entries for things like etc in our metadata. We need to add metadata for the new items added in ECMAScript 5. See and. When we lookup globals for Content Assist we explicitly look for members of Window. This is wrong, because we also need to look up members of it's supertype Global.. Webserver core plugin starting too slowly. Restrict the icon to standard app store guidelines.. A comment with security level 'Developers' was removed.. Add a right-click \"Alloy Add Widget menu item command that opens a dialog wizard similar to our Project template \"alloy list widgets\" command. When user selects a widget put the id that is listed in the returned json metadata for the widget into the Alloy in the dependencies object. For example if the user selected the \"Search For Books\" widget then the config should look like the following. , , ,. Once we have the deprecated flag for more JSCA members, we need to validate and warn about deprecated usage on both build and reconcile. This would leave the typical yellow \"squiggly\" underlining of the reference, as well as an entry in the Problems view.. HTML Files get !DOCTYPE declarations marked as warnings for unclosed tags. Add Update All Modules Functionality. We currently assume that a project root is the module root path. We need to query node npm for the list of module load paths ($NODE PATH) and try to resolve search against those, as well as handle searching up the hierarchy for node modules directories, and handle loading \"core\" modules from node itself. The following pseudo-code gives the algorithm: See: Additionally, it may make sense to index the paths specified in NODE PATH on startup.. Add Alloy Widget menu item to select import widgets that are available locally. Add a right-click menu \"Alloy Add Widget (dynamic list of widgets)\". Place a separator between the dialog item (from TISTUD-2280) and the actual list. \"alloy list widgets\" command. When user selects a widget put the id that is listed in the returned json metadata for the widget into the Alloy in the dependencies object. For example if the user selected the \"Search For Books\" widget then the config should look like the following. , , ,. ", "contenttype": "application/json", "created": 737603, "id": 36, "language": "en", "user_name": "cwilliams", "email": "cwilliams@appcelerator.com"}]}