{"contentItems": [{"content": "Enricher broken when target expression references a key inside a map. Message mime type encoding must be reset when payload is set without a datatype. is maintaining previous instead of cleaning it, this is causing issues as transformers read the payload value taking in account the mimeType, which won't match the payload that was set.. Unnecessary tracking of overridden non disposable objects in. Datasources defined using Oracle's JDBC driver are not being disposed, causing a memory leak. Problem seems to be caused by a which is registered by the driver but never released. Issue can be reproduce creating a mule application using the attached config and adding the Oracle JDBC driver and causing a re-deploy of it a couple of times.. Content-type is not set on HTTP responses. Datatype cannot be configured when adding properties using. DataType does not validates encoding. DataMapper is accessing some elements in our code that is defined as protected. Because now DataMapper is going to be a Mule plugin, this won't work anymore as it will ran in a different classloader. Need access to the following fields on and aliases Need access to class. Message transformation must maintain original mimeType and encoding when transformer does not provide them. When Content-Type property is set on a message, then payload's data type must be updated to reflect the new value.. Message transformation must no update payloads data type when payload was not transformed. Improve MuleMessage's data type consistency. datatype is not being properly updated and maintained. For example: does not update dataType's encoding does not update dataType's mimeType does not update dataType's type is not update dataType when a encoding property is set on the message Improving data type consistency and propagation is required to better support auto and mapping tools. As part of the library updates related to security there is a couple of changes that must be backported to and MULE-7789: needed to remove the usage of tomcat-util artifact (this one is already included in branch) MULE-8315: needed to upgrade tomcat libraries to a newer version. There is a vulnerability issue on the jruby version used in old Mule version. Updating Jruby to a newer version requires to upgrade to joda time, which also requires to update other dependencies. So we have decided to remove JRuby from old Mule distributions. Remove JRuby from distribution. Test support for TLS SNI Extension in Http Module Requester. Moving packages on spring-config module from to. Move packages on annotations module from to. Redesign context builder discovery for OSGi. Current bootstrapping mechanism inspects all available jars searching for bootstrap properties files. That must be modified to work on an OSGi container. In OSGi, bootstrapping should follow white-board model so a bootstrapping service can be used (with no OSGi knowledge) which would enable test running with not container to be able to bootstrap the mule context.. Create a Pax-exam version of in order to run mule tests inside an OSGi container. Detect and report issues and things to improve. Add a way to configure default threading profile. New Database: code cleanup. Transformer resolution in fails depending on which order transformers are found. Race condition creating instances. Constructor of is updating the expression language configured in the This creates a reace condition when there are more than one instance created and multiple threads using the expression manager. In those cases, some threads can get a NPE. This is a problem using Data Mapper as they extend the There is a second problem having constructor setting the expression language: after a DM component, the expression language use in the app will continue to be the expression language from DM, not the original mvel. is not properly configured in some scenarios. ", "contenttype": "application/json", "created": 737603, "id": 61, "language": "en", "user_name": "pablo.kraan"}]}