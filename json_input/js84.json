{"contentItems": [{"content": "Add Master Flag to enable fine-grained filtering of HTTP endpoints.. Need support for Authorization information via HELP.. We should add information about authentication to the help message and thereby endpoint documentation (similarly as MESOS-4934 has done for. We introduced a number of parameters to the subprocess interface with MESOS-5049. Adding all options explicitly to the subprocess interface makes it inflexible. We should investigate a flexible options, which still prevents arbitrary code to be uted.. The design doc can be found here:. Document scheduler driver calls in framework development guide.. Improve upgrade compatibility documentation.. Investigate and document upgrade compatibility for release.. The online documentation has a number of bad formatting issues and broken links. The allocator recover() call was introduced for correct recovery in presence of quota. We should add test verifying the correct behavior.. Draft operator documentation for quota. Draft an operator guide for quota which describes basic usage of the endpoints and few basic and advanced usage cases.. Draft Design Doc for first Step External Volume MVP. As part of the overall design doc for global resources we would like to introduce improvements for Docker Volume Driver isolator module ( Currently the isolator module is controlled by setting environment variables as follows: We should develop a more structured way for passing these settings to the isolator module which is in line with the overall goal of global resources.. We need to validate quota requests in terms of syntactical and semantical correctness.. The libprocess post get handlers currently do not consider query and fragments parts of the path correctly.. As we decided to create a more restful api for managing Quota request. Therefore we also want to use the HTTP Delete request and hence need to enable the to send delete request besides get and post requests.. We have a number of test issues when we cannot remove cgroups (in case there are still related tasks running) in cases where the freezer subsystem is not available. In the current code ( we will fallback to a very simple mechnism of recursivly trying to remove the cgroups which fails if there are still tasks running. Therefore we need an additional which doesn't rely on the freezer subsystem. This problem caused issues when running 'sudo make check' during release testing, where BenH provided already a better error message with. We need to to validate quota requests in the Mesos Master as outlined in the Design Doc: This ticket aims to validate satisfiability (in terms of available resources) of a quota request using a heuristic algorithm in the Mesos Master, rather than validating the syntax of the request.. We need to implement the HTTP endpoints for Quota as outlined in the Design Doc: (. In we have the following pattern. As we rely on the value afterwards we should use ASSERT NE instead. In that case the test will fail immediately.. Create a design document for the Quota feature support in Mesos Master (excluding allocator) to be shared with the Mesos community. Design Doc:. functions are not allowed by styleguide. Reflect in documentation that isolator flags are only relevant for Mesos Containerizer. Draft design doc on global resources.. We plan to rename \" shutdown\" endpoint to \" teardown\" to be compatible with the new API. \" shutdown\" will be deprecated in or later.. The header include order for Mesos actually follows the Google Styleguide but omits step 1 without mentioning this exception in the Mesos styleguide. This proposal suggests to adapt to the include order explained in the Google Styleguide include the direct headers first in the .cpp files implementing them. A gist of the proposal can be found here: The corresponding Review Board review can be found here:. As all the explicitly set flags are defaults, we can remove them and simplify the code. MESOS-2375 removed other occurrences of these default flags.. Yes, just discussed with BenH about this today.. Cody's plan from MESOS-444 was: 1) -Make it so the flag can't be changed at the command line- 2) -Remove the checkpoint variable entirely from This is a fairly involved change since a number of unit tests depend on manually setting the flag, as well as the default being 3) -Remove logic around checkpointing in the slave, remove logic inside the 4) Drop the flag from the SlaveInfo struct (Will require a deprecation cycle).. Currently two formats of credentials are supported: JSON And a new line file: We should deprecate the new line format and remove support for the old format.. Deprecate legacy Credential format.. Currently master allows utors to be launched with either only cpus or only memory but we shouldn't allow that. This is because utor is an actual unix process that is launched by the slave. If an utor doesn't specify cpus, what should do the cpu limits be for that utor when there are no tasks running on it? If no cpu limits are set then it might starve other utors tasks on the slave violating isolation guarantees. Same goes with memory. Moreover, the current code will throw failures when using such an utor, when the last task on the utor finishes and is called with 0 cpus or 0 mem. According to a source code this should also include checking whether requested resources are greater than. ", "contenttype": "application/json", "created": 737603, "id": 45, "language": "en", "user_name": "js84"}]}