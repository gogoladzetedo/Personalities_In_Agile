{"contentItems": [{"content": "Android: Webview request send out beforeload event is excuted on Webview. iOS Non-public API usage: The app references non-public symbols in : ptrace. iOS: true doesn't (re)include file to be backed up. Android: can't be changed if annotation added to mapView.. Windows: App crash on click eventlistner of appended row of tableview. Windows: no way to handle elements by bindId in listview itemclick function. Windows: close window throws unknown exception. Android : Crashing when we are at two map view in scrollable view and click go back. Windows: can't address to parent on windows phone. iOS: Build error caused by missing define statements. iOS: gradient percentage units are not accurate. iOS: Views height width properties are not respected inside ScrollableView. Android: Longpress event on ScrollView doesn't fire. iOS: Weird behavior after crop the image captured from camera. Using ACRA lib, we should replace our crittercism module and upload crash reports as analytic events to our own PEM crash server. here's a quick idea of what the JSON should look like: and some references:. Android: API is not Working.. Set Xcode as minimum requirement for titanium build. Hyperloop Android: Requested module not found error. iOS: Remove deprecated properties and methods. Android: Not able to see the multiline notification on the android device.. iOS: Revert APSHTTPClient library to use back NSURLConnection. iOS: Window close event not fired on with ListView. Android: on andorid throw errors if the request is just created. iOS: Repeated call of should only result in 1 listener. iOS: Rename AlertDialog placeholder properties to hintText. iOS: Rename to UNKNOWN. iOS: FileStream Significant memory leak while files using FileStream. iOS: Problem with suffix like in ImageView source with app-thinning enabled. iOS: HTTP requests with basic auth returning with 401 Unauthorised trigger endless repeated requests. We have comet server which we receive updates. iOS version works but Android version responseText is empty which must not be the case. In iOS version ondatastream method receives ping items but Android does not receive. How to reproduce issue: There are two version (long version) (short version no need to send news to test it) use code as attached. Use iOS simulator then test the service by using following url: fill pass field: pass: murat123 result is shown in the terminal : \"its working\" means ondatastream works. We sended a news and it cought in ondatastream method but Android gives runtime error because responseText is empty. : : : its working!!! Now try same step with Android simulator there is no info print! ondatastream responseText is empty! I attached our comet service document for further explanation of comet service. Just run the code and see the response.. Android: HTTPClient ondatastream method responseText is empty for Android. This ticket is also a result of. Related to TIMOB-8453, deprecating drawables since this is considered a bad practice by Google.. don't review yet. Will add unit tests next week.. \"There are missing app icons\" error is returned if you build a mobile project stack that Create an Alloy project using stack: Appc CLI Core: Node: Actual: You should be able to build a mobile project stack without any issues.. PR Approved and merged!. Android: CardView Layout property not working as expected. When uting tio2 on the test suites in repo, it fails with missing. Tio2 currently cannot launch simulators using the latest ioslib. ute in will fail to launch simulator, even though it's built successfully.. Tio2: iOS Simulator not working with TIO2 using latest ioslib. iOS Profiler: Studio Error getting the performance data snapshot. A comment with security level 'Developers' was removed.. iOS: webViews within a scrollableView disappear. iOS: custom phone label in phones become undefined. Currently, we are using image files, copied into an assets catalog named LaunchImage for the launch screens. There is a newer method supported in Xcode 6 iOS8 and greater, whereby you can have a file, in which you can configure the launch screen, and it's adaptable to all device types. We need this file to exist in order for slideView splitView to work on iOS9. Similar to what we did with watchos2, we need work flow to be as such: 1. CLI generate an Xcode project template that contains a sample LaunchImage file. (ti create launchScreen) 2. Ti developer does what he wants in that Xcode project, very likely with an assets catalog in it as well. 3. when calling ti build, CLI copies this storyboard file and well as any associated image sets in the assets catalog into the build project. 4. will also need this so we either include automatically or have the Ti developer include it in Note: The existence of will make Xcode ignore the original LaunchImage asset catalog. But we still cannot delete this because it's required for this method in as well as devices < iOS8. Useful references:. KitchenSink: Make KitchenSink work for auto layout and refactor outdated methods. KitchenSink is a comprehensive test suite for UI-related components and views, but it's been outdated. We should fix certain things to make sure it works with the latest master branch: 1. Update to make sure it's the right size and that it doesn't have alpha channel. 2. Enable auto layout, add the following tag to the ios tag in true 3. With auto layout enabled, fix all deprecated warnings (mostly to do with AUTO property) 4. Any differences in UI behavior for auto layout enabled vs disabled should have tickets filed under the same epic with detailed descriptions so that we can tackle them one by one.. Android: TextField has to be called twice to select text. iOS: Remove \"pcm missing\" warnings. Since we released to support Xcode 7 iOS 9, we noticed the following extra warnings when doing an Xcode build. These should not appear. Likely caused by. Android: Add previewRect (height, width) to camera callback. Activity transitions in material design apps provide visual connections between different states through motion and between common elements. You can specify custom animations for enter and exit transitions and for transitions of shared elements between activities.. For the new iPad Pro there is a new icon 167x167 which is bigger than the current tablet 152x152 icon. We would like to have this support added to the TiSDK so that we provide the 167x167 icon and it then does the rest of the icon generation like it does for the 152x152 icon now on tablet builds. Also there needs to be support for the new iPad Pro splash screens for the resolutions: 2048 x 2732 (portrait) 2732 x 2048 (landscape) Doc. iOS: iPad Pro icon and splash screen support. iOS9: Properties of person is unavailable (module. iOS9: Support block callback on watchOS 2. Android: Null passed to putExtra() causes app to crash. iOS: ListView not rendered. Android: Push Notification Badge Number do not reflect to App icon. iOS9: Rebuild SDK dependent libs to support bitcode. Just need to rebuild the following: - tiprofiler - tidebugger - ticore - tiverify - - using Xcode 7 with in OTHER CFLAGS You can verify by using Check the output file for a sectname. using Xcode 7 with in You can verify by using Check the output file for a sectname. using Xcode 7 with in You can verify by using Check the output file for a sectname. using Xcode 7 with in You can verify by using Check the output file for a sectname. iOS9: Upgrade Facebook module to facebook. Implement Material Design Custom Animations.. Android: Material Design Custom Animations. iOS9: Remote images served over http crash app. As opposed to: it should be. Refer to this link. To enable watchkit, there is a need to configure app group, and generate a entitlements file. Currently the proposed method described here: requires us to manually set it up in the Xcode project, and also to manually create the entitlements file. It will be great if we could just write the app group array in and let do the rest. Apple Documentation:. iOS: Configuring app group and team identity via. Android: Child nodes of not generated as described in doc. iOS9: Disable bitcode in build settings by default. Android: Encrypted Database: Not being able to read installed database. iOS9: Resolve static analyzer errors on Xcode 7. Resolve all static analyser errors on Xcode 7. Verification method: 1. in Xcode, Product - Analyze 2. Results will appear, indicating all the analyzer errors. Following the release of Xcode 7 Beta 3, There's a in Build Settings which is set to , that prevents the Xcode project from compiling if it contains libraries that were not compiled with Xcode 7 Beta 3 with the same build setting. Reference Bitcode is part of the app thinning initiative. Reference A temporary work around is to set this to , and the project will compile. However, eventually we should have all libraries recompiled with the latest Xcode, so that future projects are app thinning ready. New tickets on rebuilding should be referenced to this ticket.. iOS9: Rebuild all static libraries in and appcelerator modules with Xcode 7. Android: Picker in ActionBar shown expanded on app launch with SDK. iOS: textfield getValue() returns the misspelled text under iOS8. iOS9: Deprecate and replace with NSURLSession API. iOS9: Implement native auto layout to use on iOS9 SplitView-. Because IPv6 support is so critical to ensuring your applications work across the world for every customer, we are making it an AppStore submission requirement, starting with iOS h4. Quote from link Three steps all developers can take to make sure their applications work over IPv6 networks: - Use the networking frameworks (for example, - Avoid use of IPv4-specific APIs - Avoid hard-coded IP addresses Essentially, if app developers are using the higher level APIs and frameworks and arent hacking around at the IP layer, their apps should probably just work on top of either IPv4 or IPv6. This is an important point most iOS developers probably do not need to do anything on the development side. Assuming they have followed best practices in coding and are using the iOS networking frameworks, they should be all set. Some developers, though, may be using lower level APIs that may involve direct usage of IPv4 addresses. Some developers may also be using the users IPv4 address as an identifier or for logging or configuration purposes. But again, most iOS developers probably dont need to change their code to support IPv6. Apple Guide:. Windows: Implement and. iOS: Map Crashes with SIGSEGV if you add a vector to a map with no mapType set. iOS: ListView editActions should hide after selecting an action. iOS: ListView new `rowAction` event should be `rowaction` (or `editaction`) like other events. The provide a way to load resources only when requested. The resources are grouped into tags, which is done through Xcode (also need to figure out, how to do this on proxy side). The Idea is, to supply an easy way to access and download resources and release them after there are not needed anymore as part of the app thinning process. The current progress can also be tracked, as well as warnings regarding low memory. On demand resources is only available for iOS9. that means for developers who wants this, they have to set the minimum iOS version as otherwise it won't compile. Just do this in. IOS9: App thinning: Support on-demand resources for app thinning. is getting deprecated in iOS9. We are using this in so we have to work on an alternative. Likely Deprecation details: AVPlayer Reference: Reference:. iOS9: Provide access to all defined in the bundle. iOS: Implement Hand Off for iOS8. Android: MapView is blank if the container view has rounded borders. Starting with iOS 9, the property must be set to YES on each which is used for running in the background. Apple has defaulted this to NO, meaning the existing behavior will break when linked against iOS9. Reference:. iOS9: Implement NSUserActivity Core Spotlight. Support Watch Connectivity, so that a watchOS2 app can communication with a Titanium application. Below is the pre-release documentation on this framework: Sample code:. IOS9 : Deprecate. iOS9: App thinning: Create XCAssets (imagesets) w the cli and access resources within those catalogs at runtime. Android: Soasta Touch Ids not recognised on android widgets. iOS: Calendar events status shows wrong status number or null. iOS: How to make Views inside tabbedBar work. Android: Region support for i18n directory. There is a request on github that we should expose the 'resultURL' from method. Also, we should upgrade the Facebook sdk in the iOS module from to. CLI: Add mocha tests to verify the installed SDKs. Incorporate APS SDK into Titanium Mobile. A comment with security level 'Developers' was removed.. CLI: Android platform targets not detected when xcopy is not available on path. Android can now support as well. To update iOS feature so as to achieve parity. Deprecate and use instead. Use following sample code (works for BOTH android and iOS):. Remaining misc and logic errors should be removed. Verification method: 1. in Xcode, Product - Analyze 2. Results will appear, look out for \"Core \"Logic\", \"API Misuse\" type errors Resolving this ticket will result in 0 \"Core \"Logic\", \"API Misuse\" type errors.. Optimization type errors detected by static analyzer are usually instance variables declared but never used. These should be removed. Verification method: 1. in Xcode, Product - Analyze 2. Results will appear, look out for \"optimization\" type errors Resolving this ticket will result in 0 \"optimization\" type errors.. Static analyzer detects potential memory leak of objects. These should be checked and fixed when necessary. Verification method: 1. in Xcode, Product - Analyze 2. Results will appear, look out for \"Memory\" type errors Resolving this ticket will result in 0 \"Memory\" type errors.. dead store errors are values assigned to variables during initialization that are never used or read. These should be removed. Verification method: 1. in Xcode, Product - Analyze 2. Results will appear, look out for \"dead store\" type errors Resolving this ticket will result in 0 \"dead store\" type errors.. iOS: does not reset when used in ListView. iOS 8 brings a new feature that allows users to perform actions against notifications. A short writeup is here: Apple has added notification action support so that user can immediately handle notifications in the home screen or lock screen, without the user having to enter the app. To enable this for both local and remote notifications, the following steps have to followed: 1. Create and Configure Notification Actions 2. Create and assign Notification Actions to Notification Categories 3. Register the Notification Categories and Notification Types 4. After which, add event listeners for notifications received while the app is active, or in background. key parameters: activation Mode: determines where app should be activated when user selects this action destructive: if this action does something permanent like delete if this action needs user to enter pin to continue key parameters: default actions to show. Will show all if user has set app to display notifications in alert style. : actions to show when user has set app to display notifications in banner style, and in lock screen. Note: categories: nil will allow local notifications to work without actions Note: To enable interactive remote notifications, steps 1 to 3 should be done as well. Followed by Require ACS to add additional field \"category\" to aps push packet, so that we can enable this for remote notifications.. The Titanium iOS SDK should have 0 static analyzer errors (it currently has 77). The static analyzer is very accurate and every issue identified by it should be corrected. The majority of these errors are logic errors division by zero, dereferencing null pointers, and memory leaks. Verification method: 1. in Xcode, Product - Analyze 2. Results will appear, indicating all the analyzer errors After resolving all issues, this should result in 0 analyzer errors.. iOS: needs an error event. Error connecting to profiler and debugger: Error Code 2 \"No such file or directory\". Dashboard: APIs query sel and unsel behaviors are wrong. In the dashboard of an arrow project in studio, the sel and unsel in query function behaviors are wrong. h4. Steps to reproduce: 1. Create a new arrow project 2. Run it 3. Select add column \"user name\" and create 2 users 4. Select API Docs - APIs - testuser and scroll to sel \"user name\"* (include the inverted commas) h4. Expected Result result should contain only \"user name\" h4. Actual Result result does not contain anything Repeat step 5, but enter in \"unsel\" instead: h4. Expected Result result should contain every other field but \"user name\" h4. Actual Result result only contains everything If you run the curl command as instructed, the expected results are given. Also see attached screenshot for reference.. ", "contenttype": "application/json", "created": 737603, "id": 76, "language": "en", "user_name": "cng", "email": "cng@appcelerator.com"}]}