{"contentItems": [{"content": "When running db functional tests with Oracle 12c there are tests failures. I'm attaching the build output. Install Oracle 12c ( Download MULE-9458 branch Run I've tried with and drivers.. When deploying the following config and sending this request () the response is never returned, probably because the stream is not closed. The correct behaviour seems to be not to allow to ute an async router when streaming.. Perform a release of MVEL that contains the fix for MULE-8831 Update to meet Maven Central repository requirements Update build plan to deploy to Maven Central Sign the jar using gpg Add javadoc plugin for releases. Cannot build Mule ESB Maven Tools with Java 8. non-blocking processing strategy should only allow. Currently we cannot force the configuration to use for all non-blocking flows, this is because thread pool belong to the listener and not to the flow. We need a bigger change that we cannot make now and we can only address it in Mule 4. Because we don't have a concrete use scenario for using non-blocking with a worker threading profile we want to validate that you can only use for HTTP listeners when flow's processing strategy is non-blocking. This validation will be on runtime.. NPE when filter fails. To reproduce: Deploy first application in Mule Standalone CE Deploy second application to a different server (app1 depends on it) Load application with some requests (Don't know if this is needed to reproduce) Deploy third application by moving the exploded app to apps directory. When deploying the below config deployment should fail because encoding does not exists. Now is failing in runtime when uting the flow. When using an invalid MIME type in set-payload the error message is not very clear. Deploy this app: Request: curl Unable to find a sub type. Message payload is of type: App log: ( Root Exception stack trace: Unable to find a sub type. at + 3 more (set debug level logging or for everything). Deployed an simple app with an HTTP listener and HTTP request. Opened Oracle Java Mission Control and when I went to the threads view I got an exception on the console. I cannot see the threads when using JConsole, it seems that JMC recovers from that error and shows the threads anyway but at the cost of having a big delay in the response time. This is working in. When all validator fails it should always throw an exception. Allowing all validator to avoid throwing an exception make us think about where should the validation result go. If we put it in the payload, we should overwrite the payload always, not only for the failing scenario. So, best solution for now is to always throw an exception. If needed in the future we can add the option to not throw an exception and put the result in a flow variable.. XSD Generator creates wrong attribute types for numeric parameters. h2. Size validator has int parameters for min and max values but the generated XSD creates attributes with Long data type. h2. is generated for parameters in isLong validator. Email validator fails for the following cases email is valid? no (leading space) no (trailing space). HTTP delete body is not allowed. HTTP requester throws timeout errors with POST request. When using in an HTTP listener it doesn't validate the client certificate. Reproduce running: curl -k. In MULE-6866 we upgraded to Groovy but according to there are known issues with Java versions lower than 7u60. We should increase supported and recommended versions to. Fail to expand properties when using property placeholder shared in a domain. When running mvn validate on module I get a warning because there is a duplicated declaration of in mule. Because we now have examples in Studio and the Mulesoft library, it doesn't make sense to also keep maintaining the examples on the distribution. They should be removed from the distribution and our code base. Notice that before removing them we need to make sure that: Some system tests use them. We need to make sure they remain available for those testes Keep examples folder with a README file saying that we are not shipping examples anymore (check content with Steven) Fix examples version in QA builds.. When using a with a serviceAddress containing MEL, Mule fails to start due to a in Example configuration:. This fails because unpacking embedded distribution dependencies is binded to phase, but jars are still not available (because we are running test phase). Apparently Maven dependency plugin when jar is not available and has to resolve the dependency, resolves the artifact file as the classes directory for the dependency, so every file in that module is available to the current module. As we are trying to unpack it fails because the classes directory is not a jar file.. JUnit rules and matchers for Mule Standalone server. Create a JUnit rule that starts Mule Standalone in the before stage and stops it in the after stage. Create a JUnit rule that starts installs Mule Standalone in the before stage and clean it in the after stage. Create a JUnit matcher to know if mule is running Create a JUnit matcher to know if application is deployed in Mule Standalone. AS A user I WANT I want the transport to be tested against a real broker and a real application. SO THAT I can be sure the transport works on real world usage.. Deprecate the module in and remove it in Mule Document functionality removed. - Check parent pom, all-modules, all-transports - Check impact in XML (if the module added XML syntax, document that those elements will not be supported anymore) - Check assemblies (CE and EE) - Check dependencies from integration and functional tests - Make sure to create the PR to be merged in branch - Log in a deprecation message telling how to replace it. - Log in module classes a deprecation message telling how to replace it. - Create a DOCS JIRA - Create a Studio JIRA. Bundle scripting pack with Mule CE by default. We need to create builds to run the test suite of Mule on Java 8. This should be Oracle and Open JDK. Review if we should use IBM JDK 8 Beta or wait till it's final. - Create build for Mule Common with Oracle JDK 8 (We need to run Mule Common tests with JDK 8) - Create builds for CE and EE with Oracle JDK 8 - Create builds for CE and EE with Open JDK 8 - Optionally create builds for CE and EE with IBM JDK 8 (currently in beta AFAIK) Consider the possibility of having Mule builds parametrized and configure Java 7 as the default JDK and override with Java 8.. Shouldn't share an HTTP connector without specifying it inside domain. To share a connector it should be mandatory to declare it in and reference it from the endpoint in connector-ref. Consider the attached applications and domain.. When trying to deploy app with to non existent domain is logged instead of an error. Release a new version of mule-mvel2, and upload it to codehaus repos. Version is tagged with label: in the git repository. Besides, we need to create build plan in Bamboo CE. Xpath is supported in the XSLT transformers but not in filters right now. This will only apply for xpath expressions not jxpath According to AFAIK we only support xpath version in flows using MEL, it seems we may support version in xslt in DM I think we support version All of these really should be aligned to the same version. Since xpath came out in 2007 I think we should be using that as a minimum, if not we should be using to take advantage of the newer functions. As we move onto the bigger customers and SOAP WS, they may well want to use XML.. Fix flaky unit test:. Should be able to replace Log4j for another logging implementation. ", "contenttype": "application/json", "created": 737358, "id": 59, "language": "en", "user_name": "alejandro.sequeira", "email": "alejandro.sequeira@mulesoft.com"}]}