{"contentItems": [{"content": "h5. Description: A kitchensink pass on Sunday worked as expected. Now we are getting reports of geocoder failures. From the mapquest board: \"The legacy Free & Open Plan was the free tier offered prior to May 1, 2015 and the legacy keys associated with the former Free & Open Plan begin with an Free & Open keys will work with Open Data APIs and SDKs hosted on Free & Open keys will eventually be transitioned plenty of notice our current Free plan. \" h5. Steps to reproduce: 1) Install KitchenSink 2) Navigate to Phone - Geolocation h5. Result: Currently reverse Geocoding seems to be working, I am getting an address. But still errors are thrown from Forward and Reverse, see screens h5. Expected Result: Coordinates from address (forward) and Address from Coordinates (Revers) geocoding data accurate.. Forward and reverse geo errors using APIs. h5. Description: Script Error Couldn't find module: for architecture: x86 64 When creating a project from the Appcelerator CLI and building to simulator, the app throws a runtime error as shown. NOTE: This only occurs when creating a project from the Appc CLI. Creating a project using Studio with or without services runs as expected. h5. Steps to reproduce: 1) Using Appc CLI, create a new Titanium project 2) Use \"appc run\" command to launch, choose iOS simulator h5. Result: Runtime error on device h5. Expected Result: Application runs as expected h5. Note: A diff on the projects prior to run (created in studio versus appc CLI) shows only the following additional lines included in the in the project created by Appc CLI:. Geocoder sample from Studio dashboard fails with uncaught NSException on iPad 2 simulator only. h5. Description: I was able to import the geocoder sample, then build for simulator. The console reports the following and the app did not run: h5. Steps to reproduce: 1) Launch Studio, check dashboard, import geocoder sample 2) Set to SDK and save 3) Run for iOS iPad 2 simulator 4) Observe console h5. Result: Error as shown above h5. Expected Result: No uncaught exception. Dev: Update Appcelerator Studio version number to. h5. Description: TIMOB-18214 was reported and contains two distinct issues. This ticket is being created to track one of those items. A complex app running on arm64 devices (may also occur on arm7 but we have not witnessed this to date) h5. Steps to reproduce: 1) Use code sample available internally 2) Install on iPhone 6+, 6 or iPhone 5s 3) Use application features until crash occurs h5. Result: Crash h5. Expected Result: No crash h5. Notes This does not occur with iOS or DOES NOT OCCUR in SDK. 64bit iOS devices: Intermittent crashes with SDK. iOS: Textfield borders - Some border types not displayed. This is a against Titanium SDK h5. Description: There are no borders displayed when specifying \"Bezel\" or \"Line\" borders h5. Steps to reproduce: 1) Import and build Kitchensink with SDK 2) Install on iOS 6, 7, or 8 device 3) Navigate to KS Controls Text Field Border Style 4) Examine the various border styles h5. Result: \"Bezel\" and \"Line\" border style examples have no visible border h5. Expected Result: All examples (except the \"no border\" style) have visible borders. h5. Description: Ritu experienced an issue during update to GA components which resulted in her ti config JSON getting corrupted. The cause or timing of this are not known. No other team members experienced it during our update testing, so at this point seems isolated to a single system. When a project is created in Studio in this configuration, the is not rendered correctly. In addition all commands for the CLI fail, see below for details: To fix the issue, the JSON structure was manually edited to be valid. h5. Steps to reproduce: Steps are mostly unknown, but have more detail on config 1) Configure a system in the following manner: - One latest development version of the SDK in your titanium folder, but no GA - Latest modules from a previous development build install - Studio Latest version - GA npm components (acs CLI Alloy 2) Check for Appcelerator updates in studio 3) Update your NPM components and SDK 4) Check in terminal \"ti config\" h5. Result: JSON structure is invalid, and the CLI is unable to parse. CLI commands fail, and Studio editor fails to render (since components are missing from CLI-built project) h5. Expected Result: CLI identifies bad structure and offers information on solution. Description: While writing bug TIMOB-8363 we checked the behavior of this iOS feature on a variety of devices and found new behavior but unique in all of them. For the device, the keyboard is not rendered correctly during rotation (see TIMOB 8363) On when starting with the soft keyboard on screen, on orientation change, the keyboard animates off-screen then is redrawn after the UI has handled the orientation change. This occurred on both portrait to landscape and landscape to portrait orientation changes. On iPod the same behavior like on iPod but this occurs only when making a portrait to landscape orientation change. For landscape to portrait orientation changes, the soft keyboard does not leave the screen during the orientation change, it simply rotates with the other UI elements. Steps to reproduce: 1) Using SDK build and install KS 2) Bring up the soft KB 3) Rotate the device Result: All devices show unique behavior, but in general there is a KB redraw. The older behavior was that the KB stayed on screen and rotated with the UI. Expected: The KB stays on screen and rotates with the UI. Notes: Does not occur with. Description: While evaluating the impact of using git-managed projects in Studio, I encountered a situation where the git project's was missing the deployment targets in the xml view. The targets were checked in the \"overview\" view however. A quit and relaunch of studio then populated the deployment targets in the xml view, and removed the checkmarks in the \"overview\" view. Before studio quit and relaunch: nwright No description provided 2010 by nwright false false default false false false true After relaunch: true true true false false nwright No description provided 2010 by nwright false false default false false false true Steps to reproduce: 1) Import KS-iPad from 2) Build from device to populate build folder 3) In terminal, switch branches to master with git checkout -f master 4) Switch back to with \"git checkout 5) Examine Result: The does not have the Expected: overview matches xml detail and deployment targets are selected and \"true\". Android NDK r11b had moved the NDK-Build file on Windows. h5. Description: Selecting a \"two-tabbed\" alloy template during new project wizard instead creates a single-tabbed default alloy project. h5. Steps to reproduce: 1) Create a new \"mobile app\" project in Studio 2) Select \"Alloy\" and \"Two-tabbed Alloy Application\" 3) Click \"next\" and continue through wizard 4) Examine the project at h5. Result: The index shows that the default template was used to create the project h5. Expected Result: The two-tabbed template was used to create the project.. Studio: Selecting Two-Tabbed Alloy mobile app project generates a default Alloy project instead. Studio prompts for update to incorrect NPM Appc CLI and SDK. h5. Description: When attempting to log in and a bad combination is entered, a dialog can be presented that shows a dialog with a link. The states \"for more information click here\". When the link is clicked you are delivered to a platform page which allows a password reset. The URL is here: The text should describe the password reset, since it does not provide \"more information\" h5. Steps to reproduce: 1) Do not point to preprod with an environment variable 2) Simulate a clean install (may not be needed) 3) Attempt to log in with bad credentials 4) Dialog appears, read text h5. Result: The text does not describe the link with enough detail h5. Expected Result: Something added after \"That combination is incorrect\" that states \"To reset your password, click here\". CLI: Running iOS application on iPhone Retina (4-inch 64-bit) simulator gives invalid error.. Studio: FSA sample when imported sometimes fails to enable ACS service because GUID already exists. h5. Description: When in an environment with both Xcode (beta 7) and Xcode I tried to configure to run for SDK targeting Xcode and iOS The build would begin and hang. Looking at the Studio output, the command sent includes the device ID. Using the command in terminal also would not allow a build, until the device ID was removed. h5. Steps to reproduce: 1) Install Xcode and Xcode 6 beta 7 in environment listed above 2) Set xcode-select to use 3) Create a project with SDK set in 4) Attempt to build for iOS any supported simulator h5. Result: Build begins but does not proceed h5. Expected Result: Build continues, completes without errors.. Failure to build project onto device with error: An internal error occurred during: \"Saving packaging preferences\".. Studio: Large projects (450mb) take a very long time (estimated 90+ minutes) to index. Mobile Web - files are not generated when packaging Mobile Web to new project. Dashboard: Switching between light and dark theme, does not show any effect. The git project cannot be imported, if SDK it was built with is not in mobilesdk folder. reproduce Using project explorer (right click), Import Appcelerator Existing Mobile Project result The error Titanium SDK could not be found result Projects should be imported successfully Note: This is , in Studio SDK is being updated to the latest build and import is successful. - JSON payload change results in Studio unable to find Android SDK. h5. Description: Since the JSON payload within the CLI changed structure, Studio can no longer determine that the Android SDK is configured correctly. This may take a restart of studio or some time to clear the cached data in order to witness. The issue generally manifests itself first as a dialog show in the attachment This prevents studio users from being able to build with Android. h5. Steps to reproduce: 1) Use Titanium Studio 2) Install CLI using: \"sudo npm install -g 3) Install SDK (CLI currently has an issue, so use Studio) 4) Set CLI selected SDK to with: \"ti sdk select \" 5) Restart studio -additional note: you can use command \"ti info -o json -t android\" to see the difference in the structure of the payload regarding the Android SDK. h5. Result: You may see the \"computing SDK info\" error first. The Android SDK is no longer configured correctly and Studio will prompt the user to specify the Android SDK install location when trying to build for Android. Studio dashboard shows Android SDK as not configured. h5. Expected Result: Android SDK still working and user is able to build for Android.. Packaging App via Studio for Adhoc Distribution first will cause subsequent attempts to package for Appstore to fail. Studio will continue to send the command including \"dist-adhoc\". This results in inaccurate info presented in the console, as well as an incorrect toast saying the app store build was successful and complete. However, packaging for Appstore before Adhoc will succeed as expected and the project can be seen in Xcode organizer with Studio console output : Build type: production : Building for target: dist-appstore Packaging via CLI works as expected, and running a build command on an affected project works as expected, and seems to set the project correctly, so presumably the project could then be packaged for appstore in Studio as expected Test steps: 1. Create a project 2. Distribute - 3. Distribute - Apple iTunes Store Actual result: After step 3 At completion, Toast saying success and complete. Expected result: Building for target: dist-appstore The project should be placed in the archive section of the Xcode organizer. iOS: Packaging - Appstore distribution not possible via Studio if Adhoc Distribution is done first. CLI: Setting flag will render projects unable to launch simulator.. Android is now greyed. The dialog is when clicking on the Question Mark.. While investigating issues discovered with Xcode it became clear that what we were seeing as a bug where the SDK scripts were ignoring what was set as iOS SDK during Studio build for device or packaging was actually Studio displaying a list of simulator versions. This option should show either the actual list of SDK versions. The result of setting something other than an available SDK is that the setting is ignored. Since this is a list of emulators, this happens nearly every build (unless you choose a version where you have both simulator and SDK). This is not a regression, it occurs in many previous versions. Steps to reproduce: 1) Ensure xcode-select path and Studio preference are in sync. (refresh and restart Studio if required) 2) run terminal command \"xcodebuild -showsdks\" for later comparison 3) Create a new project in Studio and attempt to build for device. 4) Note pull-down options Result: Pull-down contains a list of simulators. Check the xcodebuild results which should be something like: Expected: A list of SDKs.. ", "contenttype": "application/json", "created": 737603, "id": 84, "language": "en", "user_name": "emerriman", "email": "emerriman@appcelerator.com"}]}