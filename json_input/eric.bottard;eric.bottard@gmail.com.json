{"contentItems": [{"content": "As a developer, I'd like to move module from XD to repo, so I can use it as to build streaming pipeline. See also XD-2250. Add Unit Tests for CF SPI infrastructure. Add support for modules to register itself to Eureka. As a developer, I'd like to add support for dynamic classpath for modules, so we can have the flexibility to load the right dependencies either based on module options (0) or via other properties such as including the dependencies from a specific location (1). (0): (1):. Add throughput receiving sink. As a developer, I'd like to add load receiving sink module so that I can measure received throughput. Add load generator source. As a developer, I'd like to add load generator source module so that I could use it for performance testing use-cases.. Use latest version, might need to exclude version from other dependencies, SI, in. Test Redis Sentinel setup and document recommended configuration. MongoDb driver is present on DIRT's classpath, while it should not (should be present on mongo-related modules though). This is blocked by the shortcoming described here:. Kafka Bus: Add support for ACK mode. Kafka Bus: Add suppor for async vs. sync producer. Kafka Bus: Concurrency and compression support. Decouple messagebus dependencies. * Message bus dependencies The goal is to decouple them from startup phase to further enhance initialization time.. Composed Module currently behave as \"white boxes\". As soon as a module is composed (say \"http filter\") then all options of the children modules are available (as and in the example above). Change this so that a composed module is a black box: user has to explicitly expose an option for it to be available (most certainly using a short name). Hardcoding of values would be retained (and possibly overridable). Possible syntaxes :. Add support for user-defined permission to role mapping. As a user, I'd like to have the option to configure permissions so that I'll have the flexibility to bind permissions (REST endpoint) to a specific role. Default Roles: Viewer (R). Add support to configure security definitions via Admin UI (ACL). Add support to configure security definitions via Shell (ACL). Add support to define granular security definitions by entity (ACL). Once is merged, improve in the following areas: add options for - concurrency - compression support - async vs. sync producer - ACK mode Build on top of wrt the partition header to use (see. stream create foo \"label: bar xxxx\" stream deploy foo seems to work but it does not. The pre-validation is correct, but downstream, deployment logic still looks for (instead of. Secure endpoints using either ROLE VIEWER and ROLE ADMIN. Provide file based storage for users, groups (and roles). Remove and replace by. Reorganize TOC for manual. Here is a strawman. Note that the documentation for the module options (in particular for http-client) should be autogenerated using the following syntax (see others):. The Tap fixture does not need to inherit from Replace moduleName method with moduleToTap. The current tap syntax is: and not as currently implemented by the label fixture.. Tap Fixture does not need to inherit from. Just as a stream or a job may state its needs and preferences for container assignment using the 'criteria' or 'rank' expressions, the xd-containers themselves can specify needs and preferences using the same 'critera' and 'rank' expressions. These would be sent to the xd-admin server and used in the but is evaluated using the 'stream' or 'job' as the evaluation context. Examples Require that this container only runs streams Rank ** Prefer to run groupB's job.. should be Add a test to make sure correlation expressions here work.. As per recent discussions: should point at a yml file. Module grab their defaults from (from higher to lower precedence): - .. from ENV VARS (with caps fallback) - .. from System props - from a properties file located at - .. from a yml file pointed at by. Serialization over data transport fails for classes that are module specific. In the module info command, references to $ could read \"\" for example). Use dedicated modules for code completion fingerprinting. see Ideally, would require a change in the parser so that it knows which kind of module was expected when it failed.. Update doc about trigger changes. Switch to style in application config. Provide cmdline options validation. Migrating to boot dropped the XD banner and its info. Can be restored using eg a boot Initializer and removing the default boot banner. Remove existing 'purpose built' json processors and ensure all functionality is still available with jsonPath based SpEL expression based processors. This would be a combination of the existing aggregate counter and field value counter functionality. For example if the stream data was for car purchases some fields might be colour, make and model. When analysing the aggregate data I dont just want to know how many were sold on Monday, but how many of each make or how many of each colour, or how many of a particular colour, make AND model. This would allow a dashboard type client to 'drill down' into each dimension or combination of dimensions (in real time without uting batch queries against the raw data) Ideally the aggregate counter would be specified as stream create mytap The keys would be dynamically created according to the field values in each record (ie in a similar way to the field value counter you would not need to predefine field values) and keys would be created for all combinations of the fields specified eg the record would increment the following key counters (in addtion to the existing time buckets) ie the actual keys would look something like etc This may seem like it would generate a lot of key combinations but in practice the data generated will still be massively less than the raw data, and keys will only be created if that combination occurs in a time period. Also some fields may be dependent on each other (such as make and model in the above example) so the amount of possibilites for those composite keys would be a lot less that the number of one times the number of the other.. Create project for model that is common between client and server. Encapsulate list of within a parsed Stream result object. See also XD-903, XD-915 A lot of dependencies have been added with the \"compile\" scope as an oversight over time. Some of them are only required at runtime, some may not be required anymore.. File source should be able to produce file contents or file reference. Remove existing 'purpose built' json processors and replace with documentation using jsonPath functionality. Execute hadoop script in service activator. Apart from sanity checks, there is not much that ties to actual Using the Resource abstraction would work just the same, and would allow loading modules from the classpath in constrained environments CF YARN. Gemfire modules should support connection via locator. Create separate commands for \" shell commands. This came up when working on email source. There is and It would be nice to be able to put those in two profiles and have one of the profile being activated from module options email Don't know the runtime cost of activating profiles, but we could blindly activate profiles from all options passed explicitly : Not sure if this is the same as XD-132. Parser needs to handle a embedded in a name.. Remove unnecessary code that adds beans to shared context after refresh Scheduler should not be in - register it in. stack overflow when trying to create a stream with the same name as a module. Ugly error messages in shell when not connected. Gemfire cache closed when a gemfire module is undeployed. Start of a test program that can be placed in In the test program see two taps. One using the older style and one using the newer style and ' ' so that there is no real tap module source, the log module just gets its input channel wired directly to (the output of transform). They should be doing the same thing. However when run the output for tap new is missing, all I see is: No errors are reported, there is just no output for tap new.. Seems like the current file source results from an initial POC. Very few things can be parameterized, including the polled directory that needs to be in tmp xxx To be useful in production, we might want to revisit. Refactor analytics to get rid of Services. If a job is created that uses a trigger that has not been created and deployed it throws a 500 error instead of a 400. Favor using custom exceptions instead of using review usage and make changes. Eg. if a stream can't be found (or another definition) a instead of on the return value of a findOne method. Exception Consistency. to return paged results for list(). Create stories to enable the use of Spring Shell's branch testing facilities. The stream definition is not deleted in redis container when the stream is destroyed. There's a lifecycle problem when a tap creation fails because the DSL syntax is wrong). Subsequent attempts to create the tap will fail with an error: Disabling JMX solves the issue. reproduce Create a bad stream definition name 'bad' Try to recreate with the same name, but correct stream definitions. The system will report that the stream already exists.. Add a header to responses in order to support cross-origin requests. Update Source Syslog section to use Shell commands instead of curl. Update Sources Gemfire CQ section to use Shell commands instead of curl. The documentation in the Running in Distributed Mode chapter should discuss that the distributed runtime can use essentially any middleware to communicate between nodes. This functionality is provided by the core abstraction. A new intro paragraph shoul convey that it isn't a 'redis' only or 'rabbitmq' only system. There should be \"Installing RabbitMQ\" and \"Starting RabbitMQ\" sections to match those for Redis. \"Starting Spring XD in Distributed Mode\" should cover how to configure the system to select to use Redis or Rabbit.. Create a trigger from Shell. Create Complex Event Processing module. TODO as part of this (see XD-537): Have REST controllers depend on XRepository in all cases. TODO as part of this (see XD-537): Have REST controllers depend on XRepository in all cases. TODO as part of this (see XD-537): Have REST controllers depend on XRepository in all cases. TODO as part of this (see XD-537): Have REST controllers depend on XRepository in all cases. Retrieve monitoring information for a specfied module. Add RabbitMQ-based implementation of ChannelRegistry. Links in asciidoctor generated HTML+docbook documentation are broken. The issue arises because the asciidoc macro is meant for \"external documents\" and creates in html, whereas we want resp. We also want it to continue working in github live view. I guess what could work is to have the macro (either override the link macro or create our own if github supports that) that looks like : (the anchor works out of the box in asciidoc and should work in github) but override it for the html and docbook backends to render to the correct form. The thing is, there are several ways to macros (and templates they render to), some of which make sense to our setup: - having in the directory of the processed document ( - having in the directory of the processed document ( - defining macros using attributes ( I tried all of those, but to no avail. These DO WORK with plain asciidoc, but not with our toolchain. Don't know if the problem is with asciidocTOR or with the gradle wrapper though.. Enable grouping of modules for co-located deployment. ", "contenttype": "application/json", "created": 737603, "id": 11, "language": "en", "user_name": "eric.bottard", "email": "eric.bottard@gmail.com"}]}