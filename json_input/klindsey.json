{"contentItems": [{"content": "Unable to construct JS instances from built-in types using the \"new\" operator. A comment with security level 'Developers' was removed.. Generated mobileweb shows numerous CSS syntax errors about unexpected \"*\". Using the following code: In each location tagged by we should show the properties \"name\", \"id\", \"company\", and \"zipcode\". Using the following code snippet: We should provide content assist for the properties off of \"this\" in each of the locations with the ' ' character. The last \"this\" in Constructor should show \"name\" and \"id\". The last \"this\" in TopLevel should show \"type\" and \"count\". The last \"this\" in Nested should show \"callback\" and \"data\". See last comment. HTML content is indexed in web projects. The information store there should be included in the Index View under a separate top-level HTML node.. Display CSS metadata in Help View (see Aptana Studio for example). Display HTML metadata in Help View (see Aptana Studio for example). Add Dynamic Help for JS. Display JS metadata in Help View (see Aptana Studio for example). Content assist for nested JS in HTML auto-inserts and suggest incorrect proposals. While validating another ticket, I tried typing in the following HTML: I ran into a number of issues. When I typed it became On another occasion, when I typed it became After I managed to get around that, proposals off of showed global properties. Ideally, this would show some of the Event properties. As I continued to type I started seeing global proposals starting with 'e'. Continuing more would give a strange alternation of globals starting with the last letter to showing all globals again. Once I got to I got a list of globals again instead of document properties. Continuing to type showed the same behavior when I was typing alternation of all globals and globals starting with last typed letter. When I typed and my cursor was at ' ', I starting seeing HTML attribute proposals. Note that ' '' and ')' were auto-inserted, so I did not type those. As I typed the contents of the string in I saw the behavior described above. Likewise when typing I suspect this is due to the JS being in an unparsable state with dropping back to lexeme-based location type calculation.. String constructor should not appear off of string instances. The JavaScript window object content assist menu is missing many properties and methods. Steps to Replicate : 1) Open Aptana Studio 2) Open a saved JavaScript file 3) Type (without the double-quotes) Expected Results : The JavaScript window object content assist menu should include closed, defaultStatus, document, frames, history, innerHeight, innerWidth, length, location, name, navigator, opener, outerHeight, outerWidth, pageXOffset, pageYOffset, parent, screen, screenLeft, screenTop, screenX, screenY, self, status, and top, and the methods alert, blur, clearInterval, clearTimeout, close, confirm, createPopup, focus, moveBy, moveTo, open, print, prompt, resizeBy, resizeTo, scroll, scrollBy, scrollTo, setInterval, and setTimeout. Actual Results : Content assist is missing the following properties: outerWidth pageYOffset screenTop screenY Content assist is missing the following method: * createPopup. Our current unit test coverage hovers around 30% (class, method, block, and line) We need to get this higher. Here are the classes we need to test: Please create a sub-task for the class you want to test, and edit the document to indicate you've claimed that test. If there already is a task created for a particular class, it means someone else has claimed that one, so choose another. If there are a bunch of related classes, you can group that into one task. Coverage goals for all classes below is a minimum of 100% class, 70% method, 80% block, 80% line (default Emma values in Jenkins) HTML (Michael) JS (done) CSS (done) (Kevin) (Ingo) (Chris) Ruby (Allen) Deployment Protocols Second Batch ClassUtil (Michael) EclipseUtil (Michael) ExpiringMap (Allen) FirefoxUtil (Done) (Done) IOUtil (Allen) ObjectPool PlatformUtil (Done) ProcessUtil (Chris) ResourceUtil (Michael) SourcePrinter (Allen) StringUtil (Allen) URIUtil URLUtil (Done) (Done) SamplesManager (Michael). Ctrl + Clicking on a function in JavaScript, or pressing F3 on a 2.. Types as they are being written to the JS index in. JS inferencer should honor sdoc tag. Currently, the JS inferencer does not process sdoc tags. It may even be the case (likely) that the sdoc need to be extended to support this tag as well.. Added recovery strategies for \"switch ()\" and \"case In the first case we add an identifier inside the parens. In the second case we add an identifier followed by a colon.. Create a new Titanium Mobile project Open the file, if it is not open already Type the following on an empty line in that file: If you do not get context information after typing the open parenthesis, type h3. Expected behavior: No tags should appear in the parameter description and types indicated via should appear in the text with the brackets stripped. h3. Actual behavior: The tag appears in the description.. Research support ScriptDoc'ing of CommonJS Modules. Research what changes will be needed in the JS inferencing, indexing, and content assist to add support for CommonJS modules to JS content assist. Have this code in a JS file: The result of this CA is:. When using self-invoking functions, sometimes the outline view doesn't show the break down of what is inside. Here is a good example:. Create JSCA reader. Once the JSCA schema schema has been defined, we need to create code to can read schemas following that format. The reader will require the schema schema to be modified to support event handlers as types, properties, etc. are consumed by the reader.. ", "contenttype": "application/json", "created": 737603, "id": 43, "language": "en", "user_name": "klindsey"}]}