{"contentItems": [{"content": "Update PyDev to. The latest version Fabio has pushed on is , and we should include it in Aptana Studio. The source is on. h3. Steps to Reproduce 1. Create ticket from Aptana. 2. Select severity. 3. Attach log file. 4. Press OK. 5. Check created ticket in web browser (on h3. Actual Result No attachments will be created. h3. Expected Result Log file should be attached.. Submit a ticket: return user to the dialog to edit if JIRA submission failed. When formatting php code with include statement, the formatter inserts space every time I run it. This is causing the problem: after formating 2x it becomes This works OK: include include (function());. Auto-completing html attribute value inserts an extra character. After APSTUD-2811 is implemented for the download case, if a remote connection is connected to multiple projects, downloading a remote file will open the dialog, but the \"Remember my decision\" setting does not work. Steps to reproduce: 1. Create two web projects in the workspace; 2. Right-click on a project and run Publish Run Web Deployment Wizard to set up the project with a remote site; 3. In the deployment wizard, make sure \"Automatically option is checked; 4. Repeat step 2 and 3 for the other project, with both connecting to the same remote site; 5. Expand the remote site under Connections and double-click on a file to open it in the editor; 6. Modify the file and save; 7. \"Choose Connection\" dialog should appear; select a connection, make \"Remember my decision\" checked, and click OK; 8. The file will be downloaded to the selected project, and now repeat step 5. Expected result: the connection selected in step 7 should be used, and the file should be downloaded to the corresponding project directly. Actual result: the \"Choose Connection\" dialog appears again.. All added PHP Interpreters are gone after restarting Aptana. You have to add them every time you restart Aptana and want to use the debugger.. h3. Steps to Reproduce When this textarea (Steps to Reproduce) gets filled too far (vertically or horizontally), there are no scrollbars to let the user know he can scroll the text. We should add the vertical bar but wrap the horizontal text so it's on the next line. This should apply to all multi-line text fields in the dialog. h3. Actual Result No scrollbars h3. Expected Result Scrollbars. Provide preference to customize when syntax highlighting is disabled after some characters. As seen in attached image, when submitting a ticket, it's not clear what the user is actually being asked to do Get some sort of wizard image Submit a ticket to Appcelerator Add the text at the top: \"We encourage you to file issues or enhancements into Appcelerator's issue tracker. Please fill out as much information below as possible to allow us to better assist Don't start validation until the user has actually typed something If it's a bug, they need to specify severity Once a bug has been filed, do we open the bug in a browser? How can they go amend their description? No. 5 is updated to allowing user to specify priority instead.. Add \"Opened Editors\" scope to the search page. There will be a Help Studio Submit a Ticket menu, and clicking on it will display a dialog where user could enter the following information: Summary Screenshots (if desired) We could automatically obtain the following from the IDE: Affects version (Studio version, either from the about box for Standalone or the branding plugin for Eclipse plugin case) We should attach Studio log file and output from Help Studio Run Diagnostic Test. We could auto-attach or have checkboxes so user could choose not to (checked by default). Once the ticket is successfully submitted, we should pop up a corresponding message with a link to the created ticket.. The dialog for first use.. The class should handle all requests need to complete the workflow of creating a ticket in JIRA from within Studio, 1. User login 2. Submit the ticket to JIRA with all the related fields And possibly more. The class should report errors when encountered, and there should be unit tests to cover each scenario.. Why - after new updates - doesn't cloak folder anymore? Best regards Davide To reproduce: 1. Set up a FTP connection with a project using the instruction here: 2. Right-click on a folder in the project and select \"Publish Cloak this file type\". Expected result: the folder will show a cloaking decorator. Actual result: no decorator is added to the folder icon.. Studio editor adds a superfluous line number at the end. Please see capture at Since upgrading to Titanium Studio the Ruby editor adds a superfluous, inactive line number after a defined construct at the end of the file. Steps to Replicate : 1) Open Aptana Studio 2) Open a Ruby or any file Studio handles 3) Add any defined construct such as a function definition, if statement or loop to the end of the file Actual Results : The editor adds an extra line number after the end of the construct. This did not happen in version Expected Results : The new line numbers should only extend to the end of the construct.. If you open an HTML file twice, once from the FileSystem node and once from the Project Explorer, then close one of those files, the colorization of the remaining file will disappear. Steps to Replicate : 1) Open Aptana Studio 2) Open an HTML file from the Local FileSystem node in Project Explorer 3) Open the same file from Step 2 in a project 4) Close one of the file instances Actual Results : Colorization will disappear from the remaining file instance. Expected Results : Colorization should remain.. See for details.. Add icon to \"Open HTML docs\" for current content assist entry. Hi, related to APSTUD-3568. If you are pasting a File in the remote view (FTP connection) by selecting the parent folder manually, the Name Conflict window is popping up. This is correct, but this window is causing a memory peak and the complete Aptana IDE is freezing to death. It takes more than 20 secounds for one letter to show up in the input field. I am not quite sure, but i think is has something to do with Aptana waiting for the FTP LIST Command. Greetings Leo. Our current unit test coverage hovers around 30% (class, method, block, and line) We need to get this higher. Here are the classes we need to test: Please create a sub-task for the class you want to test, and edit the document to indicate you've claimed that test. If there already is a task created for a particular class, it means someone else has claimed that one, so choose another. If there are a bunch of related classes, you can group that into one task. Coverage goals for all classes below is a minimum of 100% class, 70% method, 80% block, 80% line (default Emma values in Jenkins) HTML (Michael) JS (Kevin) CSS (done) (Kevin) (Chris) Ruby (Allen) Deployment Protocols Second Batch ClassUtil (Michael) EclipseUtil (Michael) ExpiringMap (Allen) FirefoxUtil (Done) (Done) IOUtil (Allen) ObjectPool PlatformUtil (Done) ProcessUtil (Chris) ResourceUtil (Michael) SourcePrinter (Allen) StringUtil (Allen) URIUtil URLUtil (Done) (Done) SamplesManager (Michael). Add XML validation. Add color preview support for SASS editor. SASS editor doesn't support color preview in way of CSS editor does. Build: Aptana Studio 3, build: Build date: ,. Re-implement hyperlink detection code to make it: 1) Suitable for contribution to 2) Free of issues: TISTUD-316. Error deleting project attached to git. When I tried to delete the test project I used above, I got \"an exception has been caught while processing the refactoring ' Delete resource' \" Problems encountered while deleting resources. Could not delete Problems encountered while deleting resources. Problems encountered while deleting files. Could not delete: Could not delete: Could not delete Problems encountered while deleting files. Could not delete: Could not delete: Could not delete: Could not delete. Allow to open a closed project by on it in Project Explorer. Add multiline search. Content assist popup is shown outside the screen boundaries. As you can see from the image, the JavaScript content assist popup displays outside the screen boundary to the right.. Download the latest Android SDK directly. Download the latest SDK unless the user has a compatible SDK already installed. See for reference.. Debuggin on iOS device is a multi-step process (listed in TISTUD-2090), and before we implement the wizard idea, we should improve the message we show to the user after we started step 2 and are waiting for user to complete step 3 once iTunes finishes syncing. The suggest message is \"Waiting for (the app is being installed to iTunes; when iTunes finishes syncing, please launch the app on device for the debugger to. We should create a wiki page that lists out the requirements needed as well as the detailed steps to successfully debug on iOS device. We should also add a link that points to the wiki page to the wizard when it is launched in debug mode.. Unable to distribute iPhone app due to NPE in loading local provisioning profile. When trying to build for distribution, the distribute window never opens and the user cannot distribute their app. An error ops up with a NullPointer Exception. Here is the provisioning profile info: The error log is below: !ENTRY 4 2 !MESSAGE Problems occurred when invoking code from plug-in: !STACK 0 preferences !ENTRY 4 0 !MESSAGE Unhandled event loop exception !STACK 0 at Method) !ENTRY 4 0 !MESSAGE Unhandled event loop exception !STACK 0 at Method). Validate project name for projects. When creating projects with enabled, we need to validate the name. So far, I know that are not valid for projects. So for Titanium Mobile, we need to check the only if is enabled. For a standalone project, we need to add a check for valid strings. An alternative would be to format the project name so it's valid for an nettle \"new\" command. I'm not sure what the implications are. Note: There may be other strings that are not valid h3. Suggestions For existing projects, if a appears in the name, prompt the user to pick a new name. Alloy templates are similar to rails preset set of files, more a set of commands to run to generate a scaffold. We need to present Alloy templates alongside traditional templates as part of the new project wizard. Alloy templates need to specify \"Alloy\" in the tags. Dashboard: Configure: Android: update default android sdk to. Update default dashboard config android sdk to Android SDK: Test Steps: 1. Dashboard Configure Android. Expected Result: Android SDK: is downloaded.. As part of the build, (before the push): See if that git tag has not already been created. If not, create a new tag of the form (note the additional \"v\" at the front) appcelerator studio3 studio3-ruby libraries com. I have quite a few certificates, and when Titanium Studio Titanium iOS Platform is selected, the UI will freeze for a while before showing the page. We should improve it to load the certificates in the background so that the page would appear right away, and then fill the table after it's done. We should also not freeze the UI when Refresh is clicked to reload the certificates.. We should support that for MobileWeb. h3. Run MobileWeb V1: V1: V2:. h3. Debug iOS V1: V2: h3. Notes For iOS, we may still need to call the 'killall' before the command.. Add \"continuous integration master\" stream to \"Install Titanium. From one of our Titans: \"Going into the Preferences screen and trying to save yields an error that says that a username must be entered. It is vague, and doesn't say which username or which page the username is on. It turns out it's the JIRA username, but that shouldn't be required for everyone to save their Preferences. Shawn\". Remove the text in Windows installer about restarting the machine after uninstallation since it is not necessary. Add support for creating javascript modules to TiStudio. Add abbility to log out of Jira account for \"Submit a ticket\". This assumes that the project has not created a local repo or the local repo has no remote. Right click on a project Team Create on Name of repo Description of repo Organization you wish to publish to Public Private radio button See for information on publishing a new repo We should be proactive about seeing if we can test if a user has rights to create a repo within an organization, and if they have rights to make a repo private so we can alert them before the creation process.. -Replace the textbox with a combo box that contains the list of keystore certificates -The certificate added from the Browse button should automatically add the certificate to the list -New button will trigger the same keystore dialog as before. I don't think we need to modify the existing keystore creation dialog. We just need to allow user to select an existing one in the wizard as described in TISTUD-1612.. Add radio buttons to the dialog that allows the user to specify either an existing keystore from the disk or adding a new one. If an existing one is selected, we need to have a password field but not others.. Unable to format file generated by Titanium Mobile Web project. The file is generated when you package a Titanium mobile web project as a new project in the workspace. The generated project should have a file. When I try to format the file I get the following error: !ENTRY 4 0 !MESSAGE (Build Cannot recover from the syntax error !STACK 0 Cannot recover from the syntax error at !ENTRY 4 0 !MESSAGE (Build Error while formatting the code in your editor. Please submit a bug report through Studio's support and include the relevant code which triggered this error.. To reproduce: 1. Remove the latest SDK from the mobile SDK directory if it is already downloaded; 2. Start Studio. Expected result: Studio will show a popup on the lower right corner indicating there is an update available, and clicking on it will show a release note dialog and then start downloading the latest SDK. Actual result: Studio will start downloading the latest SDK right away after launching without any user interaction, and no release note dialog is shown.. A workaround is to switch to the source tab (next to Overview at the bottom of the editor) and copy from there.. Android module projects should have better validation for name and id. Titanium Studio: MobileWeb: Packaging: allow packaging to non-existent directory. Steps to reproduce: 1. Create a Single Window project from template wizard 2. file URL, and evidently it does not work that way. It is probably easier to extend Studio than to fix this behavior in Mobile Web. Suggested fix: * When creating a new project as part of the mobile web packaging wizard, create a new default server for use in preview and associate it with that project.. Kevin, I believe your comment is meant for TISTUD-1269 instead.. The Mobile Web \"browser preview\" launch configuration uses some separate settings for determining which browser to launch. Instead, we should have a drop down respecting the current browser settings in preferences: If user selects to specifically choose a different option than the global settings, have a drop down with the following options: System browser Browser 2 * Have a link to open the preference page for users to manage the settings. If any launch configuration fails because a browser setting has been removed, fall back to an external browser using the system default.. Indicates the outline is out of date when there is syntax error in the code. This is related to TISTUD-1000. Currently the domain information is only needed during login, so it makes sense to add the domain field to the \"Already have an account radio\". The default gray text should be something like \"Specify domain if desired\". If the login fails because the domain isn't satisfied, then the domain field is required.. Android SDKs should be available from Run Configuration dialog without having to restart Studio. Add launch configuration option to run iPhone iPad simulator with retina display. Chromium: Ctrl+Shift+W does not close other open editors when focus is on the embedded browser. Setting Log Level in Console view has no effect on the console log. Add unit tests for. Add unit tests for MobileUsageUtil. Add unit tests for. Add unit tests for TiAppModelUtil. Tiapp: surface in Overview Editor to Problem view and as project file decorators. Allow users to download older versions of Mobile SDK. h5. Improvement description Alloy projects .tss files should also present the hover info like for .js files. When passing the mouse over a .tss style, information should be displayed as a popup like for objects in the .js files.. Alloy: add hover info for property names in Alloy .tss file. Alloy provides a command \"alloy generate style \" to generate a style file. We should surface the capability in Studio with a New Alloy Style menu. It should prompt user for the style name and run the command.. Alloy: add New Alloy View for creating a new view. When behind a proxy, Appcelerator Studio would login in offline mode on restart. Remove the requirement of Android when running MobileWeb app on simulator. Provide Titanium content assist inside object declaration. Breakpoints are not hit for the application files in Resources ios directory. Remove the blackberry device settings from preferences page. Error creating Alloy app from Studio if alloy and CLI are installed without restarting. h4. Problem Description When installing the latest Studio from the the dmg includes a low resolution icon, looking pixelated in Mac OSX running in a Macbook Pro Retina.. Dashboard: Themes: Unable to set theme to 'Dark'. Android: Show warning in TiApp if the minSdkVersion attribute references to a version less than min required. Studio freezes if the user enter only credentials without proxy settings after logout from proxy. Studio freezes when restarting Studio with proxy settings on and a tiapp editor open. Ran into a deadlock in Appcelerator Studio after the following steps: 1. Launch Studio and log out; 2. Launch Studio, enter proxy settings ( and log in; 3. Have a open and re-launch Studio. After Studio is re-launched, it would beach-ball and had to be force-killed. And each time afterward, Studio would freeze upon launch. Attached the jstack log.. Windows: Re-launching app on Android simulator does not kill previous session node processes. Builds fail if workspace is on a windows server (UNC path). Select Packaging mode in the global launch Select in the launch shortcuts menu It shows the launch configurations of both Packaging and Run modes. Expected: It should show only the configurations for package mode.. Tiapp: the app id gets automatically pasted into any field in the tiapp editor when the field gains focus. Studio: Installing new SDK from CLI causes Blackberry and Tizen to gray out. Package Alloy Geocoder sample in Studio. Currently for Alloy samples, we call \"alloy new\" to create the default app and then unzip the sample content on top of it, but for Geocoder sample in due to the complexity related to ALOY-891, we decide that it will contain the full-fledged app in a zip, and we will define the sample using our existing sample extension point.. When trying to build a iPad only app for iPad simulator using SDK on the latest Studio kicks of a iphone simulator build. studio log Steps to Reproduce. 1. Create a new iPad only app with SDK set 2. Run for iPad Simulator. Actual Result. iphone simulator starts up. Expected Result. Selected iPad simulator starts up.. Add a \"Refresh\" menu to manually refresh the list of Android and iOS Devices. Using Studio on OS X. Steps: 1. Open Samples view. 2. Expand Alloy samples folder 3. Right click on any Alloy sample and select 4. After import, open new folder. Result: Folder contains three files and one Resources folder: tiapp, License, and readme. Expected: All required files are generated.. Ubuntu Unity: alert user for the issue where menu won't show inside Studio. Studio: Profile as iOS device - \"Waiting for profiler to connect\" message window does not disappear as it should. Studio hangs when trying to Project Explorer view. Add a toggle entry in launch shortcut pulldown to not auto-run when one is selected. After TISTUD-5666 is implemented, global toolbar will automatically launch it. We want to provide a toggle menu item where user could modify the behavior to not auto-launch on selection. The toggle should be available in the launch shortcut dropdown and in all modes, and it should apply globally to the workspace.. \"iPad\" appears in the iOS simulator configuration when profiling or testing on iPhone simulator. 1. Create default Titanium app 2. Select the app 3. Profile As OR Test As iOS Simulator iPhone 4. Once the simulator is launched, go to Profile As Profile Configurations or Test As Test Configurations \"iPad\" appears in the configuration (see attachment). \"iPad\" should not appear in the simulator configuration if profiling or testing on iPhone simulator.. Configuration: iOS - \"iPad\" appears in the iOS simulator configuration when profiling or testing on iPhone simulator. Missing run menu item on Windows. Add to the global toolbar dropdown when package mode is selected. We should have a option in the global device profile dropdown for when package mode is selected as we had under Publish icon in the local toolbar of Project Explorer. There should be a separator between it and the shortcuts, and it will launch the run configuration dialog instead of select it as an entry.. Default Android emulator is launched when using older version of the TiSDK with Studio. Run on iOS Device: add list of devices to the launch config dialog. With the new capability of launching directly on iOS device provided by CLI, we will need to update the launch configuration dialog to include the list of devices to. In the output of \"ti info -o json\" for CLI it will contain a section \"ios\" \"devices\". We should display this list in place of \"iOS Device\", and when one is invoked, pass the id value in the flag to \"ti build\" command.. We should have a \"Run option in the global device profile dropdown as we had under Run icon in the local toolbar of Project Explorer. There should be a separator between it and the shortcuts, and it will launch the run configuration dialog instead of select it as an entry.. 1. Open Preferences Studio Themes; 2. Switch Overall Theme to \"Dark Studio\" and switch back to \"Light Studio\". The Project Explorer view will then become unreadable due to text. Have to restart Studio to get it display properly.. In the output of \"ti info -o json\" for CLI it contains a section \"android\" \"devices\", where it contains info such as id, name, model, and manufacturer. We should display this list in place of Android Device, and when one is invoked, pass the id value in the flag to \"ti build\" command.. Quitting Studio from the login screen hangs indefinitely. Investigate if loading tiapp's Build Properties section needs to be improved, and if so, move the time-consuming task to non-UI thread.. Profile TiApp editor for expensive operations that should be run on non-UI threads. We should run a profile session on opening TiApp editor and locate the bottleneck. Once located, we should move those operations to be run off the UI thread and have some indication to say the tiapp is loading.. It is unlikely user would use Studio to browse local filesystem, and Titanium development is very much project-based, so we should remove the node for Studio. We will still keep it for Aptana Studio.. The feeling is App Explorer doesn't add compelling value and feels redundant next to Project Explorer. We will hide deprecate it from default Studio perspectives but keep the plugin.. Studio freezes for a moment when loading Deploy Targets section of tiapp editor. We have each mode broken out as it's own pulldown menu. We should adopt the UI where there's a giant \"play\" Run button that is pulldown to toolbar of App Project Explorer.. 1. Delete Global Appcelerator NPM Packages. 2. Install Studio. 4. Run Studio and accept npm package updates. Result: The updates are locally installed to a folder other than the one studio was run from. See screenshot. Expected Result: The updates are globally installed. Note: If you try to run studio commands that require the npm packages, they will fail. Studio looks here no matter what (and the commands fail): Workaround:. UI blocked during install of Selected Platform SDK. Make npm packages required installs and not allow user to dismiss required installs. Mobile Web configuration: load browsers info in the background when platform config wizard is opened. Platform Config Wizard: Align the start of text in settings section with the platform entry. The screenshot shows the left bound of settings section matches with the checkbox. The suggestion is to match it with platform name instead. If that causes too much space on the left visually, then we will revert to implement based on this screenshot.. Platform Config Wizard: create a gradient effect from the platform section to its settings section. To improve the background transition from the main platform section to settings section, a suggestion is to add a gradient in the middle.. The gradient didn't look great when implemented in Eclipse, and the new icon on the left does help to indicate which platform the settings section belongs to, so marking this as invalid.. Make the Advanced Settings text and arrow right-aligned Move the arrow to the right of the text Modify the text to say \"Settings\" when collapsed and \"Hide\" when expanded Make the status center-aligned Remove warning icon for \"Not Yet Configured\". Formatter fails on javascript braces block. Currently the wrench icon appears on the left of platform checkbox, while info icon appears on the lower right. Since the two are mutually exclusive, only one could appear at any time, the suggestion is to line them up on the same side.. Since we are downloading and installing Android, BlackBerry, and Tizen SDKs directly from the platform config wizard, we need to display the respective EULAs for user to accept. This ticket is to implement the UI for accepting EULA. We will open a separate dialog for EULA when user clicks Finish to configure the list of selected platforms. The dialog will just contain a large multi-line text field where it contains the EULA text for each platform in sequential order. The dialog will have two buttons - Accept and Decline, and user doesn't need to scroll down to the bottom of the text to have Accept enabled. When accepted, we will move to the progress page; when declined, we will close the platform config wizard.. Platform Config Wizard: Display the EULAs for selected platforms in separate dialog. Currently the description just says \"Select platforms to configure\". It doesn't really add more information to the title in explaining what the wizard does. We should improve the message. A suggestion: \"Download, install, and configure required SDKs for the mobile platforms you would like to develop. Platform Config Wizard: modify the status when we finish configuring a platform. When we finished configuring a platform, we should update the status area to display two lines: the regular check mark and latest installed version on top, and the installation location below. The Settings text and arrow should remain hidden. If the installation is canceled, we should show \"Canceled\" status but without any icon.. Related to TISTUD-5326. For iOS, currently there is no Advanced Settings section, and the visual indicator will appear in its place, making the UI feel inconsistent. The suggestion is to line it up on the right as indicators for other platforms are.. Platform Config Wizard: iOS: move the visual indicator for downloading to the right-most column. Android: Emulator: Enable Fastdev for SDK. Loading iOS provisioning profiles: Improve the error message when CLI is not found. If the CLI is not installed or if it is installed to a location that is not in user's PATH, user will run into a NPE when the provision profiles are loaded. We should better handle such cases.. If user selects an unconfigured platform, disable \"Finish\" and enable \"Next\". Make next page be the install wizard page. Filter that page down to only the selected platform. When user finishes wizard we'll install the unconfigured platform first, then create project. If a platform fails to install we'll need to prompt if it's OK to create project with that platform and let them know how to install it later through tiapp editor?. We currently disable unconfigured platforms in the listing. We should enable them, and the severity of all about them not being configured should be reduced to Info icons.. The second point will no longer apply after TISTUD-5322 is implemented.. The preference page of Android does not react immediately to user actions. For instance, - Takes long time to open the preference page. - If Configure button is clicked, then it takes a long time to open the dialog that shows the list of Android SDKs. - It takes a long time to initialize the status based on the new SDK location.. The Configure button currently opens the dashboard. With the platform configuration wizard implemented, it should open the wizard instead, with only Android item checked by default.. Platform Config Wizard: Investigate the steps to setup Tizen on various OSes. We will host the necessary Tizen on our server (TISTUD-5245). However, we need to figure out if we can install silently into a specific location (preferred), if we have to run the installer for users and wait for the completion, and other potential unknowns.. Once user clicks \"Configure\" with Android respective URLs. The progress dialog should indicate the proper progress since we have the control on the process.. This is an extension of TISTUD-5246. When the wizard is opened, we should check if Tizen is already installed in the default location or if the preference page already has a valid SDK path set (meaning user has configured it either through the wizard or set the path directly in preferences). If so, we should display the installed version next to the platform checkbox instead of \"Not Configured\".. This is an extension of TISTUD-5243. When the wizard is opened, we should check if BlackBerry is already installed in the default location or if the preference page already has a valid SDK path set (meaning user has configured it either through the wizard or set the path directly in preferences). If so, we should display the installed version next to the platform checkbox instead of \"Not Configured\".. This is an extension of TISTUD-5242. When the wizard is opened, we should check if Android is already installed in the default location or if the preference page already has a valid SDK path set (meaning user has configured it either through the wizard or set the path directly in preferences). If so, we should display the latest installed version, Android next to the platform checkbox instead of \"Not Configured\".. After user selects the platforms and clicks \"Configure\", we should provide a progress dialog where we indicate the progress on individual platforms. User should be able to put it in the background or cancel the operation.. In the platform configuration wizard, there should be an entry for Tizen, and it should contain an expandable \"Advanced Settings\" section where user could set a path for the root Tizen SDK location. It will be filled initially by a default path, The text next to the checkbox should say \"Not Configured\" by default. This ticket just covers the UI aspect. There will be separate tickets for dealing with the actual configuration once \"Configure\" is clicked as well as auto-detecting if Tizen is already installed in the default location to update the UI state accordingly.. In the platform configuration wizard, there should be an entry for BlackBerry, and it should contain an expandable \"Advanced Settings\" section where user could set a path for the root BlackBerry NDK location. It will be filled initially by a default path, The text next to the platform checkbox should say \"Not Configured\" by default. This ticket just covers the UI aspect. There will be separate tickets for dealing with the actual configuration once \"Configure\" is clicked as well as auto-detecting if BlackBerry is already installed in the default location to update the UI state accordingly.. In the platform configuration wizard, there should be an entry for Android, and it should contain an expandable \"Advanced Settings\" section where user could customize the following: Set a path for the root Android SDK location. It will be filled initially by a default path, Choose what Android SDK versions to install. The list should contain from the minimum version (currently we support to the maximum version available. By default, the minimum version and the maximum available version are selected. The text next to the checkbox should say \"Not Configured\" by default. This ticket just covers the UI aspect. There will be separate tickets for dealing with the actual configuration once \"Configure\" is clicked as well as auto-detecting if Android SDK is installed in the default location to update the UI state accordingly.. In the platform configuration wizard, there should be an entry for iOS. It will have an Advanced Settings section to customize the Xcode location. By default, the location should be filled with and the text next to the checkbox should say \"Not Configured\". This ticket just covers the UI aspect. There will be separate tickets for dealing with the actual configuration once \"Configure\" is clicked as well as auto-detecting if Xcode is already installed in the default location to update the UI state accordingly.. Field Service: In description of Field Service Sample in Dashboard we should state to read the ReadMe to configure. Allow create Alloy Application Templates using Rubles. h5. Problem description After hard restarting the system (for everything was completely frozen), Appcelerator Studio was not starting anymore. After launching it and choosing an existing workspace, the login screen didn't appear - only the red Studio Splashscreen was being displayed. Here is the console details: h5. Workaround After deleting the folder, Studio would start correctly.. Appcelerator Studio: stuck on the splash screen when restart. Run Configurations dialog: create new iOS Application Installer config failed with exception. Add Alloy navigation shortcuts to the Project Explorer. Support optional comma in tss file. LiveView: Remove the launch configuration contribution. Remove the contribution to applicable launch configurations for enabling LiveView as we will be using the global toggle to control the setting. For existing launch configs, we should ignore the liveview attribute and also use the global setting.. Add a toggle button in App Project Explorer toolbar to enable disable LiveView for the next run. This will be a global state to control if the next applicable launch (run on iOS Android and at the moment) will be run with LiveView on or off. Initially the button is toggled off, and the workflow is as followed: 1. User toggles the button on and do Run iOS Simulator, the simulator will be run with liveview; 2. User toggles it off, do Run Android Emulator, the emulator will be run without liveview; 3. To run the iOS simulator without liveview, user will just do Run iOS Simulator again since now the setting is off.. When a tss file in Alloy project is Alloy project.. When a js file in Alloy project is Alloy project.. When a xml file in Alloy project is Alloy project.. Studio: the Plugin zip does not exist on the update site. No menu items appear under when an invalid Android SDK path is set in preferences. 1. Open Run Run dialog; 2. Double click on Appcelerator iOS iTunes Distribution. Expected behavior: the launch configuration is created right away and its UI appears. Actual behavior: it takes a few seconds or longer, depending on how many certificates and provisioning profiles you have, for the launch config UI to appear, and the UI is frozen in the mean time. The same behavior applies to iOS Distribution and iOS Application Installer. We should improve the behavior by doing something similar to what we did in iOS preference page, showing in the related combo-box and load the certificates in the background. The Run button should also be disabled until the combo-box is filled with actual values.. It's nice that we are now providing additional info on why a platform is disabled in new mobile project wizard. However, the position of the error mark is misleading. For example, in the screenshot attached, it's easy to think Android and Mobile Web are having configuration errors, not BlackBerry and Tizen. The error mark probably should be after the platform name, and hovering over the disabled text should also show the reason.. NPE in the log when getting the latest SDK release while Studio is shutting down. Can't terminate iOS Simulator process from the console. iOS Packaging Run Config: 'Upload debug symbol' checkbox deactivates 'Run' option. This does not occur Test Steps: 1. Package iOS App (Ad-Hoc or iTunes). 2. Goto Configuration New Configuration and select the 'Upload debug symbol option' Actual Result: 1. 'Run' option is active before selecting the 'Uploading debug symbols' checkbox. 2. 'Run' option is disabled after selecting the 'Uploading debug symbols' checkbox. Please refer the attached screen shot for further clarification.. BlackBerry: Allow BB project creation with spaces in the app name. should not allow create a method with space in the name. Could be fixed after TISTUD-4744 is resolved.. When manually terminating a debug session by clicking on the debug-stack threads (the ones that say \"Remote node and \"JavaScript Thread\"), the launch state is not terminated. This forces the user to manually click the launch, and hit terminate again, before allowing the launch to be removed from the view. We need to terminate the launch when terminating the thread.. BlackBerry: cannot run the created package or device launch configuration from configurations dialog. 1. Create a BlackBerry project; 2. Run Publish Distribute - BlackBerry; 3. Open Publish dialog; 4. Select the created Titanium BlackBerry Packager launch configuration if it isn't selected. Expected result: \"Run\" button should be enabled to run the launch config without any change since there is no error. Actual result: \"Run\" button is disabled. The same behavior is observed on device launch configuration as well.. Binding: disable OK button in import binding dialog if nothing selected. disable OK button and add a message on the reason when the input matches the current cname. Added an image of Xamarin installer and a screenshot from OSX Installer wiki page for a couple of examples of installer on Mac. The bullet points for us would include something similar: license, prerequisites destination, installation, and summary.. Embed Git check and install into Studio Windows installer. We currently include portablegit and prompt user to install at Studio start if no git is detected. Portablegit is for not just git support, but we also use it as our shell environment for Windows (terminal, getting shell env, etc). For the new installer, we should embed the git check and installation of portablegit in it.. Modify Studio Dashboard to invoke the new platform config wizard for configuring platforms. We currently have links in each platform section under Get Started tab to direct user to individual site for downloading the natvie SDKs. We should modify them to invoke the new platform config wizard with the specific platform selected.. Liveview: Fastdev prevents liveview from working on android emulator. This involves moving the launch shortcut and related classes for contributing the Run Android Device action to Android's own plugins.. This involves moving the launch shortcut and related classes for contributing the Run BlackBerry Device action to BlackBerry's own plugins.. Samples: double-click should expand folder node in Samples view. Summary log from chat recorded on poker session Story Time Chris Williams: I'm secretly in UK Thomas Huelbert: lol. Only prompt user for overwrite when installing a Titanium SDK that already exists. Dashboard: Mobile Web Configuration is not getting configured. Dashoard - Marketplace: clicking on the link doesn't open the page. Include PHP related rubles in the PHP feature. Include Ruby related rubles in the Ruby feature. The following rubles should be packaged in the Ruby feature instead of the Studio core feature: Capistrano, Cucumber, EngineYard, HAML, Heroku, Rails, Rspec, Ruby, Sass. We have an extension point to define a path where bundles are contained. Check plugin and for an example.. Move all references of BlackBerry from the mobile and core plugins to BlackBerry plugins. Once all the subtasks of refactoring the BlackBerry code into its own plugin is completed, all the references of BlackBerry from the mobile and plugins has to be either removed or moved to BlackBerry's ui core plugins. All the constants, resources and utility methods corresponding to BlackBerry should only be available in BlackBerry plugins.. Move Publish Distribute BlackBerry action to BlackBerry plugin. This involves moving the definitions and related classes for contributing the Publish Distribute BlackBerry action to BlackBerry's own plugins.. Refactor the modules table section of to have BlackBerry plugin contribute its column. The plugin will need to contribute the icon. We also need a mechanism to parse out the module version for BlackBerry to be shown in the table. Is the platform type enough, and the tiapp model could parse the directory structure from there?. Have BlackBerry plugin contribute to the preferences page. We should have a subnode for each platform under Preferences Studio Platforms and move the respective section from Platforms preference page there. The plugin will contribute the BlackBerry preference page and handle its preference settings.. Move Run BlackBerry Simulator action to BlackBerry plugin(s). This involves moving the launch shortcut and related classes for contributing the Run BlackBerry Simulator action to BlackBerry's own plugins.. Refactor the Deployment Targets section of to have BlackBerry plugin contribute its entry. We should be able to re-use the attributes defined from TISTUD-3053 for the \"Deployment Targets\" section of as the idea here is to also have BlackBerry plugin contribute the name, platform type, and if it's supported on the current system.. Refactor the mobile project wizard to have BlackBerry plugin contribute its entry. Currently the mobile project wizard defines all the checkboxes for deployment targets. We should have the BlackBerry plugins contribute the following attributes through the extension point from TISTUD-3066: 1. A display name 2. A string for platform type (\"blackberry\") that will be used by CLI and other necessary operations; 3. A mean to check if the requirement for platform support is met, if the Titanium SDK contains the platform, if the platform SDK is installed (not applicable to Mobile Web), and if the OS supports the platform (not applicable here either), so the project wizard could enable disable the checkbox as appropriate. It should return a status so we could display a warning or error message if needed. 4. Potentially a post-project creation hook to perform any BlackBerry specific task needed (don't think we have any?). 5. An optional \"priority\" attribute to control the order of the platforms both here and in Currently we are sorting them in alphabetical order, but there might be a case in the future where we like to have the flexibility.. Refactor the mobile module project wizard to have Android plugin contribute its entry. Refactor the Titanium module project wizard to have Android plugin contribute its entry.. Move all references of Android from the mobile and core plugins to Android plugins. Once all the subtasks of refactoring the mobileweb code into its own plugin is completed, all the references of Android from the mobile and plugins has to be either removed or moved to Android's ui core plugins. All the constants, resources and utility methods corresponding to Android should only be available in Android plugins.. Move Publish Distribute Android App Store action to Android plugin. This involves moving the definitions and related classes for contributing the Publish Distribute Android App Store action to Android's own plugins.. Refactor the modules table section of to have Android plugin contribute its column. The plugin will need to contribute the icon. We also need a mechanism to parse out the module version for Android to be shown in the table. Is the platform type enough, and the tiapp model could parse the directory structure from there?. Have Android plugin contribute to the preferences page. We should have a subnode for each platform under Preferences Studio Platforms and move the respective section from Platforms preference page there. The plugin will contribute the Android preference page and handle its preference settings.. Move Run Android Emulator action to Android plugin(s). This involves moving the launch shortcut and related classes for contributing the Run Android Emulator action to Android's own plugins.. Refactor the Deployment Targets section of to have Android plugin contribute its entry. We should be able to re-use the attributes defined from TISTUD-3053 for the \"Deployment Targets\" section of as the idea here is to also have Android plugin contribute the name, platform type, and if it's supported on the current system.. Refactor the Titanium project wizard to have Android plugin contribute its entry. Currently the Titanium project wizard defines all the checkboxes for deployment targets. We should have the Android plugin contribute the following attributes through the extension point from TISTUD-3066: 1. A display name (\"Android\"); 2. A string for platform type (\"android\") that will be used by CLI and other necessary operations; 3. A mean to check if the requirement for platform support is met, if the Titanium SDK contains the platform, if the platform SDK is installed (not applicable to Mobile Web), and if the OS supports the platform (not applicable here either), so the project wizard could enable disable the checkbox as appropriate. It should return a status so we could display a warning or error message if needed. 4. Potentially a post-project creation hook to perform any Android specific task needed (don't think we have any?). 5. An optional \"priority\" attribute to control the order of the platforms both here and in Currently we are sorting them in alphabetical order, but there might be a case in the future where we like to have the flexibility.. This applies to and Russ provided the following commands: ti build blackberry -T simulator -A ti build blackberry -T device -A. Russ provided the command in TISTUD-4134: ti build blackberry -T distribute \"pookiepie\". Improve beta rc update process. Currently when we release a Beta or RC candidate, besides updating to the right version of Studio, user will also need to update their npm packages from command line. See for an example on the number of steps users need to do. The idea is to improve the process by utilizing the update stream user set in Studio preferences page and installing the beta rc versions of npm packages when checking for updates. The published versions for npm packages will include \"-beta\" and \"-cr\".. Surface Full Error: CLI: project create: Invalid platform: blackberry. File New From Template: Remove Alloy entry. The current Alloy Blank File doesn't really make sense. If we keep the Alloy menu, the options should be for creating Since it only makes sense from a project context, and we have the corresponding menus there, We should remove it from File New From Template.. File New From Template: not to show Blank File option if it has no siblings. Change \"All\" category to \"Others\" in mobile project wizard. The \"All\" category is intended to contain the project templates that don't have a category defined in addition to the ones with categories. The suggestion is to modify it to \"Others\" where it only contains the list of project templates without a category.. The order should be Run, Debug, Profile, Test. The Profile and Test contributions should occur after the \"Inspect\" and \"Watch\" groups.. Improve the error message when login failed. Titanium Project: new project that includes blackberry target uses legacy python script. If a new Titanium Project is created, and BlackBerry is included as a selected deployment target, the old python creation script will be called instead of the standard CLI script. Project Creation Script Overview: Test Steps: 1. Verify BlackBerry is Installed. 2. Create Titanium Project (all deployment targets, including blackberry). Current Behavior: Python script is called. Expected Result: CLI script is called.. h5. Improvement description Alloy projects .xml files should also present the hover info like for .js files. When passing the mouse over an .xml element, information should be displayed as a popup like for objects in the .js files.. Alloy: add hover info for element names in Alloy .xml file. When we have the following code in a tss file: and hit Enter, it becomes The expected result is to auto-indent to. This task is for writing the , , and builtins for the CLI for Denso platform (IVI) only, as per the . Please see for reference.. The Denso platform, called IVI, will be Mobile Web based. This ticket is to support the additional \"ivi\" option for the flag in \"titanium create call to create a Titanium project. For IVI, we could just follow the instruction in specifically the following part, as there are no additional setup steps needed on the IVI side for the moment: \"Create a folder in the Titanium SDK distribution and then update the array of platforms in the SDK's to include the. Steps to reproduce: 1. Create a project with Tizen platform enabled; 2. In Project Explorer, run Run Tizen on Device. The text in the console should say \"Launching Tizen app on device\".. Linux: Run New Configuration Window Build tab contents are not visible properly. Creating ticket fails in Titanium Studio with special character in the password. Package JDK in the Windows installer. We currently package a specific version of JRE when installed Studio on Windows. The suggestion is to package an equivalent version of JDK instead. We should also add the JDK path to the system path variable.. The preference page node will be under Platforms, and the content will contain a field for the Denso SDK location and a browse button. It should validate the path and generate from it. The IVI SDK is at. The IVI SDK is built as a Titanium module, so we could download and update it directly at startup, and no preferences page is needed. Resolving as invalid.. Steps to Reproduce: 1. Clean install Titanium Studio 2. Check for Titanium updates. 3. Select Titanium Code Processor. Actual Result: The documentation is minimal. Expected Result: We should have change logs similar to what we have with CLI.. The builds are in place; we just need to update the sync-nightly job (and sync-beta and sync-rc) to publish the respective Jenkins build to a public update site. The url will be in the form of. Suggest to have a group of radio buttons or a combo-box in preferences page with options Stable, RC, Beta, and Nightly. Stable will be the default choice, and when user switches to another selection, RC, we will scan the list of available update sites and replace the ones containing stable with urls containing rc. So for the base Studio, with be disabled and will be added and enabled. This will apply to the add-on plugins that we provide as well, and we will keep the update url naming convention consistent across all the features. It will help reduce the likelihood of having incompatible versions of plugins installed against each other. We could also have a remote file that contains the list of our update url prefixes, and we will append the right update stream type for the full URL to add and remove. This avoids the issue of user modifying the list of update sites manually and we no longer able to find the original url to replace.. Update the Dashboard side to call the SDK-Info command with a \"tizen\" key. Then, parse the result and display any info (like we do with the rest of the platforms). The Tizen section in Dashboard will look similar to what BlackBerry one shows.. Updating the Studio code to support Tizen when checking for the supported platforms. This includes the work to update the file with link to the Tizen SDK download (. Haven't been able to reproduce locally, but we have seen a number of reports from users that alloy templates do not show up in Titanium project wizard. When we checked the log, the \"alloy info templates\" command doesn't appear to get called. We need to check under what condition it could occur. Attached a user log. Also we had user try running \"alloy info templates\" directly from the command line, and it returns the expected json output.. When re-publishing an Oracle module integrated app, the developer should be alerted that an overwrite of a previously published application is going to occur. Reference the doc at. The publishing should happen through Oracle APIs(check the Resource Manager APIs). See Use the Resource Manager APIs to create the publication, package it with an application, and publish it to the mobile server. See the in the Oracle Database Mobile Server JavaDoc, which is located off the page. Reference the doc at. Reference for using the publish provider extension. 1. The supported platform is Android; 2. The publish target is the Oracle Mobile Server. We have a test server as specified in. Reference for contributing to the Publish menu. The action should be visible only if the project has Android as a deploy target. When invoked, it will launch the publishing wizard (see TISTUD-3485). See for the Oracle integration document.. This is a regression. It did not happen in Studio Test Steps: New Project. project name. Finish. the creation of the project folder, cancel it by clicking on the red square at the bottom. Observe the error. Screenshots and logs attached.. Not to use legacy scripts if CLI is not installed and SDK is. Ignore the SDK version that starts with a non-numeric character. Studio currently doesn't handle a version string that doesn't start with a number instead of and CLI doesn't handle such SDK either, so we should just ignore it in our SDKLocator class.. Improve Module Packaging Run Config wording. See screenshot. Suggest using: \"A mobile app\" \"Mobile Project\" \"A directory\" \"Location\" (seems consistent with other run config menus) Applies to all module packagers (Android, iOS, Steps to Reproduce: 1. Create Titanium Module. 2. Package Titanium Module and view run config menu. Actual Result: Odd strings. Expected Result: Consistent and meaningful UI.. Add Blackberry Applications Installer to the run configurations. Currently the Eclipse node debugger plugins contribute their own JS editor that opens the generated files. We should remove it and make our existing JS editor the default one so it doesn't cause confusion. It will also make theming consistent.. Checkout the source code (using \"svn checkout and fix the syntax for the following plugins so it compiles against JRE. Include Eclipse node debugger plugins and make them JRE compatible. Steps to Reproduce: 1. Create Alloy Project. 2. Project Context Click New Alloy Model. 3. Enter name, press OK. Actual Result: Strange error. Expected Result: The OK button should be disabled when no column entries are entered yet.. Investigate adding support for BlackBerry development on Linux. Studio: Overview detects an error if creating a new project and importing in Studio. Improve the icons. The logo in the context menu and in the Project Explorer (and probably other places) could use some improvement. 1. In the Project Explorer pane, right-click New logo is not centered properly and doesn't fit with other icons we have. logo should be improved.. Add formatting support to TSS files after parser is created. We could copy from JSON formatter and extend. Here is an example of formatted TSS file:. The action will invoke a wizard that contains the same fields the packaging launch configuration tab has (TISTUD-3262) except for the project field.. The action will create launch shortcut based on the launch configuration defined in TISTUD-3258 and install the Tizen app on device. The menu should only appear when the Tizen platform is enabled in project's. The action will create the launch shortcut for the corresponding launch config from TISTUD-3257 and directly install the app on Tizen emulator without an additional wizard. The menu should only appear when the Tizen platform is enabled in project's. Add support for the packaging command via the CLI extension. See for the doc on downloading and running Tizen-enabled CLI.. We should try call \"build\" again when we've cleaned all our projects and build automatically is checked. The platform does not support incremental builds, so that call should probably only happen when a 'clean-build' is performed. See for the doc on installing a version of CLI that supports Tizen.. See for the doc on downloading and running Tizen-enabled CLI.. The preference page node will be under Titanium, and the content will contain a field for the Tizen SDK location and a browse button. It should validate the path and generate from it. The Tizen SDK could be downloaded at. The checkbox should only be enabled when user specified the Tizen SDK location in the preferences page and the selected Titanium SDK has Tizen platform support.. We should show Tizen as a checkbox in the deployment targets section of Titanium project creation wizard. The checkbox should only be enabled if user specified the Tizen SDK location in the preferences page and the selected Titanium SDK version has Tizen support. Please see for the doc on the Tizen-enabled CLI.. The action will create launch shortcut based on the launch configuration defined in TISTUD-3118 and install the app on IVI device. The menu should only appear when the IVI platform is enabled in project's. The action will create the launch shortcut for the corresponding launch config from TISTUD-3117 and directly install the app on IVI emulator without an additional wizard. The menu should only appear when the IVI platform is enabled in project's. The action will invoke a wizard that contains the same fields the packaging launch configuration tab has (TISTUD-3119) except for the project field.. Add support for the packaging command via the CLI extension.. We should try call \"build\" again when we've cleaned all our projects and build automatically is checked. The platform does not support incremental builds, so that call should probably only happen when a 'clean-build' is performed.. \"Screenshots\" Field should be renamed as \"Attachments\" in \"Submit a Ticket\" screen in studio. Steps to Reproduce 1. Choose Help Titanium Studio Submit Ticket. 2. Attach css, html, etc any type of file Actual Result All attachments of any type gets attached. Expected Result One is able to attach only jpeg or png type files for \"Screenshots\" field. Or The field should be renamed as Attachment to provide more options to the users.. Titanium Updates doesn't show on a clean machine. After project templates for Denso are defined and created, we will need to include them in the Denso version of Titanium Studio.. Move all references of mobile web from the mobile and core plugins to mobileweb plugin. In alloy the following format will generate the model appropriately for all supported adapters types: (sql, properties, and localStorage): so for example, a sql model would be generated like this: However, we currently call \"alloy generate model myModel Need to add \"sql\" after the model name. For the other adapter types, we are inserting the type correctly, so just need to fix for sql.. Dashboard: Update Android SDK to on staging.. Add launch configuration for packaging Denso application. The launch configuration tab for now could contain just a project field and the distribution location. We will add more if more fields are required. See the screenshot for an example of our Android packaging's main tab.. Add launch configuration for running on Denso IVI device. The launch configuration tab will just have a project field unless additional options are needed. See the screenshot for an example of the corresponding launch configuration tab for Android.. Add launch configuration for running on Denso IVI emulator. Initially, the launch configuration tab could just contain a project field and an option to re-build project on launch. See the screenshot for an example of the Android emulator launch configuration tab.. Denso: add checkbox to project creation wizard to enable automotive module. In the Denso version of Titanium Studio, add a checkbox \"Automatically enabled automotive extension for this project\" to the project creation wizard. It should be enabled and auto-selected when IVI platform is selected. When selected, Studio will automatically include the automotive module in project's. User reported the following exception is seen in the log when prompted for updating the npm packages, and the installation failed:. Update the Dashboard side to call the SDK-Info command with a \"blackberry\" key. Then, parse the result and display any info (like we do with the rest of the platforms). The BlackBerry section in Dashboard will look similar to what Android one shows.. Update the Dashboard to check for BlackBerry NDK and display corresponding message. Updating the Studio code to support BlackBerry when checking for the supported platforms. This includes the work to update the file with links to the BlackBerry NDK download and simulator downloads (. This involves moving the definitions and related classes for contributing the Publish Package - Mobile Web action to mobileweb's own plugins.. This involves moving the definitions and related classes for contributing the Run Mobile Web Preview in Emulator action to mobileweb's own plugins.. CLONE - Studio loses connection settings on restart. Currently there is a single IP address box that is used for both device install and running in simulator. It is a pain to switch the address between simulator and device. Please have 2 boxes 1 for simulator and a second for device. For device have an initial value of. For this ticket, we will create the extension point placeholder for defining individual supported platforms and the manager class to process the contributors. The actual elements and their attributes will be added when working on the refactoring of various functionality.. Move Run Mobile Web Preview in Browser action to mobileweb's own plugins. This involves moving the definitions and related classes for contributing the Run Mobile Web Preview in Browser action to mobileweb's own plugins.. We should be able to re-use the attributes defined from TISTUD-3053 for the \"Deployment Targets\" section of as the idea here is to also have mobileweb plugin contribute the name, platform type, and if it's supported on the current system.. Refactor the Deployment Targets section of to have mobileweb plugin contribute its entry. Currently the Titanium project wizard defines all the checkboxes for deployment targets. We should have the mobileweb plugin contribute the following attributes through the extension point from TISTUD-3066: 1. A display name (\"Mobile Web\"); 2. A string for platform type (\"mobileweb\") that will be used by CLI and other necessary operations; 3. A mean to check if the requirement for platform support is met, if the Titanium SDK contains the platform, if the platform SDK is installed (not applicable to Mobile Web), and if the OS supports the platform (not applicable here either), so the project wizard could enable disable the checkbox as appropriate. It should return a status so we could display a warning or error message if needed. 4. Potentially a post-project creation hook to perform any Mobile Web specific task needed (don't think we have any?). 5. An optional \"priority\" attribute to control the order of the platforms both here and in Currently we are sorting them in alphabetical order, but there might be a case in the future where we like to have the flexibility.. Refactor the Titanium project wizard to have mobileweb plugin contribute its entry. Show the error from console in the dialog when running iOS on device. Remove duplicate entries in the environment variable PATH. Test Steps: Latest Studio. two Titanium Mobile projects for android platform. first project on Android emulator. emulator has been launched , try to run second project on android emulator. Actual Result: Emulator hangs on 'not responding' screen. Expected Result: The second project application should be launched in emulator.. We would like to deprecate rhino and discourage people from using it, and the suggestion is to disable the \"Android Runtime\" combo-box in when the that.. Steps to Reproduce: 1. Create Titanium Module Project. 2. Select Publish Actual Result: There is the \"Run Web Deployment option. Expected Result: The web deployment wizard option does not apply to Titanium Module project and should be filtered out.. Remove Run Web Deployment Wizard option from the Titanium Module Project. Port HTML content assist unit tests to XML. Porting the large amount of HTML unit tests should help us identify the area in content assist where functionality exists in HTML but not XML.. Add Alloy samples to Samples view. Looks to be Windows 8 specific. Not able to reproduce on Window 7.. CLI: iOS simulator in Studio does not work for XCode.. Not to show the error message when first opening package Mobile Web wizard. The command to call \"acs list\" under a project dir to show an app info has been deprecated; instead, we should run \"acs list \". The acs change is in the latest git. We should verify the syntax we call to \"acs list\" in Studio and make appropriate changes.. adopt to the change in \"acs list\" command. 'Finish' tab should be disabled when first opened Titanium Studio Help 'Install specific Titanium SDK from URL'. On a very large jsca file, Studio crashes with and 'Java heap space' error. Hi Pragya, The video you attached is for the JDT issue on Windows 8. Do you mean to attach a separate video on this particular issue? Thanks.. 1. Start Titanium Studio on a new empty workspace; 2. main menu to make toolbar visible; 3. Restart Studio. Expected result: the toolbar stays visible. Actual result: the toolbar is hidden again. Workaround: after making toolbar visible, switch to extended Studio perpsective, then restart Studio. After that, switch back to simple perspective and the toolbar will persist afterward.. Add support for running on BlackBerry device. Remove Run Web Deployment Wizard option from the Project. Publish: Web Deployment Wizard: Capistrano missing icon. Publish: Web Deployment Wizard: Capistrano missing icon. See screenshot. Steps to Reproduce: 1. Create Web Project. 2. Publish Web Deployment Actual Result: Capistrano missing icon. Expected Result: All options have an icon.. Allow user to edit the server setting. The discussion stemmed from parity on having Run Run menu for project. We decided to implement the following two things: 1. Make the launch configuration for running local server private; 2. Add \"Edit Server under Run menu to allow user to edit the server settings such as port number.. Can not import removed project. From Chris: \"npm pack can create a tarball that we can use to install. Need to investigate if this also includes dependencies underneath. 1. Grey out 'Titanium SDK' field in the installer main page to indicate that it is mandatory and as the user can not de-select it and add \" (required)\" to the text. This should only apply to the case where user doesn't have a SDK installed; if a SDK already exists, the field will be de-selectable. 2. The text of NodeJS should dynamically switch to 'NodeJS (required)' if the user selects any of the npm packages. 3. When NodeJS is selected, the release note section should be updated with at least the default text.. Dashboard: Alloy templates should appear first in Templates section. Titanium Updates on Linux: the installation is shown to be successful although it failed. Steps to reproduce: 1. Create a project; 2. Create a method in the project; 3. Deploy the app; 4. Delete the project; 5. Repeat Step 1. This produces an error popup shown in the screenshot and the following entry in the Studio log:. First Launch : After installing the 32-bit zip on Ubuntu when launching for the first time I received an error opening dashboard. Unify the handling of installing and updating processes. Alloy templates do not show up after alloy is installed until Studio restarts. Add File New Project to the simple Studio perspective. No Alloy templates appear in Titanium project wizard when the alloy installation path differs from default. No logs are shown in Studio when building Mobile Web using the new CLI. Titanium CLI is never used in Studio. Show a better error message when swapping radio button in \"Install SDKs\" window. Blank input in Help 'Install specific titanium SDK from URL' should display the right message. Even the Appcelerator Titanium CLI package is successfully installed still after every Titanium Studio restart same update prompt appears at the bottom.. Keep the focus in the editor when console generates output. This is not a regression bug. Steps to reproduce: 1)Open Titanium Studio. 2)Open Create a Titanium Mobile project - Android 3)Open context menu by right clicking on that project in Titanium Studio. 4)Observe that debug as - 'android device' icon is unavailable. Actual result: In context menu list, debug as - 'android device' icon is unavailable. Expected result: In context menu list, debug as - 'android device' icon should be available. Screenshots attached.. Change in Titanium SDK preference is not reflected in New Titanium Project wizard. In the new Titianium Project wizard, if the SDK path is modified in preferences through SDKs' link, then the new wizard still shows the list of SDKs from previous path. The list should be re-loaded in this case.. Add our project shortcuts to File New in Debug Perspective. \"Configure Workspace linked to the last opened preference page. Link is directed to a different window in Titanium Studio This is a regression, this does not affect Studio Steps to Reproduce: 1. Create Project 2. Right Click on created project and select Properties 3. Select \"Formatter\"and click on \"Configure Workspace Actual Result: iOS Certification and Provisioning window. Expected Result: Should open the global formatter preference page window.. Alloy: Cannot create migration files with the same name. Dashboard: Linux: dashboard is not open as expected, pop up error msg \"Internal error. Add vertical scrolling to project template description area. Make the left and right arrow keys traverse the list of project templates. The Titanium mobile project wizard page currently will we need the ability to pass in the list of platforms to be selected by default.. When the Titanium Studio Titanium preference page is opened on Linux, the following exception is generated in the log: This is because we are only creating BlackBerry fields on Mac and Windows. Think we should instead always create the fields but then hide them using according to the OS; that way we don't have to check if a field is null all over the place.. Update file in dashboard to support iOS 6. See for the current content. We need to update the versions for iOS to include. Allow developer to specify custom domain name for service when publishing. When publishing a service, the user can choose the custom domain name for which to associate the service. Pop up a dialog during the the initial publish process, allowing the user to enter a domain name instead of the default.. ", "contenttype": "application/json", "created": 737603, "id": 37, "language": "en", "user_name": "mxia"}]}