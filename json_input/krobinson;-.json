{"contentItems": [{"content": "Noticed this when I typed in the wrong version populating content into a nuget repo for testing. The code explicitly throws an IOException when remote content isn't found. I would (perhaps naively) expect that this would just result in a 404. Truncated exception from log shown below: This was triggered with a request against the api for a version that does not exist:. Docker search against group is incorrectly sorted. When NuGet searches are performed, the search cache is primed with data from the result but the actual binaries are not yet downloaded. When you navigate to the Assets view for one of these and click the download link the content is fetched, but the status shown on the screen does not update until after you navigate away and back. The refresh button does nothing in this context. The expectation is that the info about the asset should be updated, which might include a refresh of the store after the content is fetched. Recreation steps: - ute a search against our proxy repo: curl -u -X GET -v \" - Browse in the UI to any of the results of the above search; on a newly installed system this should be all results - note that 'Locally cached' is false - click the path link and download the asset - observe that the UI does not update 'Locally cached' and other related info (File size and Blob Ref). Theres a delete button when viewing an asset in a group repository. We dont support delete in that scenario, so the button shouldnt be there, and if we do try to use it an NPE is thrown since the Asset id doesn't exist in the group repo bucket.. I uted a count query against the default repository, published a test package to nuget-hosted, and then re- uted the count query - and the count incremented. Reproduction: 1. Execute this query to see how many components are available in the feed. 2. Publish to the nuget-hosted repository. 3. Execute the count query again and note that it has incremented despite the activity happening on a different repo Test for this condition is presently commented out in for this ticket), and should be re-enabled to confirm this when fixed.. Component fetch from group repo does not respect repository ordering. The expectation is that if a component is present in more than one repository, the ordering of group members will determine which one is returned. Presently we just return the first matching record, regardless of the configuration, although the query uted is indeed different. Given a hosted repository to which I've published a component downloaded from a proxy, both of these queries return the same result regardless of the group membership configuration: Similarly, browsing a group repository will show the same component regardless of the group membership ordering. Test for this condition is presently in NugetGroupIT, and should be re-enabled to confirm this when fixed.. NuGet assets do not download with correct filename. Heres a list of places in the UI missing help text: + Strict content type validation (repository config) + Name (repository config, make it clear that we expect an ID, not a human-readable -+ Raw repository (repository config browse, need a better name and or description)- Removed based on discussion on + Query cache size Nexus trust store (repository config, need better descriptions) + Not Found Cache enabled (repository config, the intent is clear but not what this does) (add here!). UI Component and Asset details page urls should be transportable. As a User I would be able to copy the link for the page I am looking at and share that link with someone else. noticed that if you copy a link for an element you are looking at details for, when you hit the bookmark it takes you to the base Browse UI page (selecting a repo). I verified this and the fact it does not occur for search, although likely will be an issue for any of our Drilldown views which require multiple levels of context during normal navigation. This is new to NX3 and NX2 is not browsable in this exact way (but is bookmarkable for the non-tree path version).. When checking to see if an index already exists the raw repository name is used, but elasticsearch stores indices in lowercase only. This leads to an exception being thrown on update as we try to create the same index again. Any repository created with uppercase letters can be used to trigger this behaviour; on an update from the UI you will be greated with a 'facet failed to start' message.. Looks like we're running into this issue: Rendering from here is including a micro character that doesn't render properly: Noted while reviewing this screenshot in a PR(note the question mark in the Processing Time):. Authentication Password should always be required. -Noticed that when creating a Maven Proxy when I checked password did not appear to be required, however, when I submit it was required but via a different message and apparently means as every other -After talking to , he believes this should not be required so -This is new to Admin UI so no older NX3 checking is -In NX2, password was autofilled in on save attempt rather than it being required. Because the password was not clearcase I am not sure at this time what was being filled in there. I assume this could be potentially blank (and appear different) moving forward. Whether it's actually different, may be a deeper UPDATE: - as per discussion with the team we will no longer support the NX2 behaviour; username and password will always be required and we just need to sort out the details to ensure that the model is consistent across CRUD operations. Acceptance criteria: - Password field should be required and styled as such in the UI. The new CMA default (host) repo creation has deployment policy set as read only. The NX2 default was dependant upon the release policy (disable redeploy for release, allow redeploy for snapshot, etc). After speaking with and this did not sound intentional so filing. These policies are new to CMA so no back checking of NX3 can be performed. Workaround to select what deployment policy is correct manually. This also affects the default NuGet hosted repo and caused me to find the related (linked) defect. UPDATE: - based on discussion during planning today we will leave the default as 'Disable redeploy' and it is already not read-only at this point.. Some pages actions have inconsistent masks. Elasticsearch seems to be more finicky that our data model allows right now, and likely spaces in Repository names is something we want to support. And after removing the space we find we don't allow uppercase letters: To reproduce just add a new Repository in the UI with a space or capital letter in the name. An unhelpful error is shown in the UI: \"Failed to start facets\" Minimally we should add validation to ensure that we don't allow invalid characters, as right now we end up with configured Repositories that cannot possibly function. Acceptance criteria: - names should be validated in the UI, and provide guidance when illegal names are tried - names should be validated on the server using the same rules as the abuse of the ExtDirect api) - names should only allow (English) alphanumeric and - names should be sanitized for elasticsearch usage in index names; this requires enforcing uniqueness of names as indexes are all lowercase. Add scheduled tasks list filter when creating tasks. Store state of grid columns and sorting. A few places still not using -Review all usage of API- -Review all usage of specifications Classes in Classes in -Pending further investigation fore coreui and proui. Oracle has started to publish a Maven repo with weblogic related artifacts. I expect that to become pretty popular with Oracle users since it saves TONS of time in terms of deploying the artifacts to an internal Nexus instance alternatively. We should make sure we know how to configure this so we can show customers and potentially work with Oracle to get any problems removed. More info: there might be no index. This could also be done as a blog post related investigation if there is no engineering. Update to more recent Groovy version. Groovy appears to be the latest available version with a corresponding groovy-eclipse compiler, with being the last release published at this time. Java 8 is only \"official\" since so hopefully this will head off any compatibility issues. ", "contenttype": "application/json", "created": 737603, "id": 67, "language": "en", "user_name": "krobinson", "email": "-"}]}