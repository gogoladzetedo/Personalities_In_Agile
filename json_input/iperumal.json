{"contentItems": [{"content": "As a user I would like to have shell interface to the rest API. The scope for this JIRA could be limited to stream commands.. Handle stream job deployment status recalculation failures. SparkApp batch job is not running. The above stream should consume form the mail source and write it to logs. The unicode requirements for the and needs documented. Gmail specific requirement (such as: 993) needs documented. Spark streaming integration module fails to initialize codec. Source module for capturing video frame from camera or video file. SpringXD sqoop module is hanging. In XD today we use or slf4j APIs bound to log4j at runtime (configured with Boot uses slf4j APIs backed by logback. This causes some build building a component that depends on and spring-boot, requiring specific dependency exclusions. In order to simplify building and log dependencies, XD should standardize on slf4j APIs (replace any Loggers with Slf4j). This is internal only, and would not impact users who are used to seeing An additional step is to replace log4j with logback. This change would be visible to end users but will provide us greater affinity with boot and improve the developer experience. If we make this change it should go into GA.. Remove Spark Hadoop dependencies from root classpath. Scala processor module utor trims messages. The spark streaming message bus receiver isn't reliable yet. The receiver needs to handle data loss in case of worker node that has it running. We currently handle the driver failure automatically by re-deploying spark streaming module. But, this is about the data loss when the worker node dies. Please see the documents here:. Implement an XD module type that integrates with Spark Streaming, reactor. Redis sink: better handling of module activation. From the admin UI, a DELETE request to would shutdown the corresponding container. Ability to deploy the stream with deployment properties (module count and container matching criteria) from the admin UI.. At the admin UI, this view will show the list of all active containers, the modules that are deployed into it. The deployed modules will have their stream job along with the status info. This view should poll on a interval so that the admin UI is. \"runtime modules\" - stream or job displays stream job name along with deployed modules and the status of the same. \"runtime containers\" What parameters you add to the stream job definition and what would be the output? JSON response should aggregate based on given stream job name along with the status. A mock up could look like this: Unit Name Type Module Container Id Options Deployment Properties Unit status s source incomplete j3 job deployed s sink incomplete. Enhance runtime modules result with stream job status. pointing to the complete directory structure is needed only for the modules that share common properties (rabbit, jdbc, twitter). otherwise, any other module properties require syntax. We can do couple of things here: a) document this requirement b) log the config location at both startup. Exception handling at Module info command. Add an option to destroy the stream job definitions. Also add confirm action that asks for user to confirm to proceed with destroy.. After successful job deployment, the Job deployments path in ZK doesn't get updated with the data Though this data is not used for deployed instance repository to check for the deployment status, it may be better to have this state updated like stream deployment path.. Upon container departure, the onChildLeft() event triggers redeployment of stream job modules that were deployed into the leaving container. During the redeployment, it happens that the container candidates from the (based on the subset from candidates, int count)) includes the container which already have the module of the stream job definition deployed. This causes the re-deployment silently swallowing the and the module being re-deployed doesn't actually get deployed.. When adding streams page to the UI (from XD-1667), it is necessary to modularize the angular app modules based on the (job, stream, auth As we expand into more components and use cases in the UI, this definitely makes it easier to concentrate on specific modules based on the functionality.. Fix intermittent test failures at. The UI controllers in definitions look overly complicated to get the modularization work. We can possibly refactor and make it look clean; especially we will follow this as the example for subsequent controllers definitions.. Inconsistent test failure with mqtt script test. Job restart fails with NPE. See PR for XD-1090:. Handle container shutdown gracefully. To be able to run the tests without conflicting with an existing XD admin server launcher. tests need appropriate cleanup of test data during teardown. Currently, the JobPlugin extends AbstractPlugin and the AbstractPlugin has got lots of unused code (like it doesn't do anything with in there.. Create REST API for getting information on a job ution for a given ution id. When trying to a tap that has reference to an already deleted stream fails with the following exception: Command failed 4): unrecognized stream reference ''. As expected, the lookupStream fails to find the stream name as the stream doesn't exist in the repository. In this scenario, what is a better way to handle the tap operations. Should we undeploy the tap when the stream is destroyed? ( though I don't see an easy way to find the taps that use a specific stream).. Add 'all' commands for all applicable resources (streams, tap, job & trigger,). Create list delete commands for all the metrics. We need to add list delete commands for the metrics: Gauge RichGauge Currently, the class has the delete method to delete the metric from the repository. We can probably use the same for all the metrics.. Add support for creating fixed delay fixed rate triggers. Create a trigger from Shell. Test connection pooling on Redis operations. XD AdminMain & ContainerMain should check property from scripts. This task is invalid as we handle this in install-redis script. Add redis bundle to distribution zip file. ", "contenttype": "application/json", "created": 737603, "id": 12, "language": "en", "user_name": "iperumal"}]}