{"contentItems": [{"content": "Need assign to WillM, as i remember he said this is By Design.. Additional info: Go through steps to reproduce, then copy Url of current page and use it to open installer page in other Tab or Window. Actual result: - the Template option is localized according to selected flag. Additional steps: - select a new flag (new language). Actual result: - the Template option keeps previous value. Expected result: - the Template option should change it&apos;s value according to selected language.. I added code to make sure that it defaults to 1 if billing or trial period is not specified.. this was added to per Bob K&apos;s request.. SI: make dotnetnuke FIPS compliant. We should not allow users with special symbols in the name. This was done for security reasons to limit potential XSS attacks.. Assigning to Product Management. moving this to triage for the team to review, but my previous comments still stand - there is no \"secure\" way to fix this as the problem is that browsers clear password fields after postbacks automatically -the typical \"solution\" is to white it back in via the attributes collection but that is a security issue as the password can be retrieved from the users browser temporary internet files. Short of adding a service framework to retrieve a value persisted on the serverside after a postback, there is no solution to this issue that I know of - suggest it is closed as won't fix. Isolate Telerik integration in the platform. h2. Card As a developer, I want to be able to define custom token types for my SPA module. These tokens should be automatically included as part of the TokenReplace process inthe SPA module. h2. Conversation The token creation needs to occur in server-side code. This can be done in the as that is a defined location for every module. If we define a new interface, then module developers can return a dictionary that contains the tokens. We should include the page and modulecontext when calling the interface. h2. Confirmation This feature should also include a sample implementation in the Dynamic Content Type Manager so that we can verify the implementation and show users how it can be used in their own modules.. h2. Card As an user, I want to have display view templates for all of the default installed content types. h2. Conversation h2. Confirmation. h2. Card As a developer, I want to be able to create a content field which is a list of elements of a specified Content Type ( List ). h2. Conversation The list should mirror the behavior of a generic list in that all elements of the list must be the same type. A list can contain either a Content Type or a Data Type you don't have to create a 1 field data type to create a List). A list cannot contain a base type. h2. Confirmation. h2. Card As a developer, I want to be able to create field which is a reference to another Content Type. h2. Conversation There will not be any separate UI stories. Cascading menu for snippet insertion context menu. h2. Confirmation. Create fields of type Content Type. h2. Card DNN 5 introduced a new OPML feed viewer. This module has not been installed in the platform since DNN 7 however there is still a lot of code related to this feature. This feature should be removed from the platform. There is no requirement to extract this into a separate module. h2. Conversation The following code folders should be removed: DNN * h2. Confirmation All related Jira items should be marked as won't fix. NOTE: This is technically a BREAKING CHANGE. h2. Card The What's New module is used to display the change log for DNN releases. The core platform no longer maintains the change long in the What's New module and uses the Getting Started feature instead. The What's New module should be deleted. This module does not have it's own API or database structures so there is no backend to consider. h2. Conversation h2. Confirmation All related Jira items should be marked as won't fix.. h2. Card The Content List module is used to display content related to a particular tag. This module was originally created as part of the old search solution. The Content List module should be deleted. No forge project is needed for this module. h2. Conversation h2. Confirmation All related Jira items should be marked as won't fix.. The module manifest was updated to include a method for creating admin host page when a module is installed. The method used was to add nodes to the Module component which defined the page. This should be updated to include all of the page sub-elements in a single Page element. The component should include the ability to define whether the page is a host page or admin page. It should include the ability to flag whether a module appears in the common or advanced sections of the menu. The page name, icon file(s) and description should be included as elements withing the component. An example entry would look like: A page type must be defined as either admin or host (case insensitive). The common flag will default to false if not defined. The name is the only required element in the page element. The \"common\" flag should be stored as a \"term\" on the page and the control panel should use this \"term\" to determine what gets displayed in the common section. The manifest section of the Wiki should be updated to reflect the manifest changes. ! Confirmation This requires updating all existing admin modules to use the new format.. The initial version of added two tokens for use in a SPA module (the moduleId and isSuperUser). For completeness we should the ability to retrieve the following: TabId Update EditMode Change PortalId to use OwnerPortalId in the background so that this is usable for cross portal module sharing.. 1. the password tooltip show policy should based on site settings, such as site settings config as: when the typed value in password box doesn't match to this setting, the tooltip will show when password box trigger onblur event, the tooltip will show as: as default will only show first line as the and validation expression will not config. 2. when put mouse on the meter bar, it will always show the tooltip, no matter whether password match the setting. 3. typing in Confirm should show x in field until it matches password field.. h2. Card As a super-user, when I create a new portal, I want the system to use a portal template, the admin template and the list of module defined Admin Host pages to create the new portal. h2. Conversation If a developer has defined an Admin Host page in their module manifest, then this information should be used to generate the appropriate pages in any portals that are created after the module is installed. h2. Confirmation. Create file type permissions manager. h2. Card As an super-user, I would like to be able to set upload permissions on file-types. I should be able to delegate management of individual file types to administrators and lock other file types to only be manageable by super-users. As an administrator, I want to be able to assign upload permissions to users or roles for file-types which have been delegated by a super-user. h2. Conversation The system should come with a set of pre-defined file extensions as defined by our current Host Extensions list. All file types will initially be manageable by super-users with the exception of the following types: jpg, jpeg, mpg, mpeg, mp4, wmv, mov, gif, png, svg, doc, docx, ppt, pptx, xls, xlsx, pdf, txt, xml. The image and movie file types (jpg, jpeg, mpg, mpeg, mp4, wmv, mov, gif, png) will have an initial permission which includes the registered user role. h2. Confirmation This should be built as a SPA module.. h2. Card As a module developer, I want to be able to automatically create an admin or host tab during module installation and have the module automatically added to that page. h2. Conversation The developer should be able to use the DNN manifest to automatically create the appropriate page. Page permissions should be automatically set based on the menu and should not require configuration in the manifest. The module should be able to set a flag to determine if the page is displayed in the common or advanced settings sections of the Admin Host menu. IF an admin page is defined, then it should be created for all portals in the current The manifest logic should detect if the page already exists and if the module already exists on the page. h2. Confirmation Uninstall of the module should delete the associated page if this is the only module on the page. This will require modifying all of the existing Admin Modules which have already been packaged.. h2. Card The Configuration Manager is used for managing configuration files for a DNN installation. The Configuration Manager is just a UI that exists over the top of the core platform APIs. The UI components should be extracted into a separate module, however the underlying public API and data components should remain part of the platform. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. h2. Confirmation. h2. Card The SQL Module is used for uting SQL queries against the DNN database. The SQL Module is just a UI that exists over the top of the core platform APIs. The UI components should be extracted into a separate module, however the underlying public API and data components should remain part of the platform. All functionality for saving or loading queries should be included as part of the module and is not considered part of the public API. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. h2. Confirmation. The Professional Preview module is no longer used in the DNN platform. This module should be removed from the platform.. h2. Card The Module Creator is used for building simple modules for DNN. The Module Creator was originally a standalone module. The UI components should be extracted into a separate module, including the underlying APIs and database components. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. h2. Confirmation. h2. Card The Dashboard is an extensible module that is used for displaying important information a site. All Dashboard related APIs and database objects should be included as part of the module and should not remain in the DNN platform. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. The API namespaces should be updated to match the module API. h2. Confirmation Note: This a BREAKING CHANGE.. h2. Card The Console module is used for displaying multiple page icons on a single page. It is intended as a navigation aid for the host and admin menus. The UI components and all API and database artifacts should be extracted into a separate module. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. This should be marked as a system module. h2. Confirmation. h2. Card The Vendors Module is used for managing vendors and banners within DNN. The vendors and banners modules, APIs and database structures should be removed from the core platform and extracted into a standalone solution consisting of the Vendors module and a Banners module. The Banners module will have a dependency on the Vendors module. The vendors module should create a page on the Admin menu when installed. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. This module will move to a separate GitHub project in the organization. We can drop stored procedures, but should not remove the tables in the core platform. Install of this module should check to ensure the table is not dropped. h2. Confirmation Note: This is a BREAKING CHANGE. h2. Card The User Manager is used for managing portal and host users for a site. The User Manager is just a UI that exists over the top of the core platform APIs. The UI components should be extracted into a separate module, however the underlying public API and data components should remain part of the platform. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. The new user management module should manage both portal users and host users. Host users should only be visible and manageable by other host users. Once installed, the user manager will only exist in the Admin menu. The host menu user management page should be removed on upgrades. h2. Confirmation. h2. Card The Role Manager is used for managing roles and role members for a site. The Role Manager is just a UI that exists over the top of the core platform APIs. The UI components should be extracted into a separate module, however the underlying public API and data components should remain part of the platform. h2. Conversation This initial conversion effort is only focused on conversion to a module and shall not include conversion to a MVC or SPA module. h2. Confirmation. In the Dynamic Content Type Manager, when I attempt to reorder a Content Type field, the field order is not maintained. Steps: 1. Open the DCC Manager 2. Edit a content type with multiple fields 3. Attempt to reorder the content fields Expected: 1. Content fields are reordered as indicated. 2. Content field order is maintained if you refresh the editor See the attached video. The Knockout javascript library version stored under is poiting to version (this version is only here for legacy reason). After discuss with we agree that we should sync it to the same version of KnockoutJs used in the Javascript Library Package (this is We should review if it is possible to make the Javascript LIbrary Package responsible to mantain the two versions in sync (if possible) so this issue won't come back again next time Knockout LIbrary Package is upgraded.. h2. Card As an administrator, I want to be able to create a new workflow. h2. Conversation When I click the \"Create Workflow\" in the main screen, the workflow creation screen should expand open at the top of the workflow list. The Workflow creation screen should include a Workflow Name and a Workflow Description. There should be a save and cancel button at the bottom of the panel. Clicking cancel, closes the panel and resets the fields on the panel to empty. Clicking save creates a new workflow and closes the panel. The workflow list is then refreshed. A new workflow should include a Draft and Published state.. h2. Card As an viewer, I want to be able to view content. h2. Conversation Content should be displayed using the selected content-type, and view-template If a content editor has not configured the module then the module should initially be displayed using an HTML content type and a \"Getting Started\" template. This should be a standard Global Template which is installed with the DCC. h2. Confirmation. Quick Settings view for DCC. h2. Card As a content manager, I want to be able to set the content type, view template and edit templates for a specific instance of the DCC viewer module. h2. Conversation The Content Type drop down list should display all of the portal and global types available in the current portal. The view template drop down list should display all the view templates associated with a specific content type. The edit template drop down list should display all of the view templates associated with a specific content type. In addition, the edit template list will include an option to use an auto-generated view. The auto-generated option will be the default option. If there is a file that matches the following pattern then it should be the default edit view: For example, if you have a view template named then file named will automatically be selected if it exists, otherwise the auto-generated option will be the default value. If the current module does not have any settings configured, then the view should show an informational message at the top of the view notifying the user that they need to configure the module. h2. Conversation. h2. Card As an administrator, I want to have a link from the module action menu to the Dynamic Content Type Management page. h2. Conversation It can't be assumed that the Dynamic Content Type Management module exists on an admin page. The system should be able to find whatever page wherever it is located in the system. This should open with the Templates tab open. It should enforce the permissions. h2. Confirmation. Edit Content using Auto-Generated Edit template. h2. Card As an administrator, I want to be able to quickly access a simple set of module specific settings. h2. Conversation A developer should be able to define a view that is used for displaying the quick settings. Quick settings should be definable for user controls, razor scripts, and html views. Quick settings should be displayed in their own drop down that is rendered as part of the Module Action Menu. This menu should only be displayed if the module includes a quick settings view. Quick settings should not use a postback but should rely on AJAX interactions. Quick settings should automatically be displayed when a module is first added to a page. h2. Confirmation. Create Quick Settings Framework. At this point a user can copy all the template code and then paste it into our text area and create a template. I think it'd be a useful improvement to add the ability to upload existing templates in the \"Create Template\" tab. Templates should be uploaded to the correct location.. So with our Dynamic Content Type Manager we have a pagination built into and set at 5 items per page. This is OK if you're only using 5 - 10 Content Data Types or Templates When you start have dozens, like 15 or more, this means you could be left clicking 3 or more times to find a Content Data Type or Template. Could we not add a page drop down as we have in Event Viewer, File Manager, etc? If we did this Lorraine would need to document the additional functionality Confirmation This should be implemented as a dropdown list as part of pager. By default we should have sizes for 10, 25 and 50 items.. h2. Card As a content type editor, I want to be able to easily insert the code for a specific razor helper into a template that I am editing. h2. Conversation There should be a context menu which allows you to insert the code for common razor helpers at current cursor location. This should include HTML helpers, DNN helpers and Custom Helpers. HTML and DNN helpers should be defined in a host specific config file which is located in the folder. Custom helpers will be defined in a portal specific config file which is located in the portals config folder. The helper config file should use the basic Visual Studio Code Snippet file format ( The initial release version will only support the header title and the snippets code block, however, any valid snippet file should be readable. If the title block or code block contains a token then that resource key should be used to localize the text. The associated resource files should be located in folder contained in the config folder. h2. Confirmation. Add row highlight on hover to grids. h2. Card In the Content Type, Data Type, and Content Field grids, the row should be highlighted in light blue on hover. In addition, highlighted row should include a down arrow icon as indicated when a grid uses \"in grid editing\" if the grid expands for editing then show the arrow, if the user gets a \"new\" page for editing then don't show the arrow) Clicking on a row should default to the same behavior as clicking on the edit icon for that row. If a row expands, then the row should remain highlighted and clicking the row a second time should cancel the edit and close the row. The up-arrow for closing an expanded row is only shown on hover. See the attached screenshots for examples of this behavior. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to view and edit content-fields in multiple languages. In a multi-lingual site: changing the culture in the translations drop-down will change the values displayed in the fields corresponding to the selected culture If the Content Field is saved, and no values have been added for the portal default language, then the following actions should occur: If the user chooses to continue editing, the dialog should be closed and nothing should be saved. ** if the user chooses to use the current values as default values, then the values should be save for both the current translation language and for the default language. In a single language site, the Translations label and field should not be displayed. Only the Name, Label and Description values need to be localized. The Data Type list will not be localized. h2. Conversation Should we use a translation service like Google or Bing to auto create the default translation? h2. Confirmation. h2. Card The Dynamic Content Manager currently uses a left hand navigation bar design. This should be changed to use a top tab design as shown in the attached screen shot. h2. Conversation There should be no \"animation\" affect when switching between tabs. CSS should be created using LESS. h2. Confirmation. Regardless, we are completely replacing CRM in DNN 8 with a new version. We are holding off because of the potential risk. As a result, it does not make sense to do an optimization for which will complicate our ability to do the upgrade in DNN 8. This should be held and re-evaluated once the CRM upgrade work is complete.. h2. Card As a developer, I want to be able to use a .SQL extension in addition to the extension for naming platform SQL scripts. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to re-order content fields. This order is stored and provided to a client module for rendering the ContentItem editor. h2. Conversation h2. Confirmation. Can't change the file name. h2. Card As an administrator, I want to be able to create a new content template. A Template will consist of a name, an associated content type and template file. The editor will use the standard CodeMirror component which is included in the platform. The editor for new Template should be displayed as a new page which animates into view from the left toolbar. The template file field should default to a template folder in the current portal with a file name. When the save button is clicked, the template should be saved and the template record should be save. When the cancel button is clicked, the data is discarded and the editor is closed and the Content Type Edit view for the parent Content Type is displayed. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to view a list of existing Content Templates. I should also be able to search for Templates based on the Template Name or Type Name. The list should show me the Template names, the template type, which content type the template is associated with and whether the template is a system template. As I move my cursor over a row in the list, I should see icons for the item which allows me to edit or delete a given Template. Above the Template list, there should be a button for creating a new Template. The Template List should show a pager control if the list grows beyond 10 items. All values should be displayed in the current language selected by the user. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to edit a Data Type. A Data Type will consist of a Type Name, a base type and boolean indicator whether the type is a system type. The editor for the Data Types should be displayed just below the data type in the list. Only Host users should be able to set the system type switch. Once a type is marked as a system type it cannot be reverted back to a non-system type. When the delete button is clicked, it will delete the type from the system, hide the editor and then update the data type list. When the save button is clicked, the record is saved, the editor is hidden and the list is updated to display the new Data Type. When the cancel button is clicked, the data is discarded and the editor is hidden. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to create a new Data Type. A Data Type will consist of a Type Name, a base type and boolean indicator whether the type is a system type. The editor for new Data Types should be displayed at the top of the data type list, just below the table header. Only Host users should be able to set the system type switch. All Data Types will default to being portal specific types for the portal in which they are created. The delete button should not be visible on the editor. When the save button is clicked, the record is saved, the editor is hidden and the list is updated to display the new Data Type. When the cancel button is clicked, the data is discarded and the editor is hidden. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to view a list of existing Data Types. I should also be able to search for Data Types based on the Type Name. The list should show me the data type names, the date the type was created and whether the type is a system type. Above the Data Type list, there should be a button for creating a new Data Type. Clicking on a row in the list should expand the row to show the data type editor screen. The Data Type List should show a pager control if the list grows beyond 10 items. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to edit a Content Field to a Content Type. A Field will consist of a Name, a Label, a Data Type, and a Description. The editor for new Content Types should be displayed as a new page which animates into view from the left toolbar. The Content Field title bar will appear below the Content Type title bar. When the save button is clicked, the field record is saved, the editor is closed and the Content Type Edit view for the parent Content Type is displayed. When the cancel button is clicked, the data is discarded and the editor is closed and the Content Type Edit view for the parent Content Type is displayed. h2. Conversation h2. Confirmation We are going to hold off implementing validator functionality until more of the system is complete.. h2. Card As an administrator, I want to be able to add a Content Field to a Content Type. A Field will consist of a Name, a Label, a Data Type, and a Description. The editor for new Content Types should be displayed as a new page which animates into view from the left toolbar. The Content Field title bar will appear below the Content Type title bar. When the save button is clicked, the field record is saved and the screen is converted to a Content Field edit screen: Content Field name displayed in the title bar, the delete button displayed and -the validator list is displayed-. When the cancel button is clicked, the data is discarded and the editor is closed and the Content Type Edit view for the parent Content Type is displayed. h2. Conversation h2. Confirmation We are going to hold off implementing validator functionality until more of the system is complete. When the save button is clicked, then you can return to the Content Type screen.. h2. Card As an administrator, I want to be able to edit a Content Type. A Content Type will consist of a Type Name, a Description and a boolean indicator whether the type is a system type. The editor for new Content Types should be displayed as a new page which animates into view from the left toolbar. Only Host users should be able to set the system type switch. Once set to a system type and saved, you cannot revert a content type to a portal specific type. The page title bar will include the general Content Type and the name of the Content Type. The far right of the bar will include a close button which takes the user back to the default Content Type list view. When the save button is clicked, the record is saved and the screen is closed and the user is taken back to the default Content Type list view. When the cancel button is clicked, the data is discarded and the editor is closed and the Content Type list view is displayed. When the delete button is clicked, the content type and any associated content fields are deleted, the screen is closed, and the user is taken back to the default Content Type list view. The Content Type edit screen will include a Content Field list described in a separate story h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to be able to create a new Content Type. A Content Type will consist of a Type Name, a Description and a boolean indicator whether the type is a system type. The editor for new Content Types should be displayed as a new page which animates into view from the left toolbar. Only Host users should be able to set the system type switch. All Content Types will default to being portal specific types for the portal in which they are created. The page title bar will include the general Content Type and an indicator that this is a new record. The far right of the bar will include a close button which takes the user back to the default Content Type list view. When the save button is clicked, the record is saved and the screen is converted to a Content Type edit screen: Content Type title displayed in the title bar, the delete button displayed and the content field list is displayed. When the cancel button is clicked, the data is discarded and the editor is hidden and the Content Type list view is displayed. h2. Conversation h2. Confirmation. View and Search Content Type list. h2. Card As an administrator, I want to be able to view a list of existing Content Types. I should also be able to search for Content Types based on the Type Name, Type Label or Description. The list should show me the content names, the date the type was created and whether the type is a system type. As I move my cursor over a row in the list, I should see icons for the item which allows me to edit or delete a given Content Type. Above the Content Type list, there should be a button for creating a new content type. The Content Type List should show a pager control if the list grows beyond 10 items. h2. Conversation h2. Confirmation. h2. Card As an administrator, I want to have a single module that allows me to manage and edit Dynamic Content Types and the associated data types, validators and templates. h2. Conversation The module should be built using the new SPA module type. This module will be a showcase for how to leverage the new SPA module type in DNN 8. This module could be added to any page but should have a page in the admin menu by default. Anyone with View permissions on the module should be able use the module. h2. Confirmation All buttons in the DCC should be rendered as links with appropriate styling to display them as buttons where desired.. DNN upgrades are based on a 3 part version number representing the platform, major and minor version numbers. Each version component uses a 2 digit integer with a leading zero for padding This version number uniquely identifies a release and is used as an identifier when creating database upgrade scripts. Every release may be composed of numerous builds, any one of which might include database changes. All database changes are included in a single script for any given version. This approach to versioning results in difficulty supporting upgrades from Betas to RCs to final release. Also, this script versioning scheme often results in merge conflicts as numerous developers need to edit a common script file. These merge conflicts complicate accepting community pull requests and in rolling back changes when necessary. h2. Card As a developer I want to create a uniquely named database script file for every Pull Request. The system should automatically apply scripts based on the version number and order number specified in the script name. Scripts should follow the following naming convention: where the token uses the standard DNN version number and the token is a simple integer with no padding characters h2. Conversation The system should assume that a script without the order token is applied before any scripts with an order number. It is the code committers responsibility to ensure that scripts are uniquely numbered when checking in scripts. h2. Confirmation. DNN upgrades are based on a 3 part version number representing the platform, major and minor version numbers. Each version component uses a 2 digit integer with a leading zero for padding This version number uniquely identifies a release and is used as an identifier when creating database upgrade scripts. Every release may be composed of numerous builds, any one of which might include database changes. All database changes are included in a single script for any given version. This approach to versioning results in difficulty supporting upgrades from Betas to RCs to final release. Also, this script versioning scheme often results in merge conflicts as numerous developers need to edit a common script file. These merge conflicts complicate accepting community pull requests and in rolling back changes when necessary. h2. Card As a developer I want to create a uniquely named database script file for every Pull Request. The system should automatically apply scripts based on the version number and order number specified in the script name. Scripts should follow the following naming convention: where the token uses the standard DNN version number and the token is a simple integer with no padding characters h2. Conversation The system should assume that a script without the order token is applied before any scripts with an order number. It is the code committers responsibility to ensure that scripts are uniquely numbered when checking in scripts. h2. Confirmation. h2. Card As a developer, I want to create a Settings view for my SPA module. The Settings view should be displayed as a tab on the module settings page and should otherwise operate exactly like the settings page for Web Forms based modules. h2. Conversation h2. Confirmation We should use the method defined in Quick Settings to inject the settings view.. h2. Card As a developer, I want to create a Settings view for my MVC module. The Settings view should be displayed as a tab on the module settings page and should otherwise operate exactly like the settings page for Web Forms based modules. h2. Conversation h2. Confirmation. h2. Card As a developer, I want to be able to use Anti-forgery tokens with my SPA module. An token should be created which developers can include in their HTML. The token should be The developer should be able to decorate their web service methods with the appropriate attribute and have it correctly validate the token generated in the HTML. h2. Conversation h2. Confirmation. h2. Card As a developer, I want to be able to use Anti-forgery tokens with my MVC module. The HTML helper should be modified to work in the DNN framework. The developer should be able to decorate their action methods with the appropriate attribute and have it correctly validate the token. h2. Conversation There is no requirement to support the obsoleted overloads of the helper or attribute. h2. Confirmation. h2. Card As a developer, I want the content I create using the DCC API to get automatically indexed for later searching. The indexer should only index the actual field values and should not pick up any of the field names. h2. Conversation h2. Confirmation. h2. Card As a developer, I want to call an API to create, read, update and delete content which is of a specific contenttype. I should be able to create an individual content item or multiple content items (a list of content items) associated with a specific module instance. If multiple content items are associated with a specific module, then I should be able to specify an order for the items and to retrieve a subset of items based on a page number and page size. h2. Conversation Using a hidden \"order\" field is sufficient to deal with the ordering requirement. There is no requirement to be able to order records based on arbitrary fields. Content should be stored as a serialized JSON object in the content item store. h2. Confirmation. h2. Card As a developer, I would like to have access to a set of common datatypes with a new DNN installation. Common DataTypes should include: Text Time Boolean File Url Markdown h2. Conversation We may not need RichText or Markdown. We also might not want to breakdown the datetime. h2. Confirmation These types cannot be deleted or updated.. h2. Card As a developer, I want to be able to create, read, update and delete DataTypes to be used with DCC ContentTypes. These DataTypes should not define any presentation logic and instead should strictly identify the type of content to be stored in a single field. h2. Conversation A DataType cannot be deleted if it is used in any existing ContentType. Attempting to call a method which deletes the DataType should result in an error. -A DataType should raise a warning if you attempt to alter the datatype where data has already been stored using the datatype A contentitem has been created that includes the h2. Confirmation A DataType should raise an error if you attempt to alter the datatype where data has already been stored. The API should include a flag which allows you to force the datatype change.. h2. Card As a developer, I want to call an API to allow me to Create, Read, Update or Delete ContentTypes. ContentTypes which are created and managed by the DCC should be differentiated from ContentTypes which were created outside of the DCC. A contenttype is just a collection of contentfields. It does not define anything related to how the content might be presented or where content might be stored. It is purely a container. h2. Conversation It is important for the DCC to not get confused by existing ContentTypes which may not conform to the new DCC system. Are contenttypes defined for a portal or a host? h2. Confirmation ContentTypes are defined per portal.. The allows the developer to define a method which will be called to retrieve a collection of module actions. Additional error handling logic should be added to ensure that null reference exceptions don't occur if the method is not properly defined. If the expected method does not exist, then a should be thrown which includes a message indicating the full type and method name that was not implemented. See line 81 of the for a case where a null reference exception may occur.. h2. Card As part of our move to more web service based development, we would like to open up the ability to call platform services from external systems in a secure manner. The simplest approach is to use an HMAC based signature which can be used for both HTTP and HTTPS connections. A custom authorization attribute should be created which implements the HMAC protocol for authorization. h2. Conversation We will not consider using the same API for both internal and external access. h2. Confirmation. SPIKE - Investigate HMAC based authorization for Web Services. h2. Card DNN currently uses a customized membership implementation to handle managing users and This forms the foundation of our security membership is a roles based security system and requires extra effort to enable the integration of claims based systems like OAuth In DNN next we will be using the Identity framework as the foundation of our application security. Identity is a more modern framework and provides improved extensibility and native support for both claims based and role based authorization. As part of our desire to implement OAuth and HMAC security for web services in DNN we would like to determine the level of effort required to implement identity in the current system. As part of the spike, we would like to determine how invasive the change would be, and how it might impact an OAuth server h2. Conversation What is the expected output? Report documenting the findings. The recommended approach (using identity server h2. Confirmation. Create custom JavaScript HTML tokens. h2. Card HTML does not have a mechanism for easily uting server side logic. As part of the SPA module support HTML modules will include support for using DNN tokens. The use of tokens provides the ability to link standard HTML to server side logic. HTML views need to be able to define the JavaScript which is needed to properly render the HTML. Two New standard tokens should be created which defines the JavaScript needed for a view. These tokens will use a new token pattern: Token Type 1: These tokens will call the standard DnnJSInclude methods with the defined parameters. The propertybag is a standard JSON object and includes parameter names and values which are used to call the appropriate include methods. The order of properties in the propertybag is unimportant and should not impact the ability to bind to the appropriate JSInclude methods. Token Type 2: This token variation will load predefined JavaScript packages which have been installed as JavaScript extensions. This token should just be a call to the call on the JavaScript class with the appropriate parameters. h2. Conversation The JavaScript token should be implemented as a standard DNN token which is usable by any module using the TokenReplace engine. This token should be disabled by default and a module must affirmatively indicate that this replacement should be enabled. h2. Confirmation. SPIKE - Support Master Layouts. SPIKE - Support Action Filters. h2. Card As part of MVC support the solution should support the use of standard Action Filters. This is a spike to determine the level of effort needed to implement this feature. h2. Conversation DNN must support the following Action Filters Action - used to provide custom code before and after the ution of the action Exception - used to provide exception handling within an Action h2. Confirmation. h2. Card MVC Modules should behave the same as any other DNN module when it comes to packaging. An MVC module should be installable using a standard DNN module manifest. Since MVC modules use a controller action as the primary method for rendering content, the manifest should allow the module to define a controller and action to render for specific module controls. The DNN framework should use the defined controller action to render the requested module control following the standard DNN convention. While an MVC module may define a number of module controls, it should also be able to define a controller action to use without using a predefined control. When installed, MVC modules should be installed in the DesktopModules folder using the same conventions as more traditional modules. h2. Conversation Need to define the module control naming convention h2. Confirmation Modules should be created in the subfolder.. h2. Card The MVC framework uses HTML helpers to simplify rendering of common HTML elements. Modules written using the MVC framework should be able to utilize all core HTML helpers including: h3. Form Helpers TextBox() RadioButton() DropDownList() Password() h3. Validation Helpers ActionLink h2. Conversation Should add URL and AJAX helpers h2. Confirmation. h2. Card Currently DNN modules use an IActionable interface to define custom module actions which are rendered in the Module Action Menu. The purpose of the interface is to define a well known method that can be called by the framework to retrieve a collection of actions defined by the module developer. Each controller action may be used to render a view and thus should be able to define a collection of actions which the framework can retrieve and render. h2. Conversation A custom method attribute could be used to identify a method that returns a collection of actions. The method must implement a predefined signature but could be located in any class which is accessible by the core framework. It should not be necessary to define the action items in the same controller as the action which relies on the action collection. h2. Confirmation The two attributes should be: - This attribute is used to identify a type and a method which can be called by the framework to retrieve a collection of ModuleActions. By convention, if the type is not defined, it will assume the method exists in the controller. By convention, if the method is not defined, it will assume a method name which corresponds with the action decorated by the Attribute instance the Edit action method would have a corresponding GetEditActions method).. h2. Card The DNN core platform uses modules as the primary mechanism for adding new functionality that includes both business logic and user interface elements. The current implementation is based on web forms and allows module developers to use web controls or server controls for rendering the UI. The platform should be extended to allow module developers to create modules using the MVC framework. A module should support the use of MVC views using the Razor view engine. h2. Conversation DNN must support the use of C razor views. Support for VB based views is optional. MVC views should have access to intrinsics like the Model and ViewBag objects. MVC views must be rendered inside the content area of the module container without injecting any additional HTML elements beyond what is defined in the container and the view. All module views should inherit from a DNN specific base viewpage and should be able to define the model type as part of the view definition. A sample implementation might look like: DnnViewPage It should also support implicit inheritance and then define a model using the helper. h2. Confirmation. h2. Card The Site Log is used to log system activity. Since it was first introduced, newer and better logging options have been added to the platform. All site log APIs and associated database schema and SPROCs should be removed from the core platform and included in the SiteLog module. h2. Conversation As part of extracting this module, upgrade logic should be added to the platform to remove any scheduled tasks and stored procedures related to this feature. The sitelog module should also be removed from the appropriate extensions tables. The sitelog table will remain to avoid any potential data loss. The Site Log module should be moved to and registered in the Forge. h2. Confirmation There should be no site or host settings referencing SiteLog settings. SiteLog related settings should be deprecated in Portal and Host classes but can be completely removed in cases where the class only exists to support SiteLog. NOTE: This will introduce a known breaking change for anyone who might call the SiteLog APIs. It will also remove a feature that might be in use on some websites.. Add a method to allow to delete (soft) modules. If we are going to include services, then we just include services. I don't like the idea of including a \"web method\" which will soon be obsolete. Instead we should add a web service which would be of more value than a web method.. This module should be moved to a separate github repo in the organization.. h3. CARD As a user, I want to see the getting started content in the same language as my website. h3. CONVERSATION We do not want to maintain multiple versions of the formatted html (having the html doc in multiple languages is not desired). Which culture should be used? h3. CONFIRMATION If the user language is in an unsupported language, then we should fall back to English Localization should use the to be consistent with static localization.. h3. CARD As a user I want to see content that is specific to my DNN product and product version. h3. CONVERSATION h3. CONFIRMATION For any version the framework should request content using the following format: Evoq Content \"DNN PE\" Anticipated server side directory structure. Descriptions: DAM throws an error when enabling group mode Steps: - Install DNN Platform - Create a new page and delete the HTML module - Add a Social Groups module and auto configure it - Create a new group - Add a DAM module for the group - Configure it to run in group mode Expected Outcome: The module must only load the group folder Actual Outcome: There is an error, see screenshot. Install EXCESS customer site Upgrade it to latest Social Suite build Add a new document or 3 to Portal 0, 1, 2, etc Run the Search Crawler job Check the file: Actual Result: - SearchCrawler - Skipped previous URI as its ContentType is unindexable: image x-icon Expected Result: This is marked as WARN or below and does not appear as an ERROR in the default setup. h3. Card As a site administrator, I should be able to resend an email with a verification code. h3. Conversation A site administrator should be able to go to the user account page and resend a verification code to the user. * The button for resending the verification email should only be visible if the user account is unauthorized and the Account Registration mode is set to \"Verified\". After upgrading my site to DNN cant Edit HTML Or set page module settings. Full Control - Module (P9). The Subscription and digest notification API should have XML comments for all public methods, classes and enumerations.. Specify Location. h3. Card As a developer, I want to be able to specify where the library is loaded on the page. h3. Conversation h3. Confirmation If the location is not specified, then the library should be loaded at the bottom of the page. The locations where a library can be loaded: FormTop ** FormBottom. View Extension Dependencies. View Dependent Extensions. h3. Card As a super user, I want to be able to uninstall a JavaScript Library extension h3. Conversation h3. Confirmation If a JavaScript extension has other extensions which depend on this particular extension, then it cannot be removed unless a later version of the library is already installed.. We currently have numerous places in our code where we are using a pragma directive to suppress compiler warnings about using obsolete methods. The pragma warnings should be removed and the code changed to use the updated methods. The attached list shows all the existinng directives which should be fixed.. ", "contenttype": "application/json", "created": 737603, "id": 17, "language": "en", "user_name": "jbrinkman"}]}